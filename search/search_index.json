{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4e2a\u4eba\u77e5\u8bc6\u5e93 \u00b6","title":"Home"},{"location":"#_1","text":"","title":"\u4e2a\u4eba\u77e5\u8bc6\u5e93"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/CSS/clear%E7%90%86%E8%A7%A3%E9%94%99%E8%AF%AF/","text":"\u5bf9\u4e8eCSS\u7684\u6e05\u9664\u6d6e\u52a8(clear)\uff0c\u4e00\u5b9a\u8981\u7262\u8bb0\uff1a\u8fd9\u4e2a\u89c4\u5219\u53ea**\u80fd\u5f71\u54cd\u4f7f\u7528\u6e05\u9664\u7684\u5143\u7d20\u672c\u8eab\uff0c\u4e0d\u80fd\u5f71\u54cd\u5176\u4ed6\u5143\u7d20**","title":"Clear\u7406\u89e3\u9519\u8bef"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/CSS/css%E5%88%9D%E5%AD%A6%E8%80%85%E9%9C%80%E8%A6%81%E7%90%86%E8%A7%A3%E7%9A%84%E6%A6%82%E5%BF%B5/","text":"\u521d\u5b66\u8005\u4e00\u4e9b\u6982\u5ff5\u9700\u8981\u5b66\u4e60 \u00b6 \u6587\u5b57\u5927\u5199\u53ef\u4ee5\u7528CSS\u6765\u8bbe\u5b9a px\u662f\u7edd\u5bf9\u957f\u5ea6,em,ex\u662f\u76f8\u5bf9\u957f\u5ea6 \u957f\u5ea6\u5206\u7edd\u5bf9\u957f\u5ea6\u548c\u76f8\u5bf9\u957f\u5ea6 \u529f\u80fd\u7b26,\u4ee5\u51fd\u6570\u7684\u65b9\u5f0f\u6307\u5b9a,\u50cf rgba() url() \u4f2a\u7c7b\u9009\u62e9\u5668,\u4e00\u4e2a\u5192\u53f7 :first-child \u4f2a\u5143\u7d20\u9009\u62e9\u5668,\u4e24\u4e2a\u5192\u53f7 ::first-line 5\u548c6\u6709\u4ec0\u4e48\u5206\u522b? \u5173\u7cfb\u9009\u62e9\u5668 \u7a7a\u683c > ~ + \u6807\u7b7e\u5206\u4e3a\u5757\u7ea7\u5143\u7d20\u548c\u5185\u8054\u5143\u7d20\u4e24\u7c7b \u5757\u7ea7\u5143\u7d20\u4e0edisplay\u4e3ablock\u4e0d\u662f\u4e00\u4e2a\u6982\u5ff5 width\u7684\u9ed8\u8ba4\u503c\u662fauto","title":"Css\u521d\u5b66\u8005\u9700\u8981\u7406\u89e3\u7684\u6982\u5ff5"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/CSS/css%E5%88%9D%E5%AD%A6%E8%80%85%E9%9C%80%E8%A6%81%E7%90%86%E8%A7%A3%E7%9A%84%E6%A6%82%E5%BF%B5/#_1","text":"\u6587\u5b57\u5927\u5199\u53ef\u4ee5\u7528CSS\u6765\u8bbe\u5b9a px\u662f\u7edd\u5bf9\u957f\u5ea6,em,ex\u662f\u76f8\u5bf9\u957f\u5ea6 \u957f\u5ea6\u5206\u7edd\u5bf9\u957f\u5ea6\u548c\u76f8\u5bf9\u957f\u5ea6 \u529f\u80fd\u7b26,\u4ee5\u51fd\u6570\u7684\u65b9\u5f0f\u6307\u5b9a,\u50cf rgba() url() \u4f2a\u7c7b\u9009\u62e9\u5668,\u4e00\u4e2a\u5192\u53f7 :first-child \u4f2a\u5143\u7d20\u9009\u62e9\u5668,\u4e24\u4e2a\u5192\u53f7 ::first-line 5\u548c6\u6709\u4ec0\u4e48\u5206\u522b? \u5173\u7cfb\u9009\u62e9\u5668 \u7a7a\u683c > ~ + \u6807\u7b7e\u5206\u4e3a\u5757\u7ea7\u5143\u7d20\u548c\u5185\u8054\u5143\u7d20\u4e24\u7c7b \u5757\u7ea7\u5143\u7d20\u4e0edisplay\u4e3ablock\u4e0d\u662f\u4e00\u4e2a\u6982\u5ff5 width\u7684\u9ed8\u8ba4\u503c\u662fauto","title":"\u521d\u5b66\u8005\u4e00\u4e9b\u6982\u5ff5\u9700\u8981\u5b66\u4e60"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/CSS/%E7%9B%92%E5%AD%90%E7%9A%84%E7%90%86%E8%A7%A3/","text":"Inline-block\u5c31\u662f\u89e3\u51b3\u4e00\u4e9b\u5757\u7ea7\u5143\u7d20\u5982\u4f55\u5185\u8054(\u4e0d\u6362\u884c)\u663e\u793a\u7684\u95ee\u9898\u5427 \u5757\u7ea7\u76d2\u5b50\u548c\u5185\u8054\u76d2\u5b50.\u524d\u8005\u8d1f\u8d23\u7ed3\u6784(\u662f\u5426\u6362\u884c),\u540e\u8005\u8d1f\u8d23\u5185\u5bb9. list-item\u9700\u8981\u663e\u793a\u7b26\u53f7,\u6240\u4ee5\u9664\u4e86\u672c\u8eab\u7684\u5757\u76d2\u5b50,\u53c8\u6574\u4e86\u4e00\u4e2a\u9644\u52a0\u76d2\u5b50 \u6700\u7ec8,\u65e0\u8bba\u662f\u5757\u7ea7\u76d2\u5b50\u8fd8\u662f\u5185\u8054\u76d2\u5b50\u90fd\u6709\u4e24\u4e2a\u76d2\u5b50,\u4e00\u4e2a\u662f\u5916\u9762\u7684,\u4e00\u4e2a\u662f\u91cc\u9762\u7684.\u540c\u6837,\u5916\u9762\u7684\u8d1f\u8d23\u7ed3\u6784,\u662f\u9762\u8d1f\u8d23\u5185\u5bb9. \u540d\u5b50\u518d\u4f18\u5316\u4e00\u4e0b. \u5916\u9762\u7684\u76d2\u5b50\u53eb\u5757\u7ea7\u76d2\u5b50,\u91cc\u9762\u7684\u53eb\u5730\u7ea7\u5bb9\u5668\u76d2\u5b50. \u6240\u4ee5\u5185\u8054\u7684\u5143\u7d20\u4e5f\u662f\u53ef\u4ee5\u8bbe\u7f6eheight,width\u7684.\u5c31\u662f\u56e0\u4e3a\u67092\u4e2a\u76d2\u5b50.\u5916\u9762\u7684\u662finline,\u91cc\u9762\u7684\u662fblock,block\u5c31\u662f\u53ef\u4ee5\u8bbe\u7f6e\u9ad8\u5bbd\u7684. display:inline-block display:inline-table \u5982\u56fe","title":"\u76d2\u5b50\u7684\u7406\u89e3"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/CSS/%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E7%90%86%E8%A7%A3/","text":"\u9009\u62e9\u5668selector \u00b6 . foo {} . bar {} h1 span {} // h1\u7684\u540e\u4ee3\u4e2d\u6240\u6709\u7684span h1 > span {} // h1\u7684\u5b69\u5b50\u4e2d\u6240\u6709\u7684span h1 + span {} // h1\u540c\u7ea7\u7684\u5144\u5f1f\u4e2d\u6240\u6709\u7684span , \u8fd9\u91cc\u7684 + \u53ef\u4ee5\u7406\u89e3\u4e3aand , \u5c31\u662f\u5e76\u5217\u7684\u610f\u601d h1 . foo {} // \u5e26\u6709 . foo\u7c7b\u7684h1 a : link {} // \u4f2a\u7c7b selector : pseudo-class { property : value } p : first-line {} // \u4f2a\u5143\u7d20 selector : pseudo-element { property : value ;} [ title ] {} // \u5e26\u6709title\u5c5e\u6027\u7684\u5143\u7d20 # id span {} # id > span {} # id + span {} # id . foo {} // \u8fd9\u4e2a\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u5408\u6cd5\u7684 , id\u672c\u8eab\u5df2\u7ecf\u80fd\u591f\u5b9a\u4f4d\u5143\u7d20 .","title":"\u9009\u62e9\u5668\u7684\u7406\u89e3"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/CSS/%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E7%90%86%E8%A7%A3/#selector","text":". foo {} . bar {} h1 span {} // h1\u7684\u540e\u4ee3\u4e2d\u6240\u6709\u7684span h1 > span {} // h1\u7684\u5b69\u5b50\u4e2d\u6240\u6709\u7684span h1 + span {} // h1\u540c\u7ea7\u7684\u5144\u5f1f\u4e2d\u6240\u6709\u7684span , \u8fd9\u91cc\u7684 + \u53ef\u4ee5\u7406\u89e3\u4e3aand , \u5c31\u662f\u5e76\u5217\u7684\u610f\u601d h1 . foo {} // \u5e26\u6709 . foo\u7c7b\u7684h1 a : link {} // \u4f2a\u7c7b selector : pseudo-class { property : value } p : first-line {} // \u4f2a\u5143\u7d20 selector : pseudo-element { property : value ;} [ title ] {} // \u5e26\u6709title\u5c5e\u6027\u7684\u5143\u7d20 # id span {} # id > span {} # id + span {} # id . foo {} // \u8fd9\u4e2a\u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u5408\u6cd5\u7684 , id\u672c\u8eab\u5df2\u7ecf\u80fd\u591f\u5b9a\u4f4d\u5143\u7d20 .","title":"\u9009\u62e9\u5668selector"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Emacs/Emacs%E5%BF%AB%E6%8D%B7%E9%94%AE/","text":"\u57fa\u7840\u5feb\u6377\u952e \u00b6 ^g \u968f\u65f6\u4e2d\u65ad\u53d6\u6d88\u6309\u952e\u64cd\u4f5c \u884c\u53f7 (M-x linum-mode) C-x C-f find file C-x C-s save file C-h k \u67e5\u8be2\u6309\u952e C-h v","title":"Emacs\u5feb\u6377\u952e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Emacs/Emacs%E5%BF%AB%E6%8D%B7%E9%94%AE/#_1","text":"^g \u968f\u65f6\u4e2d\u65ad\u53d6\u6d88\u6309\u952e\u64cd\u4f5c \u884c\u53f7 (M-x linum-mode) C-x C-f find file C-x C-s save file C-h k \u67e5\u8be2\u6309\u952e C-h v","title":"\u57fa\u7840\u5feb\u6377\u952e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%8F%82%E8%80%83%E8%B5%84%E6%BA%90/","text":"Pro Git .gitignore\u53c2\u8003","title":"Git\u53c2\u8003\u8d44\u6e90"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%A4%9A%E5%B8%90%E5%8F%B7%E8%AE%BE%E7%BD%AE/","text":"Git\u591a\u5e10\u53f7\u8bbe\u7f6e(\u8f6c\u8f7d) \u00b6 Post author: Yangyue Wan Post link: https://yywanx.github.io/2017/11/30/Mac\u4e0b\u4f7f\u7528\u591a\u4e2aGithub\u8d26\u53f7/ Copyright Notice: All articles in this blog are licensed under CC BY-NC-SA 3.0 unless stating additionally. \u6211\u6709\u4e24\u4e2agithub\u8d26\u53f7\uff0c\u4e00\u4e2a\u662f\u81ea\u5df1\u4e2a\u4eba\u7528\u7684\uff0c\u53e6\u4e00\u4e2a\u662f\u516c\u53f8\u5de5\u4f5c\u7528\u7684\u3002\u6700\u8fd1\u5e0c\u671b\u5728Mac\u4e0a\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u8fd9\u4e24\u4e2agithub\u8d26\u53f7\uff0c\u4e0d\u5f15\u8d77\u51b2\u7a81\u3002\u505a\u4e86\u4e00\u756aresearch\u4ee5\u540e\uff0c\u5728\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e0b\u8fc7\u7a0b\u3002\u8fd9\u91cc\u6211\u53ea\u9700\u8981\u7528\u4e24\u4e2a\u8d26\u53f7\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u591a\u4e2a\u7684\u8bdd\uff0c\u662f\u4e00\u6837\u7684\u65b9\u6cd5\u3002 \u9700\u6c42 \u00b6 \u4e3b\u8981\u9700\u6c42\u5c31\u662f\uff0c\u5bf9\u4e24\u4e2agithub\u8d26\u53f7\u5206\u522b\u7528\u4e24\u5957ssh key\uff0c\u5728clone\u548cpush\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u80fd\u591f\u533a\u5206\u5230\u5e95\u7528\u90a3\u4e2a\u8d26\u53f7\u3002 \u51c6\u5907\u5de5\u4f5c \u00b6 \u5982\u679c\u4e4b\u524d\u8fdb\u884c\u8fc7git config\u7684\u8bdd\uff0c\u9700\u8981\u5148\u53d6\u6d88github\u5173\u4e8e\u8d26\u53f7\u4fe1\u606f\u7684\u5168\u5c40\u8bbe\u5b9a\u3002\u5982\u679c\u6ca1\u6709\u7684\u8bdd\uff0c\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u6b65\u3002 git config --global --unset user.name git config --global --unset user.email \u751f\u6210ssh key \u00b6 \u5148\u4e3a\u4e2a\u4eba\u8d26\u53f7\u751f\u6210\u4e00\u5957ssh key ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" \u4e00\u8def\u56de\u8f66\u5373\u53ef\uff0c\u5b8c\u6210\u540e\u4f1a\u9ed8\u8ba4\u751f\u6210id_rsa\u548cid_ras.pub\u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e5f\u662f\u5c31\u662f\u4e2a\u4eba\u8d26\u53f7\u6240\u8981\u7528\u5230\u7684\u79c1\u94a5/\u516c\u94a5\u3002 \u7136\u540e\u518d\u4e3a\u5de5\u4f5c\u8d26\u53f7\u751f\u6210\u4e00\u5957key ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" \u7136\u540e\u5728\u88ab\u95ee\u5230 Enter file in which to save the key \u7684\u65f6\u5019\uff0c\u8f93\u5165 ~/.ssh/id_rsa_work \uff0c\u540e\u9762\u4e5f\u662f\u4e00\u8def\u56de\u8f66\u3002 \u81f3\u6b64\uff0c\u5c31\u751f\u6210\u4e86\u4e24\u5957\u4e0d\u540c\u7684ssh key\u3002 \u6dfb\u52a0key\u5230github \u00b6 \u767b\u5f55\u4e24\u4e2agithub\u8d26\u53f7\uff0c\u5206\u522b\u5728 Settings->SSH and GPG keys \u70b9\u51fb New SSH key \u3002 \u5728\u672c\u5730\uff0c\u901a\u8fc7 cat ~/.ssh/ssh_key_name.pub \u83b7\u5f97\u516c\u94a5\u7684\u5185\u5bb9\uff0c\u6dfb\u52a0\u5230\u521a\u521a\u6253\u5f00\u7684github\u7f51\u7ad9\u4e0a\u53bb\u3002 \u6dfb\u52a0key\u5230\u672c\u5730ssh agent \u00b6 \u5148\u5220\u9664agent\u91cc\u9762\u6240\u6709\u65e7\u7684key ssh-add -D \u7136\u540e\u6dfb\u52a0\u65b0\u7684\u4e24\u5957key ssh-add -K ~/.ssh/id_rsa ssh-add -K ~/.ssh/id_rsa_work \u4fee\u6539ssh config\u6587\u4ef6 \u00b6 \u6700\u540e\u4e00\u6b65\u5c31\u662f\u914d\u7f6essh config\u6587\u4ef6\u3002 \u6253\u5f00config\u6587\u4ef6 vim ~/.ssh/config \u52a0\u5165\u4ee5\u4e0b\u5185\u5bb9 # personal Host personal.github.com HostName github.com User git IdentityFile ~/.ssh/id_rsa # company Host company.github.com # \u8fd9\u4e2a\u540d\u5b57\u53ef\u4efb\u610f\u8bbe\u7f6e HostName github.com User git IdentityFile ~/.ssh/id_rsa_work \u6700\u540e\u6d4b\u8bd5\u4e00\u4e0b ssh -T git@personal.github.com ssh -T git@company.github.com \u5982\u679c\u770b\u5230 successfully authenticated \u7684\u4fe1\u606f\uff0c\u5c31\u8bf4\u660e\u6210\u529f\u4e86\u3002 \u4f7f\u7528 \u00b6 \u4ee5\u524dclone repo\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u4ee5PyTorch\u7684repo\u6765\u4e3e\u4f8b\uff0c\u76f4\u63a5\u50cf\u8fd9\u6837\u5c31\u884c\u4e86 git clone git@github.com:pytorch/pytorch.git \u73b0\u5728\u9700\u8981\u6839\u636e\u60c5\u51b5\u5c06 git@github.com \u66ff\u6362\u6210 git@personal.github.com \u6216\u8005 git@company.github.com \u3002 clone\u5b8c\u4e86\u4ee5\u540e\uff0c\u5728repo\u76ee\u5f55\u4e0b\u9700\u8981\u6267\u884c git config user.email \"xxx@xxx.com\" git config user.name \"xxname\" \u9700\u8981\u91cd\u65b0\u8bbe\u7f6eorigin (\u4ee5company\u4e3e\u4f8b) git remote rm origin git remote add origin git@company.github.com:pytorch/pytorch.git \u6700\u540epush\u7684\u8bdd\u7167\u5e38\u4f7f\u7528 git push origin master \u5230\u6b64\u5c31\u5168\u90e8\u641e\u5b9a:)","title":"Git\u591a\u5e10\u53f7\u8bbe\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%A4%9A%E5%B8%90%E5%8F%B7%E8%AE%BE%E7%BD%AE/#git","text":"Post author: Yangyue Wan Post link: https://yywanx.github.io/2017/11/30/Mac\u4e0b\u4f7f\u7528\u591a\u4e2aGithub\u8d26\u53f7/ Copyright Notice: All articles in this blog are licensed under CC BY-NC-SA 3.0 unless stating additionally. \u6211\u6709\u4e24\u4e2agithub\u8d26\u53f7\uff0c\u4e00\u4e2a\u662f\u81ea\u5df1\u4e2a\u4eba\u7528\u7684\uff0c\u53e6\u4e00\u4e2a\u662f\u516c\u53f8\u5de5\u4f5c\u7528\u7684\u3002\u6700\u8fd1\u5e0c\u671b\u5728Mac\u4e0a\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u8fd9\u4e24\u4e2agithub\u8d26\u53f7\uff0c\u4e0d\u5f15\u8d77\u51b2\u7a81\u3002\u505a\u4e86\u4e00\u756aresearch\u4ee5\u540e\uff0c\u5728\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e0b\u8fc7\u7a0b\u3002\u8fd9\u91cc\u6211\u53ea\u9700\u8981\u7528\u4e24\u4e2a\u8d26\u53f7\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u591a\u4e2a\u7684\u8bdd\uff0c\u662f\u4e00\u6837\u7684\u65b9\u6cd5\u3002","title":"Git\u591a\u5e10\u53f7\u8bbe\u7f6e(\u8f6c\u8f7d)"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%A4%9A%E5%B8%90%E5%8F%B7%E8%AE%BE%E7%BD%AE/#_1","text":"\u4e3b\u8981\u9700\u6c42\u5c31\u662f\uff0c\u5bf9\u4e24\u4e2agithub\u8d26\u53f7\u5206\u522b\u7528\u4e24\u5957ssh key\uff0c\u5728clone\u548cpush\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u80fd\u591f\u533a\u5206\u5230\u5e95\u7528\u90a3\u4e2a\u8d26\u53f7\u3002","title":"\u9700\u6c42"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%A4%9A%E5%B8%90%E5%8F%B7%E8%AE%BE%E7%BD%AE/#_2","text":"\u5982\u679c\u4e4b\u524d\u8fdb\u884c\u8fc7git config\u7684\u8bdd\uff0c\u9700\u8981\u5148\u53d6\u6d88github\u5173\u4e8e\u8d26\u53f7\u4fe1\u606f\u7684\u5168\u5c40\u8bbe\u5b9a\u3002\u5982\u679c\u6ca1\u6709\u7684\u8bdd\uff0c\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u6b65\u3002 git config --global --unset user.name git config --global --unset user.email","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%A4%9A%E5%B8%90%E5%8F%B7%E8%AE%BE%E7%BD%AE/#ssh-key","text":"\u5148\u4e3a\u4e2a\u4eba\u8d26\u53f7\u751f\u6210\u4e00\u5957ssh key ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" \u4e00\u8def\u56de\u8f66\u5373\u53ef\uff0c\u5b8c\u6210\u540e\u4f1a\u9ed8\u8ba4\u751f\u6210id_rsa\u548cid_ras.pub\u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e5f\u662f\u5c31\u662f\u4e2a\u4eba\u8d26\u53f7\u6240\u8981\u7528\u5230\u7684\u79c1\u94a5/\u516c\u94a5\u3002 \u7136\u540e\u518d\u4e3a\u5de5\u4f5c\u8d26\u53f7\u751f\u6210\u4e00\u5957key ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" \u7136\u540e\u5728\u88ab\u95ee\u5230 Enter file in which to save the key \u7684\u65f6\u5019\uff0c\u8f93\u5165 ~/.ssh/id_rsa_work \uff0c\u540e\u9762\u4e5f\u662f\u4e00\u8def\u56de\u8f66\u3002 \u81f3\u6b64\uff0c\u5c31\u751f\u6210\u4e86\u4e24\u5957\u4e0d\u540c\u7684ssh key\u3002","title":"\u751f\u6210ssh key"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%A4%9A%E5%B8%90%E5%8F%B7%E8%AE%BE%E7%BD%AE/#keygithub","text":"\u767b\u5f55\u4e24\u4e2agithub\u8d26\u53f7\uff0c\u5206\u522b\u5728 Settings->SSH and GPG keys \u70b9\u51fb New SSH key \u3002 \u5728\u672c\u5730\uff0c\u901a\u8fc7 cat ~/.ssh/ssh_key_name.pub \u83b7\u5f97\u516c\u94a5\u7684\u5185\u5bb9\uff0c\u6dfb\u52a0\u5230\u521a\u521a\u6253\u5f00\u7684github\u7f51\u7ad9\u4e0a\u53bb\u3002","title":"\u6dfb\u52a0key\u5230github"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%A4%9A%E5%B8%90%E5%8F%B7%E8%AE%BE%E7%BD%AE/#keyssh-agent","text":"\u5148\u5220\u9664agent\u91cc\u9762\u6240\u6709\u65e7\u7684key ssh-add -D \u7136\u540e\u6dfb\u52a0\u65b0\u7684\u4e24\u5957key ssh-add -K ~/.ssh/id_rsa ssh-add -K ~/.ssh/id_rsa_work","title":"\u6dfb\u52a0key\u5230\u672c\u5730ssh agent"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%A4%9A%E5%B8%90%E5%8F%B7%E8%AE%BE%E7%BD%AE/#ssh-config","text":"\u6700\u540e\u4e00\u6b65\u5c31\u662f\u914d\u7f6essh config\u6587\u4ef6\u3002 \u6253\u5f00config\u6587\u4ef6 vim ~/.ssh/config \u52a0\u5165\u4ee5\u4e0b\u5185\u5bb9 # personal Host personal.github.com HostName github.com User git IdentityFile ~/.ssh/id_rsa # company Host company.github.com # \u8fd9\u4e2a\u540d\u5b57\u53ef\u4efb\u610f\u8bbe\u7f6e HostName github.com User git IdentityFile ~/.ssh/id_rsa_work \u6700\u540e\u6d4b\u8bd5\u4e00\u4e0b ssh -T git@personal.github.com ssh -T git@company.github.com \u5982\u679c\u770b\u5230 successfully authenticated \u7684\u4fe1\u606f\uff0c\u5c31\u8bf4\u660e\u6210\u529f\u4e86\u3002","title":"\u4fee\u6539ssh config\u6587\u4ef6"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%A4%9A%E5%B8%90%E5%8F%B7%E8%AE%BE%E7%BD%AE/#_3","text":"\u4ee5\u524dclone repo\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u4ee5PyTorch\u7684repo\u6765\u4e3e\u4f8b\uff0c\u76f4\u63a5\u50cf\u8fd9\u6837\u5c31\u884c\u4e86 git clone git@github.com:pytorch/pytorch.git \u73b0\u5728\u9700\u8981\u6839\u636e\u60c5\u51b5\u5c06 git@github.com \u66ff\u6362\u6210 git@personal.github.com \u6216\u8005 git@company.github.com \u3002 clone\u5b8c\u4e86\u4ee5\u540e\uff0c\u5728repo\u76ee\u5f55\u4e0b\u9700\u8981\u6267\u884c git config user.email \"xxx@xxx.com\" git config user.name \"xxname\" \u9700\u8981\u91cd\u65b0\u8bbe\u7f6eorigin (\u4ee5company\u4e3e\u4f8b) git remote rm origin git remote add origin git@company.github.com:pytorch/pytorch.git \u6700\u540epush\u7684\u8bdd\u7167\u5e38\u4f7f\u7528 git push origin master \u5230\u6b64\u5c31\u5168\u90e8\u641e\u5b9a:)","title":"\u4f7f\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%AF%86%E7%A0%81/","text":"git \u2014global\u7684\u914d\u7f6e\u4fdd\u5b58\u5728\u54ea \u00b6 ~/.gitconfig \u4fdd\u5b58\u7528\u6237\u540d\u548c\u5bc6\u7801 \u00b6 Git\u53ef\u4ee5\u5c06\u7528\u6237\u540d\uff0c\u5bc6\u7801\u548c\u4ed3\u5e93\u94fe\u63a5\u4fdd\u5b58\u5728\u786c\u76d8\u4e2d\uff0c\u800c\u4e0d\u7528\u5728\u6bcf\u6b21push\u7684\u65f6\u5019\u90fd\u8f93\u5165\u5bc6\u7801\u3002 \u4fdd\u5b58\u5bc6\u7801\u5230\u786c\u76d8\u4e00\u6761\u547d\u4ee4\u5c31\u53ef\u4ee5 $ git config credential.helper store \u5f53git push\u7684\u65f6\u5019\u8f93\u5165\u4e00\u6b21\u7528\u6237\u540d\u548c\u5bc6\u7801\u5c31\u4f1a\u88ab\u8bb0\u5f55 \u786e\u8ba4\u9ed8\u8ba4\u6587\u4ef6\u540d\u53ca\u4fdd\u5b58\u8def\u5f84 ,\u2014global\u7684\u65f6\u5019\u7684\u6587\u4ef6\u5185\u5bb9\u4e0e\u8def\u5f84,\u5982\u679c\u4e0d\u4e3b\u52a8\u521b\u5efa\u6587\u4ef6,\u662f\u5426\u4f1a\u521b\u5efa\u9ed8\u8ba4\u6587\u4ef6,\u6587\u4ef6\u540d\u662f\u4ec0\u4e48?? gitlab(github)\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u5bc6\u7801\u7684\u95ee\u9898 \u00b6 \u53c2\u8003 Git \u5de5\u5177 - \u51ed\u8bc1\u5b58\u50a8 \u8fdb\u5165~\uff08\u7528\u6237\uff09\u76ee\u5f55\uff0ccd ~ \u5efa\u7acb\u6587\u4ef6 .git-credentials\uff0c touch .git-credentials \u7f16\u8f91\u6587\u4ef6 .git-credentials\uff0c vi .git-credentials \u6dfb\u52a0http://\u7528\u6237\u540d:\u5bc6\u7801@gitlab.com // \u6839\u636e\u60c5\u51b5\u66ff\u6362ip\u6216\u57df\u540d \u6267\u884c\u547d\u4ee4\uff1agit config --global credential.helper store [--file ~/.git-credentials] \u4e0d\u52a0--file \u9ed8\u8ba4\u662f~/.git-credentials .git-credentials\u6587\u4ef6\u8981\u624b\u52a8\u521b\u5efa?\u5f85\u786e\u8ba4 \u67e5\u770b\u6587\u4ef6\uff1amore .gitconfig\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u4fe1\u606f\uff0c\u8bbe\u7f6e\u6210\u529f\u3002 [user] email = username@example.com name = username [credential] helper = store","title":"Git\u5bc6\u7801"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%AF%86%E7%A0%81/#git-global","text":"~/.gitconfig","title":"git \u2014global\u7684\u914d\u7f6e\u4fdd\u5b58\u5728\u54ea"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%AF%86%E7%A0%81/#_1","text":"Git\u53ef\u4ee5\u5c06\u7528\u6237\u540d\uff0c\u5bc6\u7801\u548c\u4ed3\u5e93\u94fe\u63a5\u4fdd\u5b58\u5728\u786c\u76d8\u4e2d\uff0c\u800c\u4e0d\u7528\u5728\u6bcf\u6b21push\u7684\u65f6\u5019\u90fd\u8f93\u5165\u5bc6\u7801\u3002 \u4fdd\u5b58\u5bc6\u7801\u5230\u786c\u76d8\u4e00\u6761\u547d\u4ee4\u5c31\u53ef\u4ee5 $ git config credential.helper store \u5f53git push\u7684\u65f6\u5019\u8f93\u5165\u4e00\u6b21\u7528\u6237\u540d\u548c\u5bc6\u7801\u5c31\u4f1a\u88ab\u8bb0\u5f55 \u786e\u8ba4\u9ed8\u8ba4\u6587\u4ef6\u540d\u53ca\u4fdd\u5b58\u8def\u5f84 ,\u2014global\u7684\u65f6\u5019\u7684\u6587\u4ef6\u5185\u5bb9\u4e0e\u8def\u5f84,\u5982\u679c\u4e0d\u4e3b\u52a8\u521b\u5efa\u6587\u4ef6,\u662f\u5426\u4f1a\u521b\u5efa\u9ed8\u8ba4\u6587\u4ef6,\u6587\u4ef6\u540d\u662f\u4ec0\u4e48??","title":"\u4fdd\u5b58\u7528\u6237\u540d\u548c\u5bc6\u7801"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%AF%86%E7%A0%81/#gitlabgithub","text":"\u53c2\u8003 Git \u5de5\u5177 - \u51ed\u8bc1\u5b58\u50a8 \u8fdb\u5165~\uff08\u7528\u6237\uff09\u76ee\u5f55\uff0ccd ~ \u5efa\u7acb\u6587\u4ef6 .git-credentials\uff0c touch .git-credentials \u7f16\u8f91\u6587\u4ef6 .git-credentials\uff0c vi .git-credentials \u6dfb\u52a0http://\u7528\u6237\u540d:\u5bc6\u7801@gitlab.com // \u6839\u636e\u60c5\u51b5\u66ff\u6362ip\u6216\u57df\u540d \u6267\u884c\u547d\u4ee4\uff1agit config --global credential.helper store [--file ~/.git-credentials] \u4e0d\u52a0--file \u9ed8\u8ba4\u662f~/.git-credentials .git-credentials\u6587\u4ef6\u8981\u624b\u52a8\u521b\u5efa?\u5f85\u786e\u8ba4 \u67e5\u770b\u6587\u4ef6\uff1amore .gitconfig\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u4fe1\u606f\uff0c\u8bbe\u7f6e\u6210\u529f\u3002 [user] email = username@example.com name = username [credential] helper = store","title":"gitlab(github)\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u5bc6\u7801\u7684\u95ee\u9898"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/Git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/","text":"\u8bef\u628a\u6587\u4ef6\u5939\u63d0\u4ea4\u5230\u7684git\u4ed3\u5e93,\u6e05\u9664\u8fdc\u7a0b\u5e93\u4e2d\u7684\u6587\u4ef6\u5939,\u672c\u5730\u5de5\u4f5c\u533a\u4fdd\u7559 git rm -r --cached [ \u8981\u5220\u9664\u7684\u6587\u4ef6\u5939 ] git commit -m \"msg\" #\u522b\u5fd8\u4e86\u5728 .gitignore\u6587\u4ef6\u4e2d\u52a0\u4e0a\u6b64\u6587\u4ef6\u5939 # dirname/ git clone --depth=1 \u65e0\u6cd5\u5207\u6362\u5230\u5176\u4ed6\u5206\u652f git clone --depth 1 https://github.com/dogescript/xxxxxxx.git git remote set-branches origin 'remote_branch_name' git fetch --depth 1 origin remote_branch_name git checkout remote_branch_name","title":"Git\u5e38\u89c1\u95ee\u9898"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/","text":"\u521d\u59cb\u5316\u914d\u7f6e \u00b6 #\u914d\u7f6e\u4f7f\u7528git\u4ed3\u5e93\u7684\u4eba\u5458\u59d3\u540d git config --global user.name \"Your Name Comes Here\" #\u914d\u7f6e\u4f7f\u7528git\u4ed3\u5e93\u7684\u4eba\u5458email git config --global user.email you@yourdomain.example.com #\u914d\u7f6e\u5230\u7f13\u5b58 \u9ed8\u8ba415\u5206\u949f git config --global credential.helper cache #\u4fee\u6539\u7f13\u5b58\u65f6\u95f4 git config --global credential.helper 'cache --timeout=3600' git config --global color.ui true git config --global alias.co checkout git config --global alias.ci commit git config --global alias.st status git config --global alias.br branch git config --global core.editor \"mate -w\" # \u8bbe\u7f6eEditor\u4f7f\u7528textmate git config -1 #\u5217\u4e3e\u6240\u6709\u914d\u7f6e #\u7528\u6237\u7684git\u914d\u7f6e\u6587\u4ef6~/.gitconfig \u53d6\u5f97Git\u4ed3\u5e93 \u00b6 \u53d6\u5f97Git\u4ed3\u5e93 #\u521d\u59cb\u5316\u4e00\u4e2a\u7248\u672c\u4ed3\u5e93 git init #Clone\u8fdc\u7a0b\u7248\u672c\u5e93 git clone git@xbc.me:wordpress.git #\u6dfb\u52a0\u8fdc\u7a0b\u7248\u672c\u5e93origin\uff0c\u8bed\u6cd5\u4e3a git remote add [shortname] [url] git remote add origin git@xbc.me:wordpress.git #\u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93 git remote -v Git\u8fdc\u7a0b\u4ed3\u5e93\u7ba1\u7406 \u00b6 git remote -v # \u67e5\u770b\u8fdc\u7a0b\u670d\u52a1\u5668\u5730\u5740\u548c\u4ed3\u5e93\u540d\u79f0 git remote show origin # \u67e5\u770b\u8fdc\u7a0b\u670d\u52a1\u5668\u4ed3\u5e93\u72b6\u6001 git remote add origin git@ github:robbin/robbin_site.git # \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 git remote set-url origin git@ github.com:robbin/robbin_site.git # \u8bbe\u7f6e\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740(\u7528\u4e8e\u4fee\u6539\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740) git remote rm <repository> # \u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93 #\u521b\u5efa\u8fdc\u7a0b\u4ed3\u5e93 git clone --bare robbin_site robbin_site.git # \u7528\u5e26\u7248\u672c\u7684\u9879\u76ee\u521b\u5efa\u7eaf\u7248\u672c\u4ed3\u5e93 scp -r my_project.git git@ git.csdn.net:~ # \u5c06\u7eaf\u4ed3\u5e93\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a mkdir robbin_site.git && cd robbin_site.git && git --bare init # \u5728\u670d\u52a1\u5668\u521b\u5efa\u7eaf\u4ed3\u5e93 git remote add origin git@ github.com:robbin/robbin_site.git # \u8bbe\u7f6e\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 git push -u origin master # \u5ba2\u6237\u7aef\u9996\u6b21\u63d0\u4ea4 git push -u origin develop # \u9996\u6b21\u5c06\u672c\u5730develop\u5206\u652f\u63d0\u4ea4\u5230\u8fdc\u7a0bdevelop\u5206\u652f\uff0c\u5e76\u4e14track git remote set-head origin master # \u8bbe\u7f6e\u8fdc\u7a0b\u4ed3\u5e93\u7684HEAD\u6307\u5411master\u5206\u652f \u4e5f\u53ef\u4ee5\u547d\u4ee4\u8bbe\u7f6e\u8ddf\u8e2a\u8fdc\u7a0b\u5e93\u548c\u672c\u5730\u5e93 git branch --set-upstream master origin/master git branch --set-upstream develop origin/develop \u67e5\u770b\u3001\u6dfb\u52a0\u3001\u63d0\u4ea4\u3001\u5220\u9664\u3001\u627e\u56de\uff0c\u91cd\u7f6e\u4fee\u6539\u6587\u4ef6 \u00b6 git help <command> # \u663e\u793acommand\u7684help git show # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u7684\u5185\u5bb9 git show $id git co -- <file> # \u629b\u5f03\u5de5\u4f5c\u533a\u4fee\u6539 git co . # \u629b\u5f03\u5de5\u4f5c\u533a\u4fee\u6539 git add <file> # \u5c06\u5de5\u4f5c\u6587\u4ef6\u4fee\u6539\u63d0\u4ea4\u5230\u672c\u5730\u6682\u5b58\u533a git add . # \u5c06\u6240\u6709\u4fee\u6539\u8fc7\u7684\u5de5\u4f5c\u6587\u4ef6\u63d0\u4ea4\u6682\u5b58\u533a git rm <file> # \u4ece\u7248\u672c\u5e93\u4e2d\u5220\u9664\u6587\u4ef6 git rm <file> --cached # \u4ece\u7248\u672c\u5e93\u4e2d\u5220\u9664\u6587\u4ef6\uff0c\u4f46\u4e0d\u5220\u9664\u6587\u4ef6 git reset <file> # \u4ece\u6682\u5b58\u533a\u6062\u590d\u5230\u5de5\u4f5c\u6587\u4ef6 git reset -- . # \u4ece\u6682\u5b58\u533a\u6062\u590d\u5230\u5de5\u4f5c\u6587\u4ef6 git reset --hard # \u6062\u590d\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u8fc7\u7684\u72b6\u6001\uff0c\u5373\u653e\u5f03\u4e0a\u6b21\u63d0\u4ea4\u540e\u7684\u6240\u6709\u672c\u6b21\u4fee\u6539 git ci <file> git ci . git ci -a # \u5c06git add, git rm\u548cgit ci\u7b49\u64cd\u4f5c\u90fd\u5408\u5e76\u5728\u4e00\u8d77\u505a git ci -am \"some comments\" git ci --amend # \u4fee\u6539\u6700\u540e\u4e00\u6b21\u63d0\u4ea4\u8bb0\u5f55 git revert < $id > # \u6062\u590d\u67d0\u6b21\u63d0\u4ea4\u7684\u72b6\u6001\uff0c\u6062\u590d\u52a8\u4f5c\u672c\u8eab\u4e5f\u521b\u5efa\u4e86\u4e00\u6b21\u63d0\u4ea4\u5bf9\u8c61 git revert HEAD # \u6062\u590d\u6700\u540e\u4e00\u6b21\u63d0\u4ea4\u7684\u72b6\u6001 \u6587\u4ef6diff \u00b6 git diff <file> # \u6bd4\u8f83\u5f53\u524d\u6587\u4ef6\u548c\u6682\u5b58\u533a\u6587\u4ef6\u5dee\u5f02 git diff git diff < $id1 > < $id2 > # \u6bd4\u8f83\u4e24\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02 git diff <branch1>..<branch2> # \u5728\u4e24\u4e2a\u5206\u652f\u4e4b\u95f4\u6bd4\u8f83 git diff --staged # \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u7248\u672c\u5e93\u5dee\u5f02 git diff --cached # \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u7248\u672c\u5e93\u5dee\u5f02 git diff --stat # \u4ec5\u4ec5\u6bd4\u8f83\u7edf\u8ba1\u4fe1\u606f \u63d0\u4ea4\u8bb0\u5f55 \u00b6 git log git log <file> # \u67e5\u770b\u8be5\u6587\u4ef6\u6bcf\u6b21\u63d0\u4ea4\u8bb0\u5f55 git log -p <file> # \u67e5\u770b\u6bcf\u6b21\u8be6\u7ec6\u4fee\u6539\u5185\u5bb9\u7684diff git log -p -2 # \u67e5\u770b\u6700\u8fd1\u4e24\u6b21\u8be6\u7ec6\u4fee\u6539\u5185\u5bb9\u7684diff git log --stat #\u67e5\u770b\u63d0\u4ea4\u7edf\u8ba1\u4fe1\u606f tig Mac\u4e0a\u53ef\u4ee5\u4f7f\u7528tig\u4ee3\u66ffdiff\u548clog\uff0cbrew install tig \u63d0\u4ea4\u4fee\u6539 \u00b6 #\u6dfb\u52a0\u5f53\u524d\u4fee\u6539\u7684\u6587\u4ef6\u5230\u6682\u5b58\u533a git add . #\u5982\u679c\u4f60\u81ea\u52a8\u8ffd\u8e2a\u6587\u4ef6\uff0c\u5305\u62ec\u4f60\u5df2\u7ecf\u624b\u52a8\u5220\u9664\u7684\uff0c\u72b6\u6001\u4e3aDeleted\u7684\u6587\u4ef6 git add -u #\u63d0\u4ea4\u4f60\u7684\u4fee\u6539 git commit \u2013m \"\u4f60\u7684\u6ce8\u91ca\" #\u63a8\u9001\u4f60\u7684\u66f4\u65b0\u5230\u8fdc\u7a0b\u670d\u52a1\u5668,\u8bed\u6cd5\u4e3a git push [\u8fdc\u7a0b\u540d] [\u672c\u5730\u5206\u652f]:[\u8fdc\u7a0b\u5206\u652f] git push origin master #\u67e5\u770b\u6587\u4ef6\u72b6\u6001 git status #\u8ddf\u8e2a\u65b0\u6587\u4ef6 git add readme.txt #\u4ece\u5f53\u524d\u8ddf\u8e2a\u5217\u8868\u79fb\u9664\u6587\u4ef6\uff0c\u5e76\u5b8c\u5168\u5220\u9664 git rm readme.txt #\u4ec5\u5728\u6682\u5b58\u533a\u5220\u9664\uff0c\u4fdd\u7559\u6587\u4ef6\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u4e0d\u518d\u8ddf\u8e2a git rm \u2013cached readme.txt #\u91cd\u547d\u540d\u6587\u4ef6 git mv reademe.txt readme #\u67e5\u770b\u63d0\u4ea4\u7684\u5386\u53f2\u8bb0\u5f55 git log #\u4fee\u6539\u6700\u540e\u4e00\u6b21\u63d0\u4ea4\u6ce8\u91ca\u7684\uff0c\u5229\u7528\u2013amend\u53c2\u6570 git commit --amend #\u5fd8\u8bb0\u63d0\u4ea4\u67d0\u4e9b\u4fee\u6539\uff0c\u4e0b\u9762\u7684\u4e09\u6761\u547d\u4ee4\u53ea\u4f1a\u5f97\u5230\u4e00\u4e2a\u63d0\u4ea4\u3002 git commit \u2013m & quot ; add readme.txt & quot ; git add readme_forgotten git commit \u2013amend #\u5047\u8bbe\u4f60\u5df2\u7ecf\u4f7f\u7528git add .\uff0c\u5c06\u4fee\u6539\u8fc7\u7684\u6587\u4ef6a\u3001b\u52a0\u5230\u6682\u5b58\u533a #\u73b0\u5728\u4f60\u53ea\u60f3\u63d0\u4ea4a\u6587\u4ef6\uff0c\u4e0d\u60f3\u63d0\u4ea4b\u6587\u4ef6\uff0c\u5e94\u8be5\u8fd9\u6837 git reset HEAD b #\u53d6\u6d88\u5bf9\u6587\u4ef6\u7684\u4fee\u6539 git checkout \u2013- readme.txt \u57fa\u672c\u7684\u5206\u652f\u7ba1\u7406 \u00b6 #\u521b\u5efa\u4e00\u4e2a\u5206\u652f git branch iss53 #\u5207\u6362\u5de5\u4f5c\u76ee\u5f55\u5230iss53 git chekcout iss53 #\u5c06\u4e0a\u9762\u7684\u547d\u4ee4\u5408\u5728\u4e00\u8d77\uff0c\u521b\u5efaiss53\u5206\u652f\u5e76\u5207\u6362\u5230iss53 git chekcout \u2013b iss53 #\u5408\u5e76iss53\u5206\u652f\uff0c\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e3amaster git merge iss53 #\u5408\u5e76\u5b8c\u6210\u540e\uff0c\u6ca1\u6709\u51fa\u73b0\u51b2\u7a81\uff0c\u5220\u9664iss53\u5206\u652f git branch \u2013d iss53 #\u62c9\u53bb\u8fdc\u7a0b\u4ed3\u5e93\u7684\u6570\u636e\uff0c\u8bed\u6cd5\u4e3a git fetch [remote-name] git fetch #fetch \u4f1a\u62c9\u53bb\u6700\u65b0\u7684\u8fdc\u7a0b\u4ed3\u5e93\u6570\u636e\uff0c\u4f46\u4e0d\u4f1a\u81ea\u52a8\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u8981\u81ea\u52a8\u5408\u5e76 git pull #\u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f git remote show origin #\u5efa\u7acb\u672c\u5730\u7684dev\u5206\u652f\u8ffd\u8e2a\u8fdc\u7a0b\u4ed3\u5e93\u7684develop\u5206\u652f git checkout \u2013b dev origin/develop \u5206\u652f\u67e5\u770b\u3001\u5207\u6362\u3001\u521b\u5efa\u548c\u5220\u9664 \u00b6 git br -r # \u67e5\u770b\u8fdc\u7a0b\u5206\u652f git br <new_branch> # \u521b\u5efa\u65b0\u7684\u5206\u652f git br -v # \u67e5\u770b\u5404\u4e2a\u5206\u652f\u6700\u540e\u63d0\u4ea4\u4fe1\u606f git br --merged # \u67e5\u770b\u5df2\u7ecf\u88ab\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u7684\u5206\u652f git br --no-merged # \u67e5\u770b\u5c1a\u672a\u88ab\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u7684\u5206\u652f git co <branch> # \u5207\u6362\u5230\u67d0\u4e2a\u5206\u652f git co -b <new_branch> # \u521b\u5efa\u65b0\u7684\u5206\u652f\uff0c\u5e76\u4e14\u5207\u6362\u8fc7\u53bb git co -b <new_branch> <branch> # \u57fa\u4e8ebranch\u521b\u5efa\u65b0\u7684new_branch git co $id # \u628a\u67d0\u6b21\u5386\u53f2\u63d0\u4ea4\u8bb0\u5f55checkout\u51fa\u6765\uff0c\u4f46\u65e0\u5206\u652f\u4fe1\u606f\uff0c\u5207\u6362\u5230\u5176\u4ed6\u5206\u652f\u4f1a\u81ea\u52a8\u5220\u9664 git co $id -b <new_branch> # \u628a\u67d0\u6b21\u5386\u53f2\u63d0\u4ea4\u8bb0\u5f55checkout\u51fa\u6765\uff0c\u521b\u5efa\u6210\u4e00\u4e2a\u5206\u652f git br -d <branch> # \u5220\u9664\u67d0\u4e2a\u5206\u652f git br -D <branch> # \u5f3a\u5236\u5220\u9664\u67d0\u4e2a\u5206\u652f (\u672a\u88ab\u5408\u5e76\u7684\u5206\u652f\u88ab\u5220\u9664\u7684\u65f6\u5019\u9700\u8981\u5f3a\u5236) \u5206\u652f\u5408\u5e76\u548crebase \u00b6 git merge <branch> # \u5c06branch\u5206\u652f\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f git merge origin/master --no-ff # \u4e0d\u8981Fast-Foward\u5408\u5e76\uff0c\u8fd9\u6837\u53ef\u4ee5\u751f\u6210merge\u63d0\u4ea4 git rebase master <branch> # \u5c06master rebase\u5230branch\uff0c\u76f8\u5f53\u4e8e\uff1a git co <branch> && git rebase master && git co master && git merge <branch> Git\u8fdc\u7a0b\u5206\u652f\u7ba1\u7406 \u00b6 git pull # \u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u6240\u6709\u5206\u652f\u66f4\u65b0\u5e76\u5408\u5e76\u5230\u672c\u5730 git pull --no-ff # \u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u6240\u6709\u5206\u652f\u66f4\u65b0\u5e76\u5408\u5e76\u5230\u672c\u5730\uff0c\u4e0d\u8981\u5feb\u8fdb\u5408\u5e76 git fetch origin # \u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u66f4\u65b0 git merge origin/master # \u5c06\u8fdc\u7a0b\u4e3b\u5206\u652f\u5408\u5e76\u5230\u672c\u5730\u5f53\u524d\u5206\u652f git co --track origin/branch # \u8ddf\u8e2a\u67d0\u4e2a\u8fdc\u7a0b\u5206\u652f\u521b\u5efa\u76f8\u5e94\u7684\u672c\u5730\u5206\u652f git co -b <local_branch> origin/<remote_branch> # \u57fa\u4e8e\u8fdc\u7a0b\u5206\u652f\u521b\u5efa\u672c\u5730\u5206\u652f\uff0c\u529f\u80fd\u540c\u4e0a git push # push\u6240\u6709\u5206\u652f git push origin master # \u5c06\u672c\u5730\u4e3b\u5206\u652f\u63a8\u5230\u8fdc\u7a0b\u4e3b\u5206\u652f git push -u origin master # \u5c06\u672c\u5730\u4e3b\u5206\u652f\u63a8\u5230\u8fdc\u7a0b(\u5982\u65e0\u8fdc\u7a0b\u4e3b\u5206\u652f\u5219\u521b\u5efa\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u8fdc\u7a0b\u4ed3\u5e93) git push origin <local_branch> # \u521b\u5efa\u8fdc\u7a0b\u5206\u652f\uff0c origin\u662f\u8fdc\u7a0b\u4ed3\u5e93\u540d git push origin <local_branch>:<remote_branch> # \u521b\u5efa\u8fdc\u7a0b\u5206\u652f git push origin :<remote_branch> #\u5148\u5220\u9664\u672c\u5730\u5206\u652f(git br -d <branch>)\uff0c\u7136\u540e\u518dpush\u5220\u9664\u8fdc\u7a0b\u5206\u652f Git\u8865\u4e01\u7ba1\u7406(\u65b9\u4fbf\u5728\u591a\u53f0\u673a\u5668\u4e0a\u5f00\u53d1\u540c\u6b65\u65f6\u7528) \u00b6 git diff > ../sync.patch # \u751f\u6210\u8865\u4e01 git apply ../sync.patch # \u6253\u8865\u4e01 git apply --check ../sync.patch #\u6d4b\u8bd5\u8865\u4e01\u80fd\u5426\u6210\u529f Git\u6682\u5b58\u7ba1\u7406 \u00b6 git stash # \u6682\u5b58 git stash list # \u5217\u6240\u6709stash git stash apply # \u6062\u590d\u6682\u5b58\u7684\u5185\u5bb9 git stash drop # \u5220\u9664\u6682\u5b58\u533a \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/iteye_5904/article/details/82482574 pull\u8fdc\u7aef\u7684\u5206\u652f \u00b6 git pull [ --rebase ] \u8fdc\u7a0b\u5206\u652f\u540d\u79f0:\u672c\u5730\u5206\u652f\u540d \u5220\u9664\u5386\u53f2\u8bb0\u5f55,\u5f62\u6210\u5168\u65b0\u5e93 \u00b6 Checkout git checkout --orphan latest_branch Add all the files git add -A Commit the changes git commit -am \"commit message\" Delete the branch git branch -D master Rename the current branch to master git branch -m master Finally, force update your repository **git push -f origin master** \u53d6\u6d88global email name\u8bbe\u7f6e \u00b6 git config --global --unset user.email git config --global --unset user.name \u5220\u9664\u6587\u4ef6\u53ca\u5386\u53f2 \u00b6 # \u5220\u9664\u6587\u4ef6 git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch password.txt' --prune-empty --tag-name-filter cat -- --all #\u5220\u9664\u6587\u4ef6\u5939 git rm -r git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch [dirname]' --prune-empty --tag-name-filter cat -- --all # push git push origin master --force --all \u64a4\u9500\u5904\u7406 \u00b6 git add \u540e,\u53d6\u6d88\u6587\u4ef6add git reset HEAD file \u53d6\u6d88\u5de5\u4f5c\u533a\u6587\u4ef6\u4fee\u6539 git checkout -- \u4ee3\u7801\u6ca1\u6709push\u4e4b\u524d\u505a\u56de\u9000\u5904\u7406 git reset [ --mixed | --soft | --hard ] --mixed \u9ed8\u8ba4,\u4fdd\u7559\u6e90\u7801 ,index,commit \u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c --soft \u4fdd\u7559\u6e90\u7801,\u53ea\u56de\u9000\u5230commit \u4fe1\u606f\u5230\u67d0\u4e2a\u7248\u672c.\u4e0d\u6d89\u53caindex\u7684\u56de\u9000,\u5982\u679c\u8fd8\u9700\u8981\u63d0\u4ea4,\u76f4\u63a5commit\u5373\u53ef --hard \u6e90\u7801\u4e5f\u4f1a\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c,commit\u548cindex \u90fd\u56de\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c.(\u6ce8\u610f,\u8fd9\u79cd\u65b9\u5f0f\u662f\u6539\u53d8\u672c\u5730\u4ee3\u7801\u4ed3\u5e93\u6e90\u7801) \u4ee3\u7801push\u4e4b\u540e git revert git revert\u7528\u4e8e\u53cd\u8f6c\u63d0\u4ea4,\u6267\u884cevert\u547d\u4ee4\u65f6\u8981\u6c42\u5de5\u4f5c\u6811\u5fc5\u987b\u662f\u5e72\u51c0\u7684. git revert\u7528\u4e00\u4e2a\u65b0\u63d0\u4ea4\u6765\u6d88\u9664\u4e00\u4e2a\u5386\u53f2\u63d0\u4ea4\u6240\u505a\u7684\u4efb\u4f55\u4fee\u6539. \u533a\u522b git revert\u662f\u7528\u4e00\u6b21\u65b0\u7684commit\u6765\u56de\u6eda\u4e4b\u524d\u7684commit\uff0cgit reset\u662f\u76f4\u63a5\u5220\u9664\u6307\u5b9a\u7684commit \u4e0a\u9762\u6211\u4eec\u8bf4\u7684\u5982\u679c\u4f60\u5df2\u7ecfpush\u5230\u7ebf\u4e0a\u4ee3\u7801\u5e93, reset \u5220\u9664\u6307\u5b9acommit\u4ee5\u540e,\u4f60git push\u53ef\u80fd\u5bfc\u81f4\u4e00\u5927\u5806\u51b2\u7a81.\u4f46\u662frevert \u5e76\u4e0d\u4f1a. \u5982\u679c\u5728\u65e5\u540e\u73b0\u6709\u5206\u652f\u548c\u5386\u53f2\u5206\u652f\u9700\u8981\u5408\u5e76\u7684\u65f6\u5019,reset \u6062\u590d\u90e8\u5206\u7684\u4ee3\u7801\u4f9d\u7136\u4f1a\u51fa\u73b0\u5728\u5386\u53f2\u5206\u652f\u91cc.\u4f46\u662frevert \u65b9\u5411\u63d0\u4ea4\u7684commit \u5e76\u4e0d\u4f1a\u51fa\u73b0\u5728\u5386\u53f2\u5206\u652f\u91cc. reset \u662f\u5728\u6b63\u5e38\u7684commit\u5386\u53f2\u4e2d,\u5220\u9664\u4e86\u6307\u5b9a\u7684commit,\u8fd9\u65f6 HEAD \u662f\u5411\u540e\u79fb\u52a8\u4e86,\u800c revert \u662f\u5728\u6b63\u5e38\u7684commit\u5386\u53f2\u4e2d\u518dcommit\u4e00\u6b21,\u53ea\u4e0d\u8fc7\u662f\u53cd\u5411\u63d0\u4ea4,\u4ed6\u7684 HEAD \u662f\u4e00\u76f4\u5411\u524d\u7684","title":"\u65e5\u5e38\u64cd\u4f5c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#_1","text":"#\u914d\u7f6e\u4f7f\u7528git\u4ed3\u5e93\u7684\u4eba\u5458\u59d3\u540d git config --global user.name \"Your Name Comes Here\" #\u914d\u7f6e\u4f7f\u7528git\u4ed3\u5e93\u7684\u4eba\u5458email git config --global user.email you@yourdomain.example.com #\u914d\u7f6e\u5230\u7f13\u5b58 \u9ed8\u8ba415\u5206\u949f git config --global credential.helper cache #\u4fee\u6539\u7f13\u5b58\u65f6\u95f4 git config --global credential.helper 'cache --timeout=3600' git config --global color.ui true git config --global alias.co checkout git config --global alias.ci commit git config --global alias.st status git config --global alias.br branch git config --global core.editor \"mate -w\" # \u8bbe\u7f6eEditor\u4f7f\u7528textmate git config -1 #\u5217\u4e3e\u6240\u6709\u914d\u7f6e #\u7528\u6237\u7684git\u914d\u7f6e\u6587\u4ef6~/.gitconfig","title":"\u521d\u59cb\u5316\u914d\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#git","text":"\u53d6\u5f97Git\u4ed3\u5e93 #\u521d\u59cb\u5316\u4e00\u4e2a\u7248\u672c\u4ed3\u5e93 git init #Clone\u8fdc\u7a0b\u7248\u672c\u5e93 git clone git@xbc.me:wordpress.git #\u6dfb\u52a0\u8fdc\u7a0b\u7248\u672c\u5e93origin\uff0c\u8bed\u6cd5\u4e3a git remote add [shortname] [url] git remote add origin git@xbc.me:wordpress.git #\u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93 git remote -v","title":"\u53d6\u5f97Git\u4ed3\u5e93"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#git_1","text":"git remote -v # \u67e5\u770b\u8fdc\u7a0b\u670d\u52a1\u5668\u5730\u5740\u548c\u4ed3\u5e93\u540d\u79f0 git remote show origin # \u67e5\u770b\u8fdc\u7a0b\u670d\u52a1\u5668\u4ed3\u5e93\u72b6\u6001 git remote add origin git@ github:robbin/robbin_site.git # \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 git remote set-url origin git@ github.com:robbin/robbin_site.git # \u8bbe\u7f6e\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740(\u7528\u4e8e\u4fee\u6539\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740) git remote rm <repository> # \u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93 #\u521b\u5efa\u8fdc\u7a0b\u4ed3\u5e93 git clone --bare robbin_site robbin_site.git # \u7528\u5e26\u7248\u672c\u7684\u9879\u76ee\u521b\u5efa\u7eaf\u7248\u672c\u4ed3\u5e93 scp -r my_project.git git@ git.csdn.net:~ # \u5c06\u7eaf\u4ed3\u5e93\u4e0a\u4f20\u5230\u670d\u52a1\u5668\u4e0a mkdir robbin_site.git && cd robbin_site.git && git --bare init # \u5728\u670d\u52a1\u5668\u521b\u5efa\u7eaf\u4ed3\u5e93 git remote add origin git@ github.com:robbin/robbin_site.git # \u8bbe\u7f6e\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740 git push -u origin master # \u5ba2\u6237\u7aef\u9996\u6b21\u63d0\u4ea4 git push -u origin develop # \u9996\u6b21\u5c06\u672c\u5730develop\u5206\u652f\u63d0\u4ea4\u5230\u8fdc\u7a0bdevelop\u5206\u652f\uff0c\u5e76\u4e14track git remote set-head origin master # \u8bbe\u7f6e\u8fdc\u7a0b\u4ed3\u5e93\u7684HEAD\u6307\u5411master\u5206\u652f \u4e5f\u53ef\u4ee5\u547d\u4ee4\u8bbe\u7f6e\u8ddf\u8e2a\u8fdc\u7a0b\u5e93\u548c\u672c\u5730\u5e93 git branch --set-upstream master origin/master git branch --set-upstream develop origin/develop","title":"Git\u8fdc\u7a0b\u4ed3\u5e93\u7ba1\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#_2","text":"git help <command> # \u663e\u793acommand\u7684help git show # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u7684\u5185\u5bb9 git show $id git co -- <file> # \u629b\u5f03\u5de5\u4f5c\u533a\u4fee\u6539 git co . # \u629b\u5f03\u5de5\u4f5c\u533a\u4fee\u6539 git add <file> # \u5c06\u5de5\u4f5c\u6587\u4ef6\u4fee\u6539\u63d0\u4ea4\u5230\u672c\u5730\u6682\u5b58\u533a git add . # \u5c06\u6240\u6709\u4fee\u6539\u8fc7\u7684\u5de5\u4f5c\u6587\u4ef6\u63d0\u4ea4\u6682\u5b58\u533a git rm <file> # \u4ece\u7248\u672c\u5e93\u4e2d\u5220\u9664\u6587\u4ef6 git rm <file> --cached # \u4ece\u7248\u672c\u5e93\u4e2d\u5220\u9664\u6587\u4ef6\uff0c\u4f46\u4e0d\u5220\u9664\u6587\u4ef6 git reset <file> # \u4ece\u6682\u5b58\u533a\u6062\u590d\u5230\u5de5\u4f5c\u6587\u4ef6 git reset -- . # \u4ece\u6682\u5b58\u533a\u6062\u590d\u5230\u5de5\u4f5c\u6587\u4ef6 git reset --hard # \u6062\u590d\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u8fc7\u7684\u72b6\u6001\uff0c\u5373\u653e\u5f03\u4e0a\u6b21\u63d0\u4ea4\u540e\u7684\u6240\u6709\u672c\u6b21\u4fee\u6539 git ci <file> git ci . git ci -a # \u5c06git add, git rm\u548cgit ci\u7b49\u64cd\u4f5c\u90fd\u5408\u5e76\u5728\u4e00\u8d77\u505a git ci -am \"some comments\" git ci --amend # \u4fee\u6539\u6700\u540e\u4e00\u6b21\u63d0\u4ea4\u8bb0\u5f55 git revert < $id > # \u6062\u590d\u67d0\u6b21\u63d0\u4ea4\u7684\u72b6\u6001\uff0c\u6062\u590d\u52a8\u4f5c\u672c\u8eab\u4e5f\u521b\u5efa\u4e86\u4e00\u6b21\u63d0\u4ea4\u5bf9\u8c61 git revert HEAD # \u6062\u590d\u6700\u540e\u4e00\u6b21\u63d0\u4ea4\u7684\u72b6\u6001","title":"\u67e5\u770b\u3001\u6dfb\u52a0\u3001\u63d0\u4ea4\u3001\u5220\u9664\u3001\u627e\u56de\uff0c\u91cd\u7f6e\u4fee\u6539\u6587\u4ef6"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#diff","text":"git diff <file> # \u6bd4\u8f83\u5f53\u524d\u6587\u4ef6\u548c\u6682\u5b58\u533a\u6587\u4ef6\u5dee\u5f02 git diff git diff < $id1 > < $id2 > # \u6bd4\u8f83\u4e24\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02 git diff <branch1>..<branch2> # \u5728\u4e24\u4e2a\u5206\u652f\u4e4b\u95f4\u6bd4\u8f83 git diff --staged # \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u7248\u672c\u5e93\u5dee\u5f02 git diff --cached # \u6bd4\u8f83\u6682\u5b58\u533a\u548c\u7248\u672c\u5e93\u5dee\u5f02 git diff --stat # \u4ec5\u4ec5\u6bd4\u8f83\u7edf\u8ba1\u4fe1\u606f","title":"\u6587\u4ef6diff"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#_3","text":"git log git log <file> # \u67e5\u770b\u8be5\u6587\u4ef6\u6bcf\u6b21\u63d0\u4ea4\u8bb0\u5f55 git log -p <file> # \u67e5\u770b\u6bcf\u6b21\u8be6\u7ec6\u4fee\u6539\u5185\u5bb9\u7684diff git log -p -2 # \u67e5\u770b\u6700\u8fd1\u4e24\u6b21\u8be6\u7ec6\u4fee\u6539\u5185\u5bb9\u7684diff git log --stat #\u67e5\u770b\u63d0\u4ea4\u7edf\u8ba1\u4fe1\u606f tig Mac\u4e0a\u53ef\u4ee5\u4f7f\u7528tig\u4ee3\u66ffdiff\u548clog\uff0cbrew install tig","title":"\u63d0\u4ea4\u8bb0\u5f55"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#_4","text":"#\u6dfb\u52a0\u5f53\u524d\u4fee\u6539\u7684\u6587\u4ef6\u5230\u6682\u5b58\u533a git add . #\u5982\u679c\u4f60\u81ea\u52a8\u8ffd\u8e2a\u6587\u4ef6\uff0c\u5305\u62ec\u4f60\u5df2\u7ecf\u624b\u52a8\u5220\u9664\u7684\uff0c\u72b6\u6001\u4e3aDeleted\u7684\u6587\u4ef6 git add -u #\u63d0\u4ea4\u4f60\u7684\u4fee\u6539 git commit \u2013m \"\u4f60\u7684\u6ce8\u91ca\" #\u63a8\u9001\u4f60\u7684\u66f4\u65b0\u5230\u8fdc\u7a0b\u670d\u52a1\u5668,\u8bed\u6cd5\u4e3a git push [\u8fdc\u7a0b\u540d] [\u672c\u5730\u5206\u652f]:[\u8fdc\u7a0b\u5206\u652f] git push origin master #\u67e5\u770b\u6587\u4ef6\u72b6\u6001 git status #\u8ddf\u8e2a\u65b0\u6587\u4ef6 git add readme.txt #\u4ece\u5f53\u524d\u8ddf\u8e2a\u5217\u8868\u79fb\u9664\u6587\u4ef6\uff0c\u5e76\u5b8c\u5168\u5220\u9664 git rm readme.txt #\u4ec5\u5728\u6682\u5b58\u533a\u5220\u9664\uff0c\u4fdd\u7559\u6587\u4ef6\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u4e0d\u518d\u8ddf\u8e2a git rm \u2013cached readme.txt #\u91cd\u547d\u540d\u6587\u4ef6 git mv reademe.txt readme #\u67e5\u770b\u63d0\u4ea4\u7684\u5386\u53f2\u8bb0\u5f55 git log #\u4fee\u6539\u6700\u540e\u4e00\u6b21\u63d0\u4ea4\u6ce8\u91ca\u7684\uff0c\u5229\u7528\u2013amend\u53c2\u6570 git commit --amend #\u5fd8\u8bb0\u63d0\u4ea4\u67d0\u4e9b\u4fee\u6539\uff0c\u4e0b\u9762\u7684\u4e09\u6761\u547d\u4ee4\u53ea\u4f1a\u5f97\u5230\u4e00\u4e2a\u63d0\u4ea4\u3002 git commit \u2013m & quot ; add readme.txt & quot ; git add readme_forgotten git commit \u2013amend #\u5047\u8bbe\u4f60\u5df2\u7ecf\u4f7f\u7528git add .\uff0c\u5c06\u4fee\u6539\u8fc7\u7684\u6587\u4ef6a\u3001b\u52a0\u5230\u6682\u5b58\u533a #\u73b0\u5728\u4f60\u53ea\u60f3\u63d0\u4ea4a\u6587\u4ef6\uff0c\u4e0d\u60f3\u63d0\u4ea4b\u6587\u4ef6\uff0c\u5e94\u8be5\u8fd9\u6837 git reset HEAD b #\u53d6\u6d88\u5bf9\u6587\u4ef6\u7684\u4fee\u6539 git checkout \u2013- readme.txt","title":"\u63d0\u4ea4\u4fee\u6539"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#_5","text":"#\u521b\u5efa\u4e00\u4e2a\u5206\u652f git branch iss53 #\u5207\u6362\u5de5\u4f5c\u76ee\u5f55\u5230iss53 git chekcout iss53 #\u5c06\u4e0a\u9762\u7684\u547d\u4ee4\u5408\u5728\u4e00\u8d77\uff0c\u521b\u5efaiss53\u5206\u652f\u5e76\u5207\u6362\u5230iss53 git chekcout \u2013b iss53 #\u5408\u5e76iss53\u5206\u652f\uff0c\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e3amaster git merge iss53 #\u5408\u5e76\u5b8c\u6210\u540e\uff0c\u6ca1\u6709\u51fa\u73b0\u51b2\u7a81\uff0c\u5220\u9664iss53\u5206\u652f git branch \u2013d iss53 #\u62c9\u53bb\u8fdc\u7a0b\u4ed3\u5e93\u7684\u6570\u636e\uff0c\u8bed\u6cd5\u4e3a git fetch [remote-name] git fetch #fetch \u4f1a\u62c9\u53bb\u6700\u65b0\u7684\u8fdc\u7a0b\u4ed3\u5e93\u6570\u636e\uff0c\u4f46\u4e0d\u4f1a\u81ea\u52a8\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u8981\u81ea\u52a8\u5408\u5e76 git pull #\u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f git remote show origin #\u5efa\u7acb\u672c\u5730\u7684dev\u5206\u652f\u8ffd\u8e2a\u8fdc\u7a0b\u4ed3\u5e93\u7684develop\u5206\u652f git checkout \u2013b dev origin/develop","title":"\u57fa\u672c\u7684\u5206\u652f\u7ba1\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#_6","text":"git br -r # \u67e5\u770b\u8fdc\u7a0b\u5206\u652f git br <new_branch> # \u521b\u5efa\u65b0\u7684\u5206\u652f git br -v # \u67e5\u770b\u5404\u4e2a\u5206\u652f\u6700\u540e\u63d0\u4ea4\u4fe1\u606f git br --merged # \u67e5\u770b\u5df2\u7ecf\u88ab\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u7684\u5206\u652f git br --no-merged # \u67e5\u770b\u5c1a\u672a\u88ab\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f\u7684\u5206\u652f git co <branch> # \u5207\u6362\u5230\u67d0\u4e2a\u5206\u652f git co -b <new_branch> # \u521b\u5efa\u65b0\u7684\u5206\u652f\uff0c\u5e76\u4e14\u5207\u6362\u8fc7\u53bb git co -b <new_branch> <branch> # \u57fa\u4e8ebranch\u521b\u5efa\u65b0\u7684new_branch git co $id # \u628a\u67d0\u6b21\u5386\u53f2\u63d0\u4ea4\u8bb0\u5f55checkout\u51fa\u6765\uff0c\u4f46\u65e0\u5206\u652f\u4fe1\u606f\uff0c\u5207\u6362\u5230\u5176\u4ed6\u5206\u652f\u4f1a\u81ea\u52a8\u5220\u9664 git co $id -b <new_branch> # \u628a\u67d0\u6b21\u5386\u53f2\u63d0\u4ea4\u8bb0\u5f55checkout\u51fa\u6765\uff0c\u521b\u5efa\u6210\u4e00\u4e2a\u5206\u652f git br -d <branch> # \u5220\u9664\u67d0\u4e2a\u5206\u652f git br -D <branch> # \u5f3a\u5236\u5220\u9664\u67d0\u4e2a\u5206\u652f (\u672a\u88ab\u5408\u5e76\u7684\u5206\u652f\u88ab\u5220\u9664\u7684\u65f6\u5019\u9700\u8981\u5f3a\u5236)","title":"\u5206\u652f\u67e5\u770b\u3001\u5207\u6362\u3001\u521b\u5efa\u548c\u5220\u9664"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#rebase","text":"git merge <branch> # \u5c06branch\u5206\u652f\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f git merge origin/master --no-ff # \u4e0d\u8981Fast-Foward\u5408\u5e76\uff0c\u8fd9\u6837\u53ef\u4ee5\u751f\u6210merge\u63d0\u4ea4 git rebase master <branch> # \u5c06master rebase\u5230branch\uff0c\u76f8\u5f53\u4e8e\uff1a git co <branch> && git rebase master && git co master && git merge <branch>","title":"\u5206\u652f\u5408\u5e76\u548crebase"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#git_2","text":"git pull # \u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u6240\u6709\u5206\u652f\u66f4\u65b0\u5e76\u5408\u5e76\u5230\u672c\u5730 git pull --no-ff # \u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u6240\u6709\u5206\u652f\u66f4\u65b0\u5e76\u5408\u5e76\u5230\u672c\u5730\uff0c\u4e0d\u8981\u5feb\u8fdb\u5408\u5e76 git fetch origin # \u6293\u53d6\u8fdc\u7a0b\u4ed3\u5e93\u66f4\u65b0 git merge origin/master # \u5c06\u8fdc\u7a0b\u4e3b\u5206\u652f\u5408\u5e76\u5230\u672c\u5730\u5f53\u524d\u5206\u652f git co --track origin/branch # \u8ddf\u8e2a\u67d0\u4e2a\u8fdc\u7a0b\u5206\u652f\u521b\u5efa\u76f8\u5e94\u7684\u672c\u5730\u5206\u652f git co -b <local_branch> origin/<remote_branch> # \u57fa\u4e8e\u8fdc\u7a0b\u5206\u652f\u521b\u5efa\u672c\u5730\u5206\u652f\uff0c\u529f\u80fd\u540c\u4e0a git push # push\u6240\u6709\u5206\u652f git push origin master # \u5c06\u672c\u5730\u4e3b\u5206\u652f\u63a8\u5230\u8fdc\u7a0b\u4e3b\u5206\u652f git push -u origin master # \u5c06\u672c\u5730\u4e3b\u5206\u652f\u63a8\u5230\u8fdc\u7a0b(\u5982\u65e0\u8fdc\u7a0b\u4e3b\u5206\u652f\u5219\u521b\u5efa\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u8fdc\u7a0b\u4ed3\u5e93) git push origin <local_branch> # \u521b\u5efa\u8fdc\u7a0b\u5206\u652f\uff0c origin\u662f\u8fdc\u7a0b\u4ed3\u5e93\u540d git push origin <local_branch>:<remote_branch> # \u521b\u5efa\u8fdc\u7a0b\u5206\u652f git push origin :<remote_branch> #\u5148\u5220\u9664\u672c\u5730\u5206\u652f(git br -d <branch>)\uff0c\u7136\u540e\u518dpush\u5220\u9664\u8fdc\u7a0b\u5206\u652f","title":"Git\u8fdc\u7a0b\u5206\u652f\u7ba1\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#git_3","text":"git diff > ../sync.patch # \u751f\u6210\u8865\u4e01 git apply ../sync.patch # \u6253\u8865\u4e01 git apply --check ../sync.patch #\u6d4b\u8bd5\u8865\u4e01\u80fd\u5426\u6210\u529f","title":"Git\u8865\u4e01\u7ba1\u7406(\u65b9\u4fbf\u5728\u591a\u53f0\u673a\u5668\u4e0a\u5f00\u53d1\u540c\u6b65\u65f6\u7528)"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#git_4","text":"git stash # \u6682\u5b58 git stash list # \u5217\u6240\u6709stash git stash apply # \u6062\u590d\u6682\u5b58\u7684\u5185\u5bb9 git stash drop # \u5220\u9664\u6682\u5b58\u533a \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/iteye_5904/article/details/82482574","title":"Git\u6682\u5b58\u7ba1\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#pull","text":"git pull [ --rebase ] \u8fdc\u7a0b\u5206\u652f\u540d\u79f0:\u672c\u5730\u5206\u652f\u540d","title":"pull\u8fdc\u7aef\u7684\u5206\u652f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#_7","text":"Checkout git checkout --orphan latest_branch Add all the files git add -A Commit the changes git commit -am \"commit message\" Delete the branch git branch -D master Rename the current branch to master git branch -m master Finally, force update your repository **git push -f origin master**","title":"\u5220\u9664\u5386\u53f2\u8bb0\u5f55,\u5f62\u6210\u5168\u65b0\u5e93"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#global-email-name","text":"git config --global --unset user.email git config --global --unset user.name","title":"\u53d6\u6d88global email name\u8bbe\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#_8","text":"# \u5220\u9664\u6587\u4ef6 git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch password.txt' --prune-empty --tag-name-filter cat -- --all #\u5220\u9664\u6587\u4ef6\u5939 git rm -r git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch [dirname]' --prune-empty --tag-name-filter cat -- --all # push git push origin master --force --all","title":"\u5220\u9664\u6587\u4ef6\u53ca\u5386\u53f2"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Git/%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C/#_9","text":"git add \u540e,\u53d6\u6d88\u6587\u4ef6add git reset HEAD file \u53d6\u6d88\u5de5\u4f5c\u533a\u6587\u4ef6\u4fee\u6539 git checkout -- \u4ee3\u7801\u6ca1\u6709push\u4e4b\u524d\u505a\u56de\u9000\u5904\u7406 git reset [ --mixed | --soft | --hard ] --mixed \u9ed8\u8ba4,\u4fdd\u7559\u6e90\u7801 ,index,commit \u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c --soft \u4fdd\u7559\u6e90\u7801,\u53ea\u56de\u9000\u5230commit \u4fe1\u606f\u5230\u67d0\u4e2a\u7248\u672c.\u4e0d\u6d89\u53caindex\u7684\u56de\u9000,\u5982\u679c\u8fd8\u9700\u8981\u63d0\u4ea4,\u76f4\u63a5commit\u5373\u53ef --hard \u6e90\u7801\u4e5f\u4f1a\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c,commit\u548cindex \u90fd\u56de\u56de\u9000\u5230\u67d0\u4e2a\u7248\u672c.(\u6ce8\u610f,\u8fd9\u79cd\u65b9\u5f0f\u662f\u6539\u53d8\u672c\u5730\u4ee3\u7801\u4ed3\u5e93\u6e90\u7801) \u4ee3\u7801push\u4e4b\u540e git revert git revert\u7528\u4e8e\u53cd\u8f6c\u63d0\u4ea4,\u6267\u884cevert\u547d\u4ee4\u65f6\u8981\u6c42\u5de5\u4f5c\u6811\u5fc5\u987b\u662f\u5e72\u51c0\u7684. git revert\u7528\u4e00\u4e2a\u65b0\u63d0\u4ea4\u6765\u6d88\u9664\u4e00\u4e2a\u5386\u53f2\u63d0\u4ea4\u6240\u505a\u7684\u4efb\u4f55\u4fee\u6539. \u533a\u522b git revert\u662f\u7528\u4e00\u6b21\u65b0\u7684commit\u6765\u56de\u6eda\u4e4b\u524d\u7684commit\uff0cgit reset\u662f\u76f4\u63a5\u5220\u9664\u6307\u5b9a\u7684commit \u4e0a\u9762\u6211\u4eec\u8bf4\u7684\u5982\u679c\u4f60\u5df2\u7ecfpush\u5230\u7ebf\u4e0a\u4ee3\u7801\u5e93, reset \u5220\u9664\u6307\u5b9acommit\u4ee5\u540e,\u4f60git push\u53ef\u80fd\u5bfc\u81f4\u4e00\u5927\u5806\u51b2\u7a81.\u4f46\u662frevert \u5e76\u4e0d\u4f1a. \u5982\u679c\u5728\u65e5\u540e\u73b0\u6709\u5206\u652f\u548c\u5386\u53f2\u5206\u652f\u9700\u8981\u5408\u5e76\u7684\u65f6\u5019,reset \u6062\u590d\u90e8\u5206\u7684\u4ee3\u7801\u4f9d\u7136\u4f1a\u51fa\u73b0\u5728\u5386\u53f2\u5206\u652f\u91cc.\u4f46\u662frevert \u65b9\u5411\u63d0\u4ea4\u7684commit \u5e76\u4e0d\u4f1a\u51fa\u73b0\u5728\u5386\u53f2\u5206\u652f\u91cc. reset \u662f\u5728\u6b63\u5e38\u7684commit\u5386\u53f2\u4e2d,\u5220\u9664\u4e86\u6307\u5b9a\u7684commit,\u8fd9\u65f6 HEAD \u662f\u5411\u540e\u79fb\u52a8\u4e86,\u800c revert \u662f\u5728\u6b63\u5e38\u7684commit\u5386\u53f2\u4e2d\u518dcommit\u4e00\u6b21,\u53ea\u4e0d\u8fc7\u662f\u53cd\u5411\u63d0\u4ea4,\u4ed6\u7684 HEAD \u662f\u4e00\u76f4\u5411\u524d\u7684","title":"\u64a4\u9500\u5904\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Go/GoCheatSheet/","text":"Go Cheat Sheet \u00b6 /******************************************************************************* * Golang CHEATSHEET (\u4e2d\u6587\u901f\u67e5\u8868) - by chlins (created on 2018/02/14) * Version: 3, Last Modified: 2018/03/07 19:51 * https://github.com/skywind3000/awesome-cheatsheets ******************************************************************************/ /****************************************************************************** * Go \u7f16\u8bd1\u5668\u547d\u4ee4 *****************************************************************************/ go command [ arguments ] // go \u547d\u4ee4 [\u53c2\u6570] go build // \u7f16\u8bd1\u5305\u548c\u4f9d\u8d56\u5305 go clean // \u79fb\u9664\u5bf9\u8c61\u548c\u7f13\u5b58\u6587\u4ef6 go doc // \u663e\u793a\u5305\u7684\u6587\u6863 go env // \u6253\u5370go\u7684\u73af\u5883\u53d8\u91cf\u4fe1\u606f go bug // \u62a5\u544abug go fix // \u66f4\u65b0\u5305\u4f7f\u7528\u65b0\u7684api go fmt // \u683c\u5f0f\u89c4\u8303\u5316\u4ee3\u7801 go generate // \u901a\u8fc7\u5904\u7406\u8d44\u6e90\u751f\u6210go\u6587\u4ef6 go get // \u4e0b\u8f7d\u5e76\u5b89\u88c5\u5305\u53ca\u5176\u4f9d\u8d56 go install // \u7f16\u8bd1\u548c\u5b89\u88c5\u5305\u53ca\u5176\u4f9d\u8d56 go list // \u5217\u51fa\u6240\u6709\u5305 go run // \u7f16\u8bd1\u548c\u8fd0\u884cgo\u7a0b\u5e8f go test // \u6d4b\u8bd5 go tool // \u8fd0\u884c\u7ed9\u5b9a\u7684go\u5de5\u5177 go version // \u663e\u793ago\u5f53\u524d\u7248\u672c go vet // \u53d1\u73b0\u4ee3\u7801\u4e2d\u53ef\u80fd\u7684\u9519\u8bef /******************************************************************************* * Hello World ******************************************************************************/ // main.go package main // \u5305\u540d import \"fmt\" // \u5bfc\u5165fmt\u5305 func main () { // \u4e3b\u51fd\u6570 fmt . Println ( \"Hello World\" ) // \u6253\u5370\u8f93\u51fa } // go run main.go // \u76f4\u63a5\u8fd0\u884c // go build && ./main // \u5148\u7f16\u8bd1\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\u518d\u8fd0\u884c /******************************************************************************* * \u64cd\u4f5c\u7b26 ******************************************************************************/ // \u7b97\u6570\u64cd\u4f5c\u7b26 + - * / % // \u52a0 \u51cf \u4e58 \u9664 \u53d6\u4f59 & | ^ &^ // \u4f4d\u4e0e \u4f4d\u6216 \u4f4d\u5f02\u6216 \u4f4d\u4e0e\u975e << >> // \u5de6\u79fb \u53f3\u79fb // \u6bd4\u8f83\u64cd\u4f5c == != // \u7b49\u4e8e \u4e0d\u7b49\u4e8e < <= // \u5c0f\u4e8e \u5c0f\u4e8e\u7b49\u4e8e > >= // \u5927\u4e8e \u5927\u4e8e\u7b49\u4e8e // \u903b\u8f91\u64cd\u4f5c && || ! // \u903b\u8f91\u4e0e \u903b\u8f91\u6216 \u903b\u8f91\u975e // \u5176\u4ed6 & * <- // \u5730\u5740 \u6307\u9488\u5f15\u7528 \u901a\u9053\u64cd\u4f5c /******************************************************************************* * \u58f0\u660e ******************************************************************************/ a := 1 // \u76f4\u63a5\u7ed9\u4e00\u4e2a\u672a\u58f0\u660e\u7684\u53d8\u91cf\u8d4b\u503c var b int // var \u53d8\u91cf\u540d \u6570\u636e\u7c7b\u578b \u6765\u58f0\u660e var c float64 // \u6ce8\u610f\uff1a\u4f7f\u7528var\u58f0\u660e\u8fc7\u7684\u53d8\u91cf\u4e0d\u53ef\u518d\u4f7f\u7528 := \u8d4b\u503c a = 2 const d = 1 // \u5e38\u91cf /******************************************************************************* * \u6570\u636e\u7c7b\u578b ******************************************************************************/ s := \"hello\" // \u5b57\u7b26 a := 1 // int b := 1.2 // float64 c := 1 + 5i // complex128 // \u6570\u7ec4 arr1 := [ 3 ] int { 4 , 5 , 6 } // \u624b\u52a8\u6307\u5b9a\u957f\u5ea6 arr2 := [ ... ] int { 1 , 2 , 3 } // \u7531golang\u81ea\u52a8\u8ba1\u7b97\u957f\u5ea6 // \u5207\u7247 sliceInt := [] int { 1 , 2 } // \u4e0d\u6307\u5b9a\u957f\u5ea6 sliceByte := [] byte ( \"hello\" ) // \u6307\u9488 a := 1 point := & a // \u5c06a\u7684\u5730\u5740\u8d4b\u7ed9point /******************************************************************************* * \u6d41\u7a0b\u63a7\u5236 ******************************************************************************/ // for i := 10 for i > 0 { println ( i -- ) } // if else if i == 10 { println ( \"i == 10\" ) } else { println ( \"i != 10\" ) } // switch switch i { case 10 : println ( \"i == 10\" ) default : println ( \"i != 10\" ) } /******************************************************************************* * \u51fd\u6570 ******************************************************************************/ // \u4ee5func\u5173\u952e\u5b57\u58f0\u660e func test () {} f := func () { println ( \"Lambdas function\" )} // \u533f\u540d\u51fd\u6570 f () func get () ( a , b string ) { // \u51fd\u6570\u591a\u8fd4\u56de\u503c return \"a\" , \"b\" } a , b := get () /******************************************************************************* * \u7ed3\u6784\u4f53 ******************************************************************************/ // golang\u4e2d\u6ca1\u6709class\u53ea\u6709struct type People struct { Age int // \u5927\u5199\u5f00\u5934\u7684\u53d8\u91cf\u5728\u5305\u5916\u53ef\u4ee5\u8bbf\u95ee name string // \u5c0f\u5199\u5f00\u5934\u7684\u53d8\u91cf\u4ec5\u53ef\u5728\u672c\u5305\u5185\u8bbf\u95ee } p1 := People { 25 , \"Kaven\" } // \u5fc5\u987b\u6309\u7167\u7ed3\u6784\u4f53\u5185\u90e8\u5b9a\u4e49\u7684\u987a\u5e8f p2 := People { name : \"Kaven\" , age : 25 } // \u82e5\u4e0d\u6309\u987a\u5e8f\u5219\u9700\u8981\u6307\u5b9a\u5b57\u6bb5 // \u4e5f\u53ef\u4ee5\u5148\u4e0d\u8d4b\u503c p3 := new ( People ) p3 . Age = 25 p3 . name = \"Kaven\" /******************************************************************************* * \u65b9\u6cd5 ******************************************************************************/ // \u65b9\u6cd5\u901a\u5e38\u662f\u9488\u5bf9\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u8bf4\u7684 type Foo struct { a int } // \u503c\u63a5\u6536\u8005 func ( f Foo ) test () { f . a = 1 // \u4e0d\u4f1a\u6539\u53d8\u539f\u6765\u7684\u503c } // \u6307\u9488\u63a5\u6536\u8005 func ( f * Foo ) test () { f . a = 1 // \u4f1a\u6539\u53d8\u539f\u503c } /******************************************************************************* * go \u534f\u7a0b ******************************************************************************/ go func () { time . Sleep ( 10 * time . Second ) println ( \"hello\" ) }() // \u4e0d\u4f1a\u963b\u585e\u4ee3\u7801\u7684\u8fd0\u884c \u4ee3\u7801\u4f1a\u76f4\u63a5\u5411\u4e0b\u8fd0\u884c // channel \u901a\u9053 c := make ( chan int ) // \u4e24\u4e2a\u534f\u7a0b\u95f4\u53ef\u4ee5\u901a\u8fc7chan\u901a\u4fe1 go func () { c <- 1 }() // \u6b64\u65f6c\u4f1a\u88ab\u963b\u585e \u76f4\u5230\u503c\u88ab\u53d6\u8d70\u524d\u90fd\u4e0d\u53ef\u5728\u585e\u5165\u65b0\u503c go func () { println ( <- c )}() // \u5e26\u7f13\u5b58\u7684channel bc := make ( chan int , 2 ) go func () { c <- 1 ; c <- 2 }() // c\u4e2d\u53ef\u4ee5\u5b58\u50a8\u58f0\u660e\u65f6\u6240\u5b9a\u4e49\u7684\u7f13\u5b58\u5927\u5c0f\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u662f2\u4e2a go func () { println ( <- c )}() /******************************************************************************* * \u63a5\u53e3 ******************************************************************************/ // go\u7684\u63a5\u53e3\u4e3a\u9e2d\u5b50\u7c7b\u578b\uff0c\u5373\u53ea\u8981\u4f60\u5b9e\u73b0\u4e86\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u5c31\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3 type Reader interface { Reading () // \u4ec5\u9700\u5b9e\u73b0Reading\u65b9\u6cd5\u5c31\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3 } type As struct {} func ( a As ) Reading () {} // \u5b9e\u73b0\u4e86Reader\u63a5\u53e3 type Bs struct {} func ( b Bs ) Reading () {} // \u4e5f\u5b9e\u73b0\u4e86Reader\u63a5\u53e3 func ( b Bs ) Closing () {} /******************************************************************************* * \u4e00\u4e9b\u63a8\u8350 ******************************************************************************/ // \u5165\u95e8\u4e66\u7c4d \u300a Go\u5b66\u4e60\u7b14\u8bb0 \u300b // \u96e8\u75d5\u7684 \u300a Go\u8bed\u8a00\u5b9e\u6218 \u300b // \u5f3a\u70c8\u63a8\u8350 // \u7f51\u4e0a\u8d44\u6599 https : //github.com/astaxie/build-web-application-with-golang // \u8c22\u5927\u7684 https : //github.com/Unknwon/the-way-to-go_ZH_CN // \u65e0\u95fb https : //github.com/Unknwon/go-fundamental-programming // \u65e0\u95fb\u6559\u5b66\u89c6\u9891 // \u7b2c\u4e09\u65b9\u7c7b\u5e93 https : //golanglibs.com/ // \u5927\u6742\u70e9 https : //github.com/avelino/awesome-go /******************************************************************************* * References ******************************************************************************/ https : //github.com/a8m/go-lang-cheat-sheet https : //github.com/LeCoupa/awesome-cheatsheets","title":"Go Cheat Sheet"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Go/GoCheatSheet/#go-cheat-sheet","text":"/******************************************************************************* * Golang CHEATSHEET (\u4e2d\u6587\u901f\u67e5\u8868) - by chlins (created on 2018/02/14) * Version: 3, Last Modified: 2018/03/07 19:51 * https://github.com/skywind3000/awesome-cheatsheets ******************************************************************************/ /****************************************************************************** * Go \u7f16\u8bd1\u5668\u547d\u4ee4 *****************************************************************************/ go command [ arguments ] // go \u547d\u4ee4 [\u53c2\u6570] go build // \u7f16\u8bd1\u5305\u548c\u4f9d\u8d56\u5305 go clean // \u79fb\u9664\u5bf9\u8c61\u548c\u7f13\u5b58\u6587\u4ef6 go doc // \u663e\u793a\u5305\u7684\u6587\u6863 go env // \u6253\u5370go\u7684\u73af\u5883\u53d8\u91cf\u4fe1\u606f go bug // \u62a5\u544abug go fix // \u66f4\u65b0\u5305\u4f7f\u7528\u65b0\u7684api go fmt // \u683c\u5f0f\u89c4\u8303\u5316\u4ee3\u7801 go generate // \u901a\u8fc7\u5904\u7406\u8d44\u6e90\u751f\u6210go\u6587\u4ef6 go get // \u4e0b\u8f7d\u5e76\u5b89\u88c5\u5305\u53ca\u5176\u4f9d\u8d56 go install // \u7f16\u8bd1\u548c\u5b89\u88c5\u5305\u53ca\u5176\u4f9d\u8d56 go list // \u5217\u51fa\u6240\u6709\u5305 go run // \u7f16\u8bd1\u548c\u8fd0\u884cgo\u7a0b\u5e8f go test // \u6d4b\u8bd5 go tool // \u8fd0\u884c\u7ed9\u5b9a\u7684go\u5de5\u5177 go version // \u663e\u793ago\u5f53\u524d\u7248\u672c go vet // \u53d1\u73b0\u4ee3\u7801\u4e2d\u53ef\u80fd\u7684\u9519\u8bef /******************************************************************************* * Hello World ******************************************************************************/ // main.go package main // \u5305\u540d import \"fmt\" // \u5bfc\u5165fmt\u5305 func main () { // \u4e3b\u51fd\u6570 fmt . Println ( \"Hello World\" ) // \u6253\u5370\u8f93\u51fa } // go run main.go // \u76f4\u63a5\u8fd0\u884c // go build && ./main // \u5148\u7f16\u8bd1\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\u518d\u8fd0\u884c /******************************************************************************* * \u64cd\u4f5c\u7b26 ******************************************************************************/ // \u7b97\u6570\u64cd\u4f5c\u7b26 + - * / % // \u52a0 \u51cf \u4e58 \u9664 \u53d6\u4f59 & | ^ &^ // \u4f4d\u4e0e \u4f4d\u6216 \u4f4d\u5f02\u6216 \u4f4d\u4e0e\u975e << >> // \u5de6\u79fb \u53f3\u79fb // \u6bd4\u8f83\u64cd\u4f5c == != // \u7b49\u4e8e \u4e0d\u7b49\u4e8e < <= // \u5c0f\u4e8e \u5c0f\u4e8e\u7b49\u4e8e > >= // \u5927\u4e8e \u5927\u4e8e\u7b49\u4e8e // \u903b\u8f91\u64cd\u4f5c && || ! // \u903b\u8f91\u4e0e \u903b\u8f91\u6216 \u903b\u8f91\u975e // \u5176\u4ed6 & * <- // \u5730\u5740 \u6307\u9488\u5f15\u7528 \u901a\u9053\u64cd\u4f5c /******************************************************************************* * \u58f0\u660e ******************************************************************************/ a := 1 // \u76f4\u63a5\u7ed9\u4e00\u4e2a\u672a\u58f0\u660e\u7684\u53d8\u91cf\u8d4b\u503c var b int // var \u53d8\u91cf\u540d \u6570\u636e\u7c7b\u578b \u6765\u58f0\u660e var c float64 // \u6ce8\u610f\uff1a\u4f7f\u7528var\u58f0\u660e\u8fc7\u7684\u53d8\u91cf\u4e0d\u53ef\u518d\u4f7f\u7528 := \u8d4b\u503c a = 2 const d = 1 // \u5e38\u91cf /******************************************************************************* * \u6570\u636e\u7c7b\u578b ******************************************************************************/ s := \"hello\" // \u5b57\u7b26 a := 1 // int b := 1.2 // float64 c := 1 + 5i // complex128 // \u6570\u7ec4 arr1 := [ 3 ] int { 4 , 5 , 6 } // \u624b\u52a8\u6307\u5b9a\u957f\u5ea6 arr2 := [ ... ] int { 1 , 2 , 3 } // \u7531golang\u81ea\u52a8\u8ba1\u7b97\u957f\u5ea6 // \u5207\u7247 sliceInt := [] int { 1 , 2 } // \u4e0d\u6307\u5b9a\u957f\u5ea6 sliceByte := [] byte ( \"hello\" ) // \u6307\u9488 a := 1 point := & a // \u5c06a\u7684\u5730\u5740\u8d4b\u7ed9point /******************************************************************************* * \u6d41\u7a0b\u63a7\u5236 ******************************************************************************/ // for i := 10 for i > 0 { println ( i -- ) } // if else if i == 10 { println ( \"i == 10\" ) } else { println ( \"i != 10\" ) } // switch switch i { case 10 : println ( \"i == 10\" ) default : println ( \"i != 10\" ) } /******************************************************************************* * \u51fd\u6570 ******************************************************************************/ // \u4ee5func\u5173\u952e\u5b57\u58f0\u660e func test () {} f := func () { println ( \"Lambdas function\" )} // \u533f\u540d\u51fd\u6570 f () func get () ( a , b string ) { // \u51fd\u6570\u591a\u8fd4\u56de\u503c return \"a\" , \"b\" } a , b := get () /******************************************************************************* * \u7ed3\u6784\u4f53 ******************************************************************************/ // golang\u4e2d\u6ca1\u6709class\u53ea\u6709struct type People struct { Age int // \u5927\u5199\u5f00\u5934\u7684\u53d8\u91cf\u5728\u5305\u5916\u53ef\u4ee5\u8bbf\u95ee name string // \u5c0f\u5199\u5f00\u5934\u7684\u53d8\u91cf\u4ec5\u53ef\u5728\u672c\u5305\u5185\u8bbf\u95ee } p1 := People { 25 , \"Kaven\" } // \u5fc5\u987b\u6309\u7167\u7ed3\u6784\u4f53\u5185\u90e8\u5b9a\u4e49\u7684\u987a\u5e8f p2 := People { name : \"Kaven\" , age : 25 } // \u82e5\u4e0d\u6309\u987a\u5e8f\u5219\u9700\u8981\u6307\u5b9a\u5b57\u6bb5 // \u4e5f\u53ef\u4ee5\u5148\u4e0d\u8d4b\u503c p3 := new ( People ) p3 . Age = 25 p3 . name = \"Kaven\" /******************************************************************************* * \u65b9\u6cd5 ******************************************************************************/ // \u65b9\u6cd5\u901a\u5e38\u662f\u9488\u5bf9\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u8bf4\u7684 type Foo struct { a int } // \u503c\u63a5\u6536\u8005 func ( f Foo ) test () { f . a = 1 // \u4e0d\u4f1a\u6539\u53d8\u539f\u6765\u7684\u503c } // \u6307\u9488\u63a5\u6536\u8005 func ( f * Foo ) test () { f . a = 1 // \u4f1a\u6539\u53d8\u539f\u503c } /******************************************************************************* * go \u534f\u7a0b ******************************************************************************/ go func () { time . Sleep ( 10 * time . Second ) println ( \"hello\" ) }() // \u4e0d\u4f1a\u963b\u585e\u4ee3\u7801\u7684\u8fd0\u884c \u4ee3\u7801\u4f1a\u76f4\u63a5\u5411\u4e0b\u8fd0\u884c // channel \u901a\u9053 c := make ( chan int ) // \u4e24\u4e2a\u534f\u7a0b\u95f4\u53ef\u4ee5\u901a\u8fc7chan\u901a\u4fe1 go func () { c <- 1 }() // \u6b64\u65f6c\u4f1a\u88ab\u963b\u585e \u76f4\u5230\u503c\u88ab\u53d6\u8d70\u524d\u90fd\u4e0d\u53ef\u5728\u585e\u5165\u65b0\u503c go func () { println ( <- c )}() // \u5e26\u7f13\u5b58\u7684channel bc := make ( chan int , 2 ) go func () { c <- 1 ; c <- 2 }() // c\u4e2d\u53ef\u4ee5\u5b58\u50a8\u58f0\u660e\u65f6\u6240\u5b9a\u4e49\u7684\u7f13\u5b58\u5927\u5c0f\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u662f2\u4e2a go func () { println ( <- c )}() /******************************************************************************* * \u63a5\u53e3 ******************************************************************************/ // go\u7684\u63a5\u53e3\u4e3a\u9e2d\u5b50\u7c7b\u578b\uff0c\u5373\u53ea\u8981\u4f60\u5b9e\u73b0\u4e86\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u5c31\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3 type Reader interface { Reading () // \u4ec5\u9700\u5b9e\u73b0Reading\u65b9\u6cd5\u5c31\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3 } type As struct {} func ( a As ) Reading () {} // \u5b9e\u73b0\u4e86Reader\u63a5\u53e3 type Bs struct {} func ( b Bs ) Reading () {} // \u4e5f\u5b9e\u73b0\u4e86Reader\u63a5\u53e3 func ( b Bs ) Closing () {} /******************************************************************************* * \u4e00\u4e9b\u63a8\u8350 ******************************************************************************/ // \u5165\u95e8\u4e66\u7c4d \u300a Go\u5b66\u4e60\u7b14\u8bb0 \u300b // \u96e8\u75d5\u7684 \u300a Go\u8bed\u8a00\u5b9e\u6218 \u300b // \u5f3a\u70c8\u63a8\u8350 // \u7f51\u4e0a\u8d44\u6599 https : //github.com/astaxie/build-web-application-with-golang // \u8c22\u5927\u7684 https : //github.com/Unknwon/the-way-to-go_ZH_CN // \u65e0\u95fb https : //github.com/Unknwon/go-fundamental-programming // \u65e0\u95fb\u6559\u5b66\u89c6\u9891 // \u7b2c\u4e09\u65b9\u7c7b\u5e93 https : //golanglibs.com/ // \u5927\u6742\u70e9 https : //github.com/avelino/awesome-go /******************************************************************************* * References ******************************************************************************/ https : //github.com/a8m/go-lang-cheat-sheet https : //github.com/LeCoupa/awesome-cheatsheets","title":"Go Cheat Sheet"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Go/Go%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E9%97%AE%E9%A2%98/","text":"\u6742 \u00b6 import \"net/http\" net/http \u662f\u76ee\u5f55\u540d,\u867d\u7136\u5efa\u8bae\u76ee\u5f55\u540d\u4e0e\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u7684\u5305\u540d\u4e00\u81f3,\u5982\u679c\u4e0d\u4e00\u81f4\u7684\u8bdd,\u4ee3\u7801\u4e2d\u8c03\u7528\u8fd8\u662f\u7528pkgname.method\u8fd9\u6837\u7684\u65b9\u5f0f\u8c03\u7528. i**mport \u4e3b\u8981\u7684\u4f5c\u7528\u8fd8\u662f\u5728\u7f16\u8bd1\u65f6\u67e5\u627e\u5305\u7684\u8def\u5f84,\u8c03\u7528\u662f\u8fd0\u884c\u65f6\u7684\u6982\u5ff5,\u5f53\u7136\u8981\u7528\u5305\u540d,\u6240\u4ee5\u6700\u597d\u76ee\u5f55\u540d\u4e0e\u5305\u540d\u8981\u7edf\u4e00,\u4e0d\u8981\u5f15\u8d77\u4e0d\u5fc5\u8981\u7684\u6b67\u4e49** go install [pkgname] \u540e\u9762\u8ddf\u7684\u662f\u5305\u540d,\u4f46\u5982\u679csrc\u76ee\u5f55\u4e0b\u6ca1\u6709[pkgname]\u540c\u540d\u76ee\u5f55\u5219\u62a5\u9519,\u6240\u4ee5\u8fd8\u662f\u5efa\u8bae\u5305\u540d\u4e0e\u76ee\u5f55\u540d\u540c\u540d,\u7279\u522b\u662f\u53ef\u8fd0\u884c\u6587\u4ef6\u4e5f\u5efa\u8bae\u5efa\u7acb\u4e00\u4e2amain\u76ee\u5f55,\u5165\u53e3\u6587\u4ef6\u5728main\u76ee\u5f55\u4e2d.\u8fd9\u6837\u7edf\u4e00\u6bd4\u8f83\u597d install\u7684\u662f\u5305,\u81f3\u4e8e\u8fd9\u4e2a\u5305\u5728\u54ea,\u6309\u641c\u7d22\u7684\u89c4\u8303\u6765,\u5148\u662fGOROOT,\u518d\u662fGOPATH go run [pkgname] go run file.go \u4e5f\u53ef\u4ee5,\u5148\u627e\u5230\u6587\u4ef6,\u627e\u5230\u6587\u4ef6\u4e2d\u7684\u5305,\u518d\u505a\u7f16\u8bd1\u8fd0\u884c. \u5f88\u5bb9\u6613\u4ee5\u4e3a run\u7684\u540e\u9762\u8ddf\u7684\u662f\u5177\u4f53\u7684\u6587\u4ef6. \u4f7f\u7528go module \u90a3\u5c31\u4e0d\u8981\u5728GOPATH\u4e0a\u65b0\u5efa\u9879\u76ee,\u5e94\u8be5\u5728GOPATH\u76ee\u5f55\u5916. \u5982\u679c\u4e00\u5b9a\u8981\u5728GOPATH\u4e2d\u4f7f\u7528module export GO111MODULE = on \u540c\u4e00\u4e2a\u5305\u91cc\u7684\u51fd\u6570\u4e92\u76f8\u53ef\u4ee5\u8c03\u7528,\u51fd\u6570\u540d\u4e0d\u9700\u8981\u662f\u5927\u5199 main\u5305\u91cc\u7684\u591a\u4e2a\u6587\u4ef6\u65e0\u6cd5\u4e92\u76f8\u8bbf\u95ee. import fm \"fmt\" // \u522b\u540d \u5305\u540d\u4e0e\u5f15\u7528\u7684\u5173\u7cfb \u00b6 //src/hello/lib/one_lib.go package lib5 import \u662f\u76ee\u5f55\u7684\u8def\u5f84\u540d\u79f0 \u8c03\u7528\u662fpackage \u58f0\u660e\u7684\u540d\u79f0. \u6240\u4ee5\u5305\u7684\u76ee\u5f55\u540d\u8981\u4e0e\u58f0\u660e\u7684\u5305\u540d\u4e00\u81f3,\u907f\u514d\u4f7f\u7528\u8005\u4ea7\u751f\u56f0\u60d1. Go\u4e2dstruct\u533f\u540d\u5c5e\u6027 \u00b6 Go\u8bed\u8a00\u4e2dstruct\u7684\u5c5e\u6027\u53ef\u4ee5\u6ca1\u6709\u540d\u5b57\u800c\u53ea\u6709\u7c7b\u578b\uff0c\u4f7f\u7528\u65f6\u7c7b\u578b\u5373\u4e3a\u5c5e\u6027\u540d\u3002\uff08\u56e0\u6b64\uff0c\u4e00\u4e2astruct\u4e2d\u540c\u4e00\u4e2a\u7c7b\u578b\u7684\u533f\u540d\u5c5e\u6027\u53ea\u80fd\u6709\u4e00\u4e2a\uff09 type PersonC struct { id int country string } //\u533f\u540d\u5c5e\u6027 type Worker struct { //\u5982\u679cWorker\u6709\u5c5e\u6027id,\u5219worker.id\u8868\u793aWorker\u5bf9\u8c61\u7684id //\u5982\u679cWorker\u6ca1\u6709\u5c5e\u6027id,\u5219worker.id\u8868\u793aWorker\u5bf9\u8c61\u4e2d\u7684PersonC\u7684id id int name string int *PersonC } func structTest0404() { w := &Worker{} w.id = 201 w.name = \"Smith\" w.int = 49 w.PersonC = &PersonC{100001, \"China\"} fmt.Printf(\"name:%s,int:%d\\n\", w.name, w.int) fmt.Printf(\"inner PersonC,id:%d,country:%s\\n\", w.PersonC.id, w.PersonC.country) fmt.Printf(\"worker.id:%d,personC.id:%d\\n\", w.id, w.PersonC.id) /*output: name:Smith,int:49 inner PersonC,id:100001,country:China worker.id:201,personC.id:100001 */ } \u4f7f\u7528 Go Modules \u540e\uff0c\u4e0d\u518d\u9700\u8981\u4ee5\u4e0b\u5185\u5bb9\uff1a \u00b6 \u4e0d\u7528\u518d\u5b9a\u4e49 GOPATH \uff08\u8fd9\u91cc\u6307\u7684\u662f go build \u3001 go install \u7b49\u7b49 go \u547d\u4ee4\u3002IDE \u63d2\u4ef6\u76ee\u524d\u8fd8\u662f\u9700\u8981 GOPATH\uff09 \u5de5\u7a0b\u76ee\u5f55\u653e\u7f6e\uff0c\u4e0d\u518d\u9700\u8981 src \u76ee\u5f55\u4e0b \uff08\u540c\u4e0a\u60c5\u51b5\uff09 \u4e0d\u518d\u9700\u8981 vendor \u673a\u5236\u4ee5\u53ca\u5176\u4ed6\u7b2c 3 \u65b9 dep \u5de5\u5177 \u5de5\u7a0b\u5185\u4e0d\u518d\u6709\u4f9d\u8d56\u5e93\u4ee3\u7801\u3002 \u53d8\u91cf\u91cd\u58f0\u660e \u00b6 var err error n , err := io . WriteString ( os . Stdout , \"Hello, everyone!\\n\" ) // \u8fd9\u91cc\u5bf9`err`\u8fdb\u884c\u4e86\u91cd\u58f0\u660e\u3002 if err != nil { \u4ee5\u4e0b\u7684\u622a\u56fe\u9700\u8981\u4f5c\u8be6\u7ec6\u7406\u89e3\u5e76\u4f5c\u7b14\u8bb0 \u00b6","title":"Go\u521d\u5b66\u8005\u7684\u95ee\u9898"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Go/Go%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E9%97%AE%E9%A2%98/#_1","text":"import \"net/http\" net/http \u662f\u76ee\u5f55\u540d,\u867d\u7136\u5efa\u8bae\u76ee\u5f55\u540d\u4e0e\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u7684\u5305\u540d\u4e00\u81f3,\u5982\u679c\u4e0d\u4e00\u81f4\u7684\u8bdd,\u4ee3\u7801\u4e2d\u8c03\u7528\u8fd8\u662f\u7528pkgname.method\u8fd9\u6837\u7684\u65b9\u5f0f\u8c03\u7528. i**mport \u4e3b\u8981\u7684\u4f5c\u7528\u8fd8\u662f\u5728\u7f16\u8bd1\u65f6\u67e5\u627e\u5305\u7684\u8def\u5f84,\u8c03\u7528\u662f\u8fd0\u884c\u65f6\u7684\u6982\u5ff5,\u5f53\u7136\u8981\u7528\u5305\u540d,\u6240\u4ee5\u6700\u597d\u76ee\u5f55\u540d\u4e0e\u5305\u540d\u8981\u7edf\u4e00,\u4e0d\u8981\u5f15\u8d77\u4e0d\u5fc5\u8981\u7684\u6b67\u4e49** go install [pkgname] \u540e\u9762\u8ddf\u7684\u662f\u5305\u540d,\u4f46\u5982\u679csrc\u76ee\u5f55\u4e0b\u6ca1\u6709[pkgname]\u540c\u540d\u76ee\u5f55\u5219\u62a5\u9519,\u6240\u4ee5\u8fd8\u662f\u5efa\u8bae\u5305\u540d\u4e0e\u76ee\u5f55\u540d\u540c\u540d,\u7279\u522b\u662f\u53ef\u8fd0\u884c\u6587\u4ef6\u4e5f\u5efa\u8bae\u5efa\u7acb\u4e00\u4e2amain\u76ee\u5f55,\u5165\u53e3\u6587\u4ef6\u5728main\u76ee\u5f55\u4e2d.\u8fd9\u6837\u7edf\u4e00\u6bd4\u8f83\u597d install\u7684\u662f\u5305,\u81f3\u4e8e\u8fd9\u4e2a\u5305\u5728\u54ea,\u6309\u641c\u7d22\u7684\u89c4\u8303\u6765,\u5148\u662fGOROOT,\u518d\u662fGOPATH go run [pkgname] go run file.go \u4e5f\u53ef\u4ee5,\u5148\u627e\u5230\u6587\u4ef6,\u627e\u5230\u6587\u4ef6\u4e2d\u7684\u5305,\u518d\u505a\u7f16\u8bd1\u8fd0\u884c. \u5f88\u5bb9\u6613\u4ee5\u4e3a run\u7684\u540e\u9762\u8ddf\u7684\u662f\u5177\u4f53\u7684\u6587\u4ef6. \u4f7f\u7528go module \u90a3\u5c31\u4e0d\u8981\u5728GOPATH\u4e0a\u65b0\u5efa\u9879\u76ee,\u5e94\u8be5\u5728GOPATH\u76ee\u5f55\u5916. \u5982\u679c\u4e00\u5b9a\u8981\u5728GOPATH\u4e2d\u4f7f\u7528module export GO111MODULE = on \u540c\u4e00\u4e2a\u5305\u91cc\u7684\u51fd\u6570\u4e92\u76f8\u53ef\u4ee5\u8c03\u7528,\u51fd\u6570\u540d\u4e0d\u9700\u8981\u662f\u5927\u5199 main\u5305\u91cc\u7684\u591a\u4e2a\u6587\u4ef6\u65e0\u6cd5\u4e92\u76f8\u8bbf\u95ee. import fm \"fmt\" // \u522b\u540d","title":"\u6742"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Go/Go%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E9%97%AE%E9%A2%98/#_2","text":"//src/hello/lib/one_lib.go package lib5 import \u662f\u76ee\u5f55\u7684\u8def\u5f84\u540d\u79f0 \u8c03\u7528\u662fpackage \u58f0\u660e\u7684\u540d\u79f0. \u6240\u4ee5\u5305\u7684\u76ee\u5f55\u540d\u8981\u4e0e\u58f0\u660e\u7684\u5305\u540d\u4e00\u81f3,\u907f\u514d\u4f7f\u7528\u8005\u4ea7\u751f\u56f0\u60d1.","title":"\u5305\u540d\u4e0e\u5f15\u7528\u7684\u5173\u7cfb"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Go/Go%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E9%97%AE%E9%A2%98/#gostruct","text":"Go\u8bed\u8a00\u4e2dstruct\u7684\u5c5e\u6027\u53ef\u4ee5\u6ca1\u6709\u540d\u5b57\u800c\u53ea\u6709\u7c7b\u578b\uff0c\u4f7f\u7528\u65f6\u7c7b\u578b\u5373\u4e3a\u5c5e\u6027\u540d\u3002\uff08\u56e0\u6b64\uff0c\u4e00\u4e2astruct\u4e2d\u540c\u4e00\u4e2a\u7c7b\u578b\u7684\u533f\u540d\u5c5e\u6027\u53ea\u80fd\u6709\u4e00\u4e2a\uff09 type PersonC struct { id int country string } //\u533f\u540d\u5c5e\u6027 type Worker struct { //\u5982\u679cWorker\u6709\u5c5e\u6027id,\u5219worker.id\u8868\u793aWorker\u5bf9\u8c61\u7684id //\u5982\u679cWorker\u6ca1\u6709\u5c5e\u6027id,\u5219worker.id\u8868\u793aWorker\u5bf9\u8c61\u4e2d\u7684PersonC\u7684id id int name string int *PersonC } func structTest0404() { w := &Worker{} w.id = 201 w.name = \"Smith\" w.int = 49 w.PersonC = &PersonC{100001, \"China\"} fmt.Printf(\"name:%s,int:%d\\n\", w.name, w.int) fmt.Printf(\"inner PersonC,id:%d,country:%s\\n\", w.PersonC.id, w.PersonC.country) fmt.Printf(\"worker.id:%d,personC.id:%d\\n\", w.id, w.PersonC.id) /*output: name:Smith,int:49 inner PersonC,id:100001,country:China worker.id:201,personC.id:100001 */ }","title":"Go\u4e2dstruct\u533f\u540d\u5c5e\u6027"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Go/Go%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E9%97%AE%E9%A2%98/#go-modules","text":"\u4e0d\u7528\u518d\u5b9a\u4e49 GOPATH \uff08\u8fd9\u91cc\u6307\u7684\u662f go build \u3001 go install \u7b49\u7b49 go \u547d\u4ee4\u3002IDE \u63d2\u4ef6\u76ee\u524d\u8fd8\u662f\u9700\u8981 GOPATH\uff09 \u5de5\u7a0b\u76ee\u5f55\u653e\u7f6e\uff0c\u4e0d\u518d\u9700\u8981 src \u76ee\u5f55\u4e0b \uff08\u540c\u4e0a\u60c5\u51b5\uff09 \u4e0d\u518d\u9700\u8981 vendor \u673a\u5236\u4ee5\u53ca\u5176\u4ed6\u7b2c 3 \u65b9 dep \u5de5\u5177 \u5de5\u7a0b\u5185\u4e0d\u518d\u6709\u4f9d\u8d56\u5e93\u4ee3\u7801\u3002","title":"\u4f7f\u7528 Go Modules \u540e\uff0c\u4e0d\u518d\u9700\u8981\u4ee5\u4e0b\u5185\u5bb9\uff1a"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Go/Go%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E9%97%AE%E9%A2%98/#_3","text":"var err error n , err := io . WriteString ( os . Stdout , \"Hello, everyone!\\n\" ) // \u8fd9\u91cc\u5bf9`err`\u8fdb\u884c\u4e86\u91cd\u58f0\u660e\u3002 if err != nil {","title":"\u53d8\u91cf\u91cd\u58f0\u660e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Go/Go%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E9%97%AE%E9%A2%98/#_4","text":"","title":"\u4ee5\u4e0b\u7684\u622a\u56fe\u9700\u8981\u4f5c\u8be6\u7ec6\u7406\u89e3\u5e76\u4f5c\u7b14\u8bb0"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Java/%E5%BE%85%E6%95%B4%E7%90%86/","text":"\u4e00\u4e9b\u9700\u8981\u77e5\u9053\u7ed3\u8bba \u00b6 \u7ebf\u7a0b\u662f\u4e0d\u5141\u8bb8\u591a\u6b21\u8c03\u7528start(),\u4f1a\u62a5IllegalThreadStateException \u5f3a,\u8f6f,\u5f31,\u865a \u5f15\u7528 \u00b6 String,StringBuilder,StringBuffer \u00b6 String\u662fimutable StringBuilder \u7ebf\u7a0b\u4e0d\u5b89\u5168 StringBuffer \u7ebf\u7a0b\u5b89\u5168 \u7ebf\u7a0b\u5b89\u5168\u901a\u5e38\u6709\u66f4\u591a\u7684\u5f00\u9500. \u73b0\u5728\u7684JVM\u5bf9\u4e8e\u4e00\u822c\u7684\u4f7f\u7528String\u62fc\u63a5\u4f1a\u6709\u4f18\u5316,\u9664\u975e\u7279\u522b\u9891\u7e41\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c,\u5426\u5219\u4e0d\u5fc5\u5728\u610f \u539f\u59cb\u7c7b\u578b\u7ebf\u7a0b\u5b89\u5168 \u00b6 int,float\u8fd9\u4e9b\u539f\u59cb\u7c7b\u578b\u5e76\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684,\u5982\u679c\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u8bf7\u4f7f\u7528AtomicXXX\u8fd9\u6837\u7684\u7ebf\u7a0b\u5b89\u5168\u7c7b. import java.util.concurrent.atomic.AtomicInteger ; public class SampleThree extends Thread { static long wakeUpTime = System . currentTimeMillis () + ( 1000 * 20 ); static AtomicInteger inT = new AtomicInteger (); public static void main ( String args [] ) { System . out . println ( \"initial:\" + inT ); for ( int i = 0 ; i < 500 ; i ++ ) new SampleThree (). start (); try { Thread . sleep ( wakeUpTime - System . currentTimeMillis () + ( 1000 * 30 )); System . out . println ( \"o/p:\" + inT ); } catch ( Exception e ){ e . printStackTrace (); } } public synchronized void run () { { try { long s = wakeUpTime - System . currentTimeMillis (); System . out . println ( \"will sleep ms: \" + s ); Thread . sleep ( s ); inT . addAndGet ( 1 ); // System.out.println(inT); } catch ( Exception e ) { e . printStackTrace (); } } } } \u00b6","title":"\u5f85\u6574\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Java/%E5%BE%85%E6%95%B4%E7%90%86/#_1","text":"\u7ebf\u7a0b\u662f\u4e0d\u5141\u8bb8\u591a\u6b21\u8c03\u7528start(),\u4f1a\u62a5IllegalThreadStateException","title":"\u4e00\u4e9b\u9700\u8981\u77e5\u9053\u7ed3\u8bba"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Java/%E5%BE%85%E6%95%B4%E7%90%86/#_2","text":"","title":"\u5f3a,\u8f6f,\u5f31,\u865a \u5f15\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Java/%E5%BE%85%E6%95%B4%E7%90%86/#stringstringbuilderstringbuffer","text":"String\u662fimutable StringBuilder \u7ebf\u7a0b\u4e0d\u5b89\u5168 StringBuffer \u7ebf\u7a0b\u5b89\u5168 \u7ebf\u7a0b\u5b89\u5168\u901a\u5e38\u6709\u66f4\u591a\u7684\u5f00\u9500. \u73b0\u5728\u7684JVM\u5bf9\u4e8e\u4e00\u822c\u7684\u4f7f\u7528String\u62fc\u63a5\u4f1a\u6709\u4f18\u5316,\u9664\u975e\u7279\u522b\u9891\u7e41\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c,\u5426\u5219\u4e0d\u5fc5\u5728\u610f","title":"String,StringBuilder,StringBuffer"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Java/%E5%BE%85%E6%95%B4%E7%90%86/#_3","text":"int,float\u8fd9\u4e9b\u539f\u59cb\u7c7b\u578b\u5e76\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684,\u5982\u679c\u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u8bf7\u4f7f\u7528AtomicXXX\u8fd9\u6837\u7684\u7ebf\u7a0b\u5b89\u5168\u7c7b. import java.util.concurrent.atomic.AtomicInteger ; public class SampleThree extends Thread { static long wakeUpTime = System . currentTimeMillis () + ( 1000 * 20 ); static AtomicInteger inT = new AtomicInteger (); public static void main ( String args [] ) { System . out . println ( \"initial:\" + inT ); for ( int i = 0 ; i < 500 ; i ++ ) new SampleThree (). start (); try { Thread . sleep ( wakeUpTime - System . currentTimeMillis () + ( 1000 * 30 )); System . out . println ( \"o/p:\" + inT ); } catch ( Exception e ){ e . printStackTrace (); } } public synchronized void run () { { try { long s = wakeUpTime - System . currentTimeMillis (); System . out . println ( \"will sleep ms: \" + s ); Thread . sleep ( s ); inT . addAndGet ( 1 ); // System.out.println(inT); } catch ( Exception e ) { e . printStackTrace (); } } } }","title":"\u539f\u59cb\u7c7b\u578b\u7ebf\u7a0b\u5b89\u5168"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Java/%E5%BE%85%E6%95%B4%E7%90%86/#_4","text":"","title":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/CentOS%E6%97%A5%E5%B8%B8/","text":"Pyenv\u5b89\u88c5 \u00b6 $ sudo yum install git -y $ git clone git://github.com/yyuu/pyenv.git .pyenv $ echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bashrc $ echo 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bashrc $ echo 'eval \"$(pyenv init -)\"' >> ~/.bashrc $ source ~/.bashrc IO\u5360\u7528 \u00b6 iotop \u547d\u4ee4 \u9700\u8981\u5b89\u88c5 $ sudo yum install iotop \u7528\u6237\u52a0\u5165sudo\u7ec4 \u00b6 \u6267\u884c\u547d\u4ee4\u51fa\u73b0\" is not in the shudder files\" $ su - $ visudo \u6587\u4ef6\u672b\u6dfb\u52a0 \u7528\u6237\u540d ALL=(ALL)ALL SSH\u539f\u7406\u53ca\u4f7f\u7528 \u00b6 SSH\u8fde\u7ebf\u63e1\u624b\u8fc7\u7a0b: Client\u5bf9Server\u53d1\u8d77\u8bf7\u6c42 Server\u5c06\u81ea\u5df1\u7684\u516c\u94a5\u9001\u7ed9Client \u7528Server\u7684\u516c\u94a5\u52a0\u5bc6Client\u81ea\u5df1\u7684\u516c\u94a5\uff0c\u5e76\u9001\u7ed9Server Server\u89e3\u5f00\u5bc6\u6587\uff0c\u53d6\u5f97Client\u7684\u516c\u94a5\uff0c\u4ee5Client\u7684\u516c\u94a5\u52a0\u5bc6\u540e\u7eed\u8baf\u606f \u5f00\u59cb\u52a0\u5bc6\u5bf9\u8c08\uff0c\u5728\u8fd9\u4e2a\u52a0\u5bc6\u7684\u901a\u9053\u5185\u4ea4\u6362\u767b\u5165\u5bc6\u7801\u7b49\u8baf\u606f \u5b9e\u9645\u64cd\u4f5c $ ssh user@host \u7b2c\u4e00\u6b21\u767b\u5f55,\u4f1a\u63d0\u793a: $ ssh user@host \u3000\u3000The authenticity of host 'host (12.18.429.21)' can ' t be established. \u3000\u3000RSA key fingerprint is 98 :2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d. \u3000\u3000Are you sure you want to continue connecting ( yes/no ) ? \u65e0\u6cd5\u786e\u8ba4\u4e3b\u673a\u8eab\u4efd,\u53ea\u77e5\u9053\u5176\u516c\u94a5\u6307\u7eb9,\u95ee\u4f60\u662f\u5426\u7ee7\u7eed \u516c\u94a5\u767b\u5f55,\u6bcf\u6b21\u4e0d\u7528\u518d\u8f93\u5165\u5bc6\u7801 \u5982\u679c\u672c\u5730\u6ca1\u6709\u751f\u6210\u516c\u79c1\u94a5,\u5148\u751f\u6210 $ ssh-keygen -t rsa \u5982\u679c\u4e0d\u884c,\u786e\u8ba4\u8fdc\u7a0b\u4e3b\u673a /etc/ssh/sshd_config \u4e2d\u6709\u4ee5\u4e0b\u914d\u7f6e RSAAuthentication yes PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys \u91cd\u542fssh\u670d\u52a1 \u8fdc\u7a0b\u4e3b\u673a\u5c06\u7528\u6237\u516c\u94a5\u4fdd\u5b58\u5728\u7528\u6237\u4e3b\u76ee\u5f55\u7684 $HOME/.ssh/authorized_keys\u6587\u4ef6\u4e2d. \u5982: $ cat ~/.ssh/authorized_keys ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDTMbl1oCYjeS17py7jqn9NPOnMOsxbhXn8WWNJQFUBIw++/CEKyaFoPAtizwAJz+k2bhcUk5DNQzKPc3u1Yhs3Wm2Yw0E0VZZeSimSfrTS+J65s0O0M9LNOKXFYiW09crVTbd3FErG0heb3HJAd7f9uGZNLzxXZ90c3JmsjkS78151ZIR035eq0pJTIFA9EAjdQPbHCQi9hFVbHmWto38TsfS1i8wtAJcjParXvdSkMBfLpGt40frZm1lRpzT0djf/zpTjFbk7lmMW+SkBYaMa6FvLquusYaoJ3XMV2Oqe+RgAfix5Fsw2XsfxOxGFKsBr5bFI2huaww+22sYjDZEL bob@bobs-MacBook-Pro.local \u8ba9\u6240\u6709\u7684\u547d\u4ee4\u5386\u53f2\u53ef\u67e5 \u00b6 \u7f13\u5b58\u7406\u8bba\u7684\u5e94\u7528\u573a\u666f,\u6240\u6709\u4f60\u952e\u5165\u8fc7\u7684\u547d\u4ee4\u90fd\u5e94\u8be5\u53ef\u4ee5\u6a21\u7cca\u67e5\u8be2,\u901a\u8fc7\u8bbe\u7f6e2\u4e2a\u73af\u5883\u53d8\u91cf HISTFILESIZE \u548c HISTSIZE ,\u540c\u65f6\u6ce8\u610f\u5907\u4efd\u5386\u53f2\u6587\u4ef6 .bash_history \u6216 .zsh_history \u7b49. \u5728.bash_rc\u52a0\u5165\u5982\u4e0b\u914d\u7f6e,\u5982\u679c\u4f60\u7528zsh\u5e94\u8be5\u662f\u5728.zsh_rc,\u7c7b\u63a8 HISTFILESIZE = 200000 HISTSIZE = 200000 #20\u4e07,\u4e00\u5929\u5e73\u5747\u952e\u5165100\u6761\u547d\u4ee4\u7684\u8bdd,\u5927\u6982\u80fd\u4fdd\u5b586\u5e74 HISTCONTROL = ignoredups #\u4ece\u547d\u4ee4\u5386\u53f2\u4e2d\u5254\u9664\u8fde\u7eed\u91cd\u590d\u7684\u6761\u76ee #HISTCONTROL=erasedups #\u4ece\u547d\u4ee4\u5386\u53f2\u4e2d\u5254\u9664\u91cd\u590d\u7684\u6761\u76ee \u7f51\u7edc\u8bbe\u7f6e \u00b6 sudo vi /etc/sysconfig/network-scripts/ifcfg-eth0 #\u7f51\u5361\u540d\u89c6\u673a\u5668\u800c\u5b9a BOOTPROTO=\"dhcp\" ONBOOT=\"yes\" \u6216\u624b\u52a8\u914d\u7f6e\u5982\u4e0b: BOOTPROTO=static ONBOOT=yes IPADDR=192.168.8.250 NETMASK=255.255.255.0 NETWORK=192.168.8.0 GATEWAY=192.168.8.2 DNS1=192.168.8.2 sudo service network restart \u5982\u679cifconfig\u4e0d\u5b58\u5728,\u9700\u8981\u5b89\u88c5net-tools $ yum -y upgrade $ yum install net-tools \u6ce8\u610f: yum -y update \u5347\u7ea7\u6240\u6709\u5305\uff0c\u6539\u53d8\u8f6f\u4ef6\u8bbe\u7f6e\u548c\u7cfb\u7edf\u8bbe\u7f6e,\u7cfb\u7edf\u7248\u672c\u5185\u6838\u90fd\u5347\u7ea7 yum -y upgrade \u5347\u7ea7\u6240\u6709\u5305\uff0c\u4e0d\u6539\u53d8\u8f6f\u4ef6\u8bbe\u7f6e\u548c\u7cfb\u7edf\u8bbe\u7f6e\uff0c\u7cfb\u7edf\u7248\u672c\u5347\u7ea7\uff0c\u5185\u6838\u4e0d\u6539\u53d8 CentOS \u81ea\u5e26\u9632\u706b\u5899 Firewalld \u7684\u5b89\u88c5\u4e0e\u914d\u7f6e \u00b6 \u4e00\u3001Firewalld \u4e0e Iptables \u7684\u533a\u522b FirewallD \u662f\u4e00\u4e2a\u6bd4\u8f83\u524d\u6cbf\u7684\u9632\u706b\u5899\uff0c\u5b83\u6709\u547d\u4ee4\u884c\u548c\u56fe\u5f62\u63a5\u53e3\uff0c\u4e0b\u9762\u662f FirewallD \u4e0e iptables \u7684\u4e3b\u8981\u533a\u522b\uff1a FirewallD \u5f15\u5165\u4e86\u533a\u57df\u548c\u670d\u52a1\uff0c\u66ff\u6362\u4e86\u4f20\u7edf\u9632\u706b\u5899\u7684\u89c4\u5219\u3002 FirewallD \u7684\u89c4\u5219\u96c6\u662f \u52a8\u6001\u7684\uff0c\u5141\u8bb8\u5728\u4e0d\u5173\u95ed\u8fde\u63a5\u548c sessions \u7684\u60c5\u51b5\u4e0b\u66f4\u65b0\u89c4\u5219\u3002 \u4e8c\u3001\u5b89\u88c5 Firewalld \u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u5b89\u88c5\u9632\u706b\u5899 yum install firewalld firewall-config \u5b89\u88c5\u9632\u706b\u5899 yum install firewalld \u542f\u52a8\u670d\u52a1\uff1a sudo systemctl start firewalld sudo systemctl enable firewalld \u505c\u6b62\u670d\u52a1\uff1a sudo systemctl stop firewalld sudo systemctl disable firewalld \u4e09\u3001Firewalld \u7684\u5e38\u7528\u547d\u4ee4 \u67e5\u770b\u6240\u6709\u7684\u533a\u57df firewall-cmd --get-zones \u67e5\u770b\u5f53\u524d\u533a\u57df firewall-cmd --get-active-zones \u8bbe\u7f6e\u5f53\u524d\u533a\u57df \u4e3a public firewall-cmd \u2013-set-default-zone = public \u67e5\u770b\u67d0\u4e2a\u533a\u57df\u4e0b\u5f00\u653e\u7684\u7aef\u53e3 firewall-cmd --zone = public --list-ports \u4e3a\u67d0\u4e2a\u533a\u57df\u6dfb\u52a0\u7aef\u53e3 firewall-cmd --zone = public --add-port = 3306 /tcp \u6c38\u4e45\u6253\u5f00\u4e00\u4e2a\u7aef\u53e3 firewall-cmd --permanent --add-port = 3306 /tcp \u4e3a\u67d0\u4e2a\u533a\u57df\u5220\u9664\u7aef\u53e3 firewall-cmd --zone = public --remove-port = 3306 /tcp","title":"CentOS\u65e5\u5e38"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/CentOS%E6%97%A5%E5%B8%B8/#pyenv","text":"$ sudo yum install git -y $ git clone git://github.com/yyuu/pyenv.git .pyenv $ echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bashrc $ echo 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bashrc $ echo 'eval \"$(pyenv init -)\"' >> ~/.bashrc $ source ~/.bashrc","title":"Pyenv\u5b89\u88c5"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/CentOS%E6%97%A5%E5%B8%B8/#io","text":"iotop \u547d\u4ee4 \u9700\u8981\u5b89\u88c5 $ sudo yum install iotop","title":"IO\u5360\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/CentOS%E6%97%A5%E5%B8%B8/#sudo","text":"\u6267\u884c\u547d\u4ee4\u51fa\u73b0\" is not in the shudder files\" $ su - $ visudo \u6587\u4ef6\u672b\u6dfb\u52a0 \u7528\u6237\u540d ALL=(ALL)ALL","title":"\u7528\u6237\u52a0\u5165sudo\u7ec4"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/CentOS%E6%97%A5%E5%B8%B8/#ssh","text":"SSH\u8fde\u7ebf\u63e1\u624b\u8fc7\u7a0b: Client\u5bf9Server\u53d1\u8d77\u8bf7\u6c42 Server\u5c06\u81ea\u5df1\u7684\u516c\u94a5\u9001\u7ed9Client \u7528Server\u7684\u516c\u94a5\u52a0\u5bc6Client\u81ea\u5df1\u7684\u516c\u94a5\uff0c\u5e76\u9001\u7ed9Server Server\u89e3\u5f00\u5bc6\u6587\uff0c\u53d6\u5f97Client\u7684\u516c\u94a5\uff0c\u4ee5Client\u7684\u516c\u94a5\u52a0\u5bc6\u540e\u7eed\u8baf\u606f \u5f00\u59cb\u52a0\u5bc6\u5bf9\u8c08\uff0c\u5728\u8fd9\u4e2a\u52a0\u5bc6\u7684\u901a\u9053\u5185\u4ea4\u6362\u767b\u5165\u5bc6\u7801\u7b49\u8baf\u606f \u5b9e\u9645\u64cd\u4f5c $ ssh user@host \u7b2c\u4e00\u6b21\u767b\u5f55,\u4f1a\u63d0\u793a: $ ssh user@host \u3000\u3000The authenticity of host 'host (12.18.429.21)' can ' t be established. \u3000\u3000RSA key fingerprint is 98 :2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d. \u3000\u3000Are you sure you want to continue connecting ( yes/no ) ? \u65e0\u6cd5\u786e\u8ba4\u4e3b\u673a\u8eab\u4efd,\u53ea\u77e5\u9053\u5176\u516c\u94a5\u6307\u7eb9,\u95ee\u4f60\u662f\u5426\u7ee7\u7eed \u516c\u94a5\u767b\u5f55,\u6bcf\u6b21\u4e0d\u7528\u518d\u8f93\u5165\u5bc6\u7801 \u5982\u679c\u672c\u5730\u6ca1\u6709\u751f\u6210\u516c\u79c1\u94a5,\u5148\u751f\u6210 $ ssh-keygen -t rsa \u5982\u679c\u4e0d\u884c,\u786e\u8ba4\u8fdc\u7a0b\u4e3b\u673a /etc/ssh/sshd_config \u4e2d\u6709\u4ee5\u4e0b\u914d\u7f6e RSAAuthentication yes PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys \u91cd\u542fssh\u670d\u52a1 \u8fdc\u7a0b\u4e3b\u673a\u5c06\u7528\u6237\u516c\u94a5\u4fdd\u5b58\u5728\u7528\u6237\u4e3b\u76ee\u5f55\u7684 $HOME/.ssh/authorized_keys\u6587\u4ef6\u4e2d. \u5982: $ cat ~/.ssh/authorized_keys ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDTMbl1oCYjeS17py7jqn9NPOnMOsxbhXn8WWNJQFUBIw++/CEKyaFoPAtizwAJz+k2bhcUk5DNQzKPc3u1Yhs3Wm2Yw0E0VZZeSimSfrTS+J65s0O0M9LNOKXFYiW09crVTbd3FErG0heb3HJAd7f9uGZNLzxXZ90c3JmsjkS78151ZIR035eq0pJTIFA9EAjdQPbHCQi9hFVbHmWto38TsfS1i8wtAJcjParXvdSkMBfLpGt40frZm1lRpzT0djf/zpTjFbk7lmMW+SkBYaMa6FvLquusYaoJ3XMV2Oqe+RgAfix5Fsw2XsfxOxGFKsBr5bFI2huaww+22sYjDZEL bob@bobs-MacBook-Pro.local","title":"SSH\u539f\u7406\u53ca\u4f7f\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/CentOS%E6%97%A5%E5%B8%B8/#_1","text":"\u7f13\u5b58\u7406\u8bba\u7684\u5e94\u7528\u573a\u666f,\u6240\u6709\u4f60\u952e\u5165\u8fc7\u7684\u547d\u4ee4\u90fd\u5e94\u8be5\u53ef\u4ee5\u6a21\u7cca\u67e5\u8be2,\u901a\u8fc7\u8bbe\u7f6e2\u4e2a\u73af\u5883\u53d8\u91cf HISTFILESIZE \u548c HISTSIZE ,\u540c\u65f6\u6ce8\u610f\u5907\u4efd\u5386\u53f2\u6587\u4ef6 .bash_history \u6216 .zsh_history \u7b49. \u5728.bash_rc\u52a0\u5165\u5982\u4e0b\u914d\u7f6e,\u5982\u679c\u4f60\u7528zsh\u5e94\u8be5\u662f\u5728.zsh_rc,\u7c7b\u63a8 HISTFILESIZE = 200000 HISTSIZE = 200000 #20\u4e07,\u4e00\u5929\u5e73\u5747\u952e\u5165100\u6761\u547d\u4ee4\u7684\u8bdd,\u5927\u6982\u80fd\u4fdd\u5b586\u5e74 HISTCONTROL = ignoredups #\u4ece\u547d\u4ee4\u5386\u53f2\u4e2d\u5254\u9664\u8fde\u7eed\u91cd\u590d\u7684\u6761\u76ee #HISTCONTROL=erasedups #\u4ece\u547d\u4ee4\u5386\u53f2\u4e2d\u5254\u9664\u91cd\u590d\u7684\u6761\u76ee","title":"\u8ba9\u6240\u6709\u7684\u547d\u4ee4\u5386\u53f2\u53ef\u67e5"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/CentOS%E6%97%A5%E5%B8%B8/#_2","text":"sudo vi /etc/sysconfig/network-scripts/ifcfg-eth0 #\u7f51\u5361\u540d\u89c6\u673a\u5668\u800c\u5b9a BOOTPROTO=\"dhcp\" ONBOOT=\"yes\" \u6216\u624b\u52a8\u914d\u7f6e\u5982\u4e0b: BOOTPROTO=static ONBOOT=yes IPADDR=192.168.8.250 NETMASK=255.255.255.0 NETWORK=192.168.8.0 GATEWAY=192.168.8.2 DNS1=192.168.8.2 sudo service network restart \u5982\u679cifconfig\u4e0d\u5b58\u5728,\u9700\u8981\u5b89\u88c5net-tools $ yum -y upgrade $ yum install net-tools \u6ce8\u610f: yum -y update \u5347\u7ea7\u6240\u6709\u5305\uff0c\u6539\u53d8\u8f6f\u4ef6\u8bbe\u7f6e\u548c\u7cfb\u7edf\u8bbe\u7f6e,\u7cfb\u7edf\u7248\u672c\u5185\u6838\u90fd\u5347\u7ea7 yum -y upgrade \u5347\u7ea7\u6240\u6709\u5305\uff0c\u4e0d\u6539\u53d8\u8f6f\u4ef6\u8bbe\u7f6e\u548c\u7cfb\u7edf\u8bbe\u7f6e\uff0c\u7cfb\u7edf\u7248\u672c\u5347\u7ea7\uff0c\u5185\u6838\u4e0d\u6539\u53d8","title":"\u7f51\u7edc\u8bbe\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/CentOS%E6%97%A5%E5%B8%B8/#centos-firewalld","text":"\u4e00\u3001Firewalld \u4e0e Iptables \u7684\u533a\u522b FirewallD \u662f\u4e00\u4e2a\u6bd4\u8f83\u524d\u6cbf\u7684\u9632\u706b\u5899\uff0c\u5b83\u6709\u547d\u4ee4\u884c\u548c\u56fe\u5f62\u63a5\u53e3\uff0c\u4e0b\u9762\u662f FirewallD \u4e0e iptables \u7684\u4e3b\u8981\u533a\u522b\uff1a FirewallD \u5f15\u5165\u4e86\u533a\u57df\u548c\u670d\u52a1\uff0c\u66ff\u6362\u4e86\u4f20\u7edf\u9632\u706b\u5899\u7684\u89c4\u5219\u3002 FirewallD \u7684\u89c4\u5219\u96c6\u662f \u52a8\u6001\u7684\uff0c\u5141\u8bb8\u5728\u4e0d\u5173\u95ed\u8fde\u63a5\u548c sessions \u7684\u60c5\u51b5\u4e0b\u66f4\u65b0\u89c4\u5219\u3002 \u4e8c\u3001\u5b89\u88c5 Firewalld \u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u5b89\u88c5\u9632\u706b\u5899 yum install firewalld firewall-config \u5b89\u88c5\u9632\u706b\u5899 yum install firewalld \u542f\u52a8\u670d\u52a1\uff1a sudo systemctl start firewalld sudo systemctl enable firewalld \u505c\u6b62\u670d\u52a1\uff1a sudo systemctl stop firewalld sudo systemctl disable firewalld \u4e09\u3001Firewalld \u7684\u5e38\u7528\u547d\u4ee4 \u67e5\u770b\u6240\u6709\u7684\u533a\u57df firewall-cmd --get-zones \u67e5\u770b\u5f53\u524d\u533a\u57df firewall-cmd --get-active-zones \u8bbe\u7f6e\u5f53\u524d\u533a\u57df \u4e3a public firewall-cmd \u2013-set-default-zone = public \u67e5\u770b\u67d0\u4e2a\u533a\u57df\u4e0b\u5f00\u653e\u7684\u7aef\u53e3 firewall-cmd --zone = public --list-ports \u4e3a\u67d0\u4e2a\u533a\u57df\u6dfb\u52a0\u7aef\u53e3 firewall-cmd --zone = public --add-port = 3306 /tcp \u6c38\u4e45\u6253\u5f00\u4e00\u4e2a\u7aef\u53e3 firewall-cmd --permanent --add-port = 3306 /tcp \u4e3a\u67d0\u4e2a\u533a\u57df\u5220\u9664\u7aef\u53e3 firewall-cmd --zone = public --remove-port = 3306 /tcp","title":"CentOS \u81ea\u5e26\u9632\u706b\u5899 Firewalld \u7684\u5b89\u88c5\u4e0e\u914d\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/","text":"Linux\u547d\u4ee4\u5206\u7c7b \u00b6 \u8fd9\u91cc\u5b58\u653eLinux \u547d\u4ee4\u5927\u5168\u5e76\u4e0d\u5168\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7linux-command\u6765\u641c\u7d22\uff0c\u5b83\u662f\u628a command \u76ee\u5f55\u91cc\u9762\u641c\u96c6\u7684\u547d\u4ee4\uff0c\u751f\u6210\u4e86\u9759\u6001HTML\u5e76\u63d0\u4f9b\u9884\u89c8\u4ee5\u53ca\u7d22\u5f15\u641c\u7d22\u3002 \u6587\u4ef6\u4f20\u8f93 \u00b6 bye\u3001ftp\u3001ftpcount\u3001ftpshut\u3001ftpwho\u3001ncftp\u3001tftp\u3001uucico\u3001uucp\u3001uupick\u3001uuto \u5907\u4efd\u538b\u7f29 \u00b6 ar\u3001bunzip2\u3001bzip2\u3001bzip2recover\u3001compress\u3001cpio\u3001dump\u3001gunzip\u3001gzexe\u3001gzip\u3001lha\u3001restore\u3001tar\u3001unarj\u3001unzip\u3001zip\u3001zipinfo \u6587\u4ef6\u7ba1\u7406 \u00b6 diff\u3001diffstat\u3001file\u3001find\u3001git\u3001gitview\u3001ln\u3001locate\u3001lsattr\u3001mattrib\u3001mc\u3001mcopy\u3001mdel\u3001mdir\u3001mktemp\u3001mmove\u3001mread\u3001mren\u3001mshowfat\u3001mtools\u3001mtoolstest\u3001mv\u3001od\u3001paste\u3001patch\u3001rcp\u3001rhmask\u3001rm\u3001slocate\u3001split\u3001tee\u3001tmpwatch\u3001touch\u3001umask\u3001whereis\u3001which\u3001cat\u3001chattr\u3001chgrp\u3001chmod\u3001chown\u3001cksum\u3001cmp\u3001cp\u3001cut\u3001indent \u78c1\u76d8\u7ba1\u7406 \u00b6 cd\u3001df\u3001dirs\u3001du\u3001edquota\u3001eject\u3001lndir\u3001ls\u3001mcd\u3001mdeltree\u3001mdu\u3001mkdir\u3001mlabel\u3001mmd\u3001mmount\u3001mrd\u3001mzip\u3001pwd\u3001quota\u3001quotacheck\u3001quotaoff\u3001quotaon\u3001repquota\u3001rmdir\u3001rmt\u3001stat\u3001tree\u3001umount \u78c1\u76d8\u7ef4\u62a4 \u00b6 badblocks\u3001cfdisk\u3001dd\u3001e2fsck\u3001ext2ed\u3001fdisk\u3001fsck.ext2\u3001fsck\u3001fsck.minix\u3001fsconf\u3001hdparm\u3001losetup\u3001mbadblocks\u3001mformat\u3001mkbootdisk\u3001mkdosfs\u3001mke2fs\u3001mkfs.ext2\u3001mkfs\u3001mkfs.minix\u3001mkfs.msdos\u3001mkinitrd\u3001mkisofs\u3001mkswap\u3001mpartition\u3001sfdisk\u3001swapoff\u3001swapon\u3001symlinks\u3001sync \u7cfb\u7edf\u8bbe\u7f6e \u00b6 alias\u3001apmd\u3001aumix\u3001bind\u3001chkconfig\u3001chroot\u3001clock\u3001crontab\u3001declare\u3001depmod\u3001dircolors\u3001dmesg\u3001enable\u3001eval\u3001export\u3001fbset\u3001grpconv\u3001grpunconv\u3001hwclock\u3001insmod\u3001kbdconfig\u3001lilo\u3001liloconfig\u3001lsmod\u3001minfo\u3001mkkickstart\u3001modinfo\u3001modprobe\u3001mouseconfig\u3001ntsysv\u3001passwd\u3001pwconv\u3001pwunconv\u3001rdate\u3001resize\u3001rmmod\u3001rpm\u3001set\u3001setconsole\u3001setenv\u3001setup\u3001sndconfig\u3001SVGAText Mode\u3001timeconfig\u3001ulimit\u3001unalias\u3001unset \u7cfb\u7edf\u7ba1\u7406 \u00b6 adduser\u3001chfn\u3001chsh\u3001date\u3001exit\u3001finger\u3001free\u3001fwhois\u3001gitps\u3001groupdel\u3001groupmod\u3001halt\u3001id\u3001kill\u3001last\u3001lastb\u3001login\u3001logname\u3001logout\u3001logrotate\u3001newgrp\u3001nice\u3001procinfo\u3001ps\u3001pstree\u3001reboot\u3001renice\u3001rlogin\u3001rsh\u3001rwho\u3001screen\u3001shutdown\u3001sliplogin\u3001su\u3001sudo\u3001suspend\u3001swatch\u3001tload\u3001top\u3001uname\u3001useradd\u3001userconf\u3001userdel\u3001usermod\u3001vlock\u3001w\u3001who\u3001whoami\u3001whois \u6587\u6863\u7f16\u8f91 \u00b6 col\u3001colrm\u3001comm\u3001csplit\u3001ed\u3001egrep\u3001ex\u3001fgrep\u3001fmt\u3001fold\u3001grep\u3001ispell\u3001jed\u3001joe\u3001join\u3001look\u3001mtype\u3001pico\u3001rgrep\u3001sed\u3001sort\u3001spell\u3001tr\u3001uniq\u3001wc \u7f51\u7edc\u901a\u8baf \u00b6 dip\u3001getty\u3001mingetty\u3001ppp-off\u3001smbd(samba daemon)\u3001telnet\u3001uulog\u3001uustat\u3001uux\u3001cu\u3001dnsconf\u3001efax\u3001httpd\u3001ifconfig\u3001mesg\u3001minicom\u3001nc\u3001netconf\u3001netconfig\u3001netstat\u3001ping\u3001pppstats\u3001samba\u3001setserial\u3001shapecfg(shaper configuration)\u3001smbd(samba daemon)\u3001statserial(status ofserial port)\u3001talk\u3001tcpdump\u3001testparm(test parameter)\u3001traceroute\u3001tty(teletypewriter)\u3001uuname\u3001wall(write all)\u3001write\u3001ytalk\u3001arpwatch\u3001apachectl\u3001smbclient(samba client)\u3001pppsetup \u8bbe\u5907\u7ba1\u7406 \u00b6 dumpkeys\u3001loadkeys\u3001MAKEDEV\u3001rdev\u3001setleds \u7535\u5b50\u90ae\u4ef6\u4e0e\u65b0\u95fb\u7ec4 \u00b6 archive\u3001ctlinnd\u3001elm\u3001getlist\u3001inncheck\u3001mail\u3001mailconf\u3001mailq\u3001messages\u3001metamail\u3001mutt\u3001nntpget\u3001pine\u3001slrn\u3001X WINDOWS SYSTEM\u3001reconfig\u3001startx(start X Window)\u3001Xconfigurator\u3001XF86Setup\u3001xlsatoms\u3001xlsclients\u3001xlsfonts \u5176\u4ed6\u547d\u4ee4 \u00b6 yes","title":"Linux\u547d\u4ee4\u5206\u7c7b\u53c2\u8003"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#linux","text":"\u8fd9\u91cc\u5b58\u653eLinux \u547d\u4ee4\u5927\u5168\u5e76\u4e0d\u5168\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7linux-command\u6765\u641c\u7d22\uff0c\u5b83\u662f\u628a command \u76ee\u5f55\u91cc\u9762\u641c\u96c6\u7684\u547d\u4ee4\uff0c\u751f\u6210\u4e86\u9759\u6001HTML\u5e76\u63d0\u4f9b\u9884\u89c8\u4ee5\u53ca\u7d22\u5f15\u641c\u7d22\u3002","title":"Linux\u547d\u4ee4\u5206\u7c7b"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_1","text":"bye\u3001ftp\u3001ftpcount\u3001ftpshut\u3001ftpwho\u3001ncftp\u3001tftp\u3001uucico\u3001uucp\u3001uupick\u3001uuto","title":"\u6587\u4ef6\u4f20\u8f93"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_2","text":"ar\u3001bunzip2\u3001bzip2\u3001bzip2recover\u3001compress\u3001cpio\u3001dump\u3001gunzip\u3001gzexe\u3001gzip\u3001lha\u3001restore\u3001tar\u3001unarj\u3001unzip\u3001zip\u3001zipinfo","title":"\u5907\u4efd\u538b\u7f29"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_3","text":"diff\u3001diffstat\u3001file\u3001find\u3001git\u3001gitview\u3001ln\u3001locate\u3001lsattr\u3001mattrib\u3001mc\u3001mcopy\u3001mdel\u3001mdir\u3001mktemp\u3001mmove\u3001mread\u3001mren\u3001mshowfat\u3001mtools\u3001mtoolstest\u3001mv\u3001od\u3001paste\u3001patch\u3001rcp\u3001rhmask\u3001rm\u3001slocate\u3001split\u3001tee\u3001tmpwatch\u3001touch\u3001umask\u3001whereis\u3001which\u3001cat\u3001chattr\u3001chgrp\u3001chmod\u3001chown\u3001cksum\u3001cmp\u3001cp\u3001cut\u3001indent","title":"\u6587\u4ef6\u7ba1\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_4","text":"cd\u3001df\u3001dirs\u3001du\u3001edquota\u3001eject\u3001lndir\u3001ls\u3001mcd\u3001mdeltree\u3001mdu\u3001mkdir\u3001mlabel\u3001mmd\u3001mmount\u3001mrd\u3001mzip\u3001pwd\u3001quota\u3001quotacheck\u3001quotaoff\u3001quotaon\u3001repquota\u3001rmdir\u3001rmt\u3001stat\u3001tree\u3001umount","title":"\u78c1\u76d8\u7ba1\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_5","text":"badblocks\u3001cfdisk\u3001dd\u3001e2fsck\u3001ext2ed\u3001fdisk\u3001fsck.ext2\u3001fsck\u3001fsck.minix\u3001fsconf\u3001hdparm\u3001losetup\u3001mbadblocks\u3001mformat\u3001mkbootdisk\u3001mkdosfs\u3001mke2fs\u3001mkfs.ext2\u3001mkfs\u3001mkfs.minix\u3001mkfs.msdos\u3001mkinitrd\u3001mkisofs\u3001mkswap\u3001mpartition\u3001sfdisk\u3001swapoff\u3001swapon\u3001symlinks\u3001sync","title":"\u78c1\u76d8\u7ef4\u62a4"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_6","text":"alias\u3001apmd\u3001aumix\u3001bind\u3001chkconfig\u3001chroot\u3001clock\u3001crontab\u3001declare\u3001depmod\u3001dircolors\u3001dmesg\u3001enable\u3001eval\u3001export\u3001fbset\u3001grpconv\u3001grpunconv\u3001hwclock\u3001insmod\u3001kbdconfig\u3001lilo\u3001liloconfig\u3001lsmod\u3001minfo\u3001mkkickstart\u3001modinfo\u3001modprobe\u3001mouseconfig\u3001ntsysv\u3001passwd\u3001pwconv\u3001pwunconv\u3001rdate\u3001resize\u3001rmmod\u3001rpm\u3001set\u3001setconsole\u3001setenv\u3001setup\u3001sndconfig\u3001SVGAText Mode\u3001timeconfig\u3001ulimit\u3001unalias\u3001unset","title":"\u7cfb\u7edf\u8bbe\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_7","text":"adduser\u3001chfn\u3001chsh\u3001date\u3001exit\u3001finger\u3001free\u3001fwhois\u3001gitps\u3001groupdel\u3001groupmod\u3001halt\u3001id\u3001kill\u3001last\u3001lastb\u3001login\u3001logname\u3001logout\u3001logrotate\u3001newgrp\u3001nice\u3001procinfo\u3001ps\u3001pstree\u3001reboot\u3001renice\u3001rlogin\u3001rsh\u3001rwho\u3001screen\u3001shutdown\u3001sliplogin\u3001su\u3001sudo\u3001suspend\u3001swatch\u3001tload\u3001top\u3001uname\u3001useradd\u3001userconf\u3001userdel\u3001usermod\u3001vlock\u3001w\u3001who\u3001whoami\u3001whois","title":"\u7cfb\u7edf\u7ba1\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_8","text":"col\u3001colrm\u3001comm\u3001csplit\u3001ed\u3001egrep\u3001ex\u3001fgrep\u3001fmt\u3001fold\u3001grep\u3001ispell\u3001jed\u3001joe\u3001join\u3001look\u3001mtype\u3001pico\u3001rgrep\u3001sed\u3001sort\u3001spell\u3001tr\u3001uniq\u3001wc","title":"\u6587\u6863\u7f16\u8f91"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_9","text":"dip\u3001getty\u3001mingetty\u3001ppp-off\u3001smbd(samba daemon)\u3001telnet\u3001uulog\u3001uustat\u3001uux\u3001cu\u3001dnsconf\u3001efax\u3001httpd\u3001ifconfig\u3001mesg\u3001minicom\u3001nc\u3001netconf\u3001netconfig\u3001netstat\u3001ping\u3001pppstats\u3001samba\u3001setserial\u3001shapecfg(shaper configuration)\u3001smbd(samba daemon)\u3001statserial(status ofserial port)\u3001talk\u3001tcpdump\u3001testparm(test parameter)\u3001traceroute\u3001tty(teletypewriter)\u3001uuname\u3001wall(write all)\u3001write\u3001ytalk\u3001arpwatch\u3001apachectl\u3001smbclient(samba client)\u3001pppsetup","title":"\u7f51\u7edc\u901a\u8baf"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_10","text":"dumpkeys\u3001loadkeys\u3001MAKEDEV\u3001rdev\u3001setleds","title":"\u8bbe\u5907\u7ba1\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_11","text":"archive\u3001ctlinnd\u3001elm\u3001getlist\u3001inncheck\u3001mail\u3001mailconf\u3001mailq\u3001messages\u3001metamail\u3001mutt\u3001nntpget\u3001pine\u3001slrn\u3001X WINDOWS SYSTEM\u3001reconfig\u3001startx(start X Window)\u3001Xconfigurator\u3001XF86Setup\u3001xlsatoms\u3001xlsclients\u3001xlsfonts","title":"\u7535\u5b50\u90ae\u4ef6\u4e0e\u65b0\u95fb\u7ec4"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/linux%E5%91%BD%E4%BB%A4%E5%88%86%E7%B1%BB%E5%8F%82%E8%80%83/#_12","text":"yes","title":"\u5176\u4ed6\u547d\u4ee4"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/%E5%AE%9E%E7%94%A8%E7%9A%84bash%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/","text":"\u5b9e\u7528\u5185\u7f6e\u51fd\u6570 \u00b6 # check current os is linux function cf_is_linux () { [[ \" $OSTYPE \" = *linux* ]] && echo \"true\" && return 0 echo \"false\" && return 1 } # check current os is mac/darwin function cf_is_darwin () { [[ \" $OSTYPE \" = *darwin* ]] && echo \"true\" && return 0 echo \"false\" && return 1 } # check current os is windows/cygwin function cf_is_cygwin () { [[ \" $OSTYPE \" = *cygwin* ]] && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_gnu_date () { date --version >/dev/null 2 > & 1 && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_gnu_sed () { sed --version >/dev/null 2 > & 1 && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_gnu_awk () { awk --version | grep GNU >/dev/null && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_gnu_grep () { grep --version | grep GNU >/dev/null && echo \"true\" && return 0 echo \"false\" && return 1 } # java style startsWith function cf_starts_with () { local str = $1 local pre = $2 [[ \" $str \" == ${ pre } * ]] } # java style substring function cf_substring () { local str = $1 local begin = $2 local end = $3 if [ -z \" $end \" ] ; then echo ${ str : $begin } else local len = ` expr $end - $begin ` echo ${ str : $begin : $len } fi } # get current shell name function cf_shell_name () { local name = $( ps -ocommand = -p $$ | awk '{print $1}' ) if cf_starts_with $name \"-\" ; then cf_substring $name 1 else echo $name fi } # check current shell is bash function cf_is_bash () { [[ ` cf_shell_name ` = \"-bash\" || ` basename $( cf_shell_name ) ` = \"bash\" ]] && echo \"true\" && return 0 echo \"false\" && return 1 } # check current shell is zsh function cf_is_zsh () { [[ ` cf_shell_name ` = \"-zsh\" || ` basename $( cf_shell_name ) ` = \"zsh\" ]] && echo \"true\" && return 0 echo \"false\" && return 1 } function _script_dir () { if cf_is_bash >/dev/null ; then cd \" $( dirname \" ${ BASH_SOURCE [0] } \" ) \" && pwd -P elif cf_is_zsh >/dev/null ; then cd \" $( dirname \" ${ (%) :- %N } \" ) \" && pwd -P else echo \"unsupported shell\" && return 1 fi } function _script_file () { if cf_is_bash >/dev/null ; then basename \" ${ BASH_SOURCE [0] } \" elif cf_is_zsh >/dev/null ; then basename \" ${ (%) :- %N } \" else echo \"unsupported shell\" && return 1 fi } # colorful grep. private function function _get_colorful_grep () { cf_is_gnu_grep >/dev/null && echo \"grep --color\" && return 0 export GREP_OPTIONS = '--color=always' export GREP_COLOR = '1;35;40' echo \"grep\" } # list all common functions function cf_functions () { if cf_is_bash >/dev/null ; then declare -F | awk '{print $NF}' | grep \"cf_\" | sort elif cf_is_zsh >/dev/null ; then print -l ${ (ok)functions } | grep \"cf_\" | sort else echo \"unsupported shell\" && return 1 fi } # get total memory (MB) function cf_mem_total () { if cf_is_linux >/dev/null ; then free -m | awk '/^Mem/{print $2\"M\"}' elif cf_is_darwin >/dev/null ; then sysctl hw.memsize | awk '{print $2/1024/1024\"M\"}' else echo \"unsupported os\" && return 1 fi } # decimal to hexadecimal function cf_dec2Hex () { printf \"%x\" $1 } # decimal to octal function cf_dec2Oct () { printf \"%o\" $1 } # decimal to binary function cf_dec2Bin () { echo \"obase=2; $1 \" | bc } # hexadecimal to decimal function cf_hex2Dec () { echo $(( 16# $1 )) } # octal to decimal function cf_oct2Dec () { echo $(( 8# $1 )) } # binary to decimal function cf_bin2Dec () { echo $(( 2# $1 )) } function cf_calc () { local exp = \" $1 \" echo \" $exp \" | bc -l | awk '{printf \"%.2f\", $0}' } # warning and exit, not for interactive shell function cf_die () { local msg = \" $1 \" local code = ${ 2 :- 1 } echo \" $msg \" && exit $code } # highlight key words from file or pipeline function cf_highlight () { local keyword = \" $1 \" local cgrep = \" $( _get_colorful_grep ) \" if [ -p /dev/stdin ] ; then # from pipeline while IFS = '' read line ; do echo $line | eval \" $cgrep -E \\\" ${ keyword } | $ \\\"\" done else local file = \" $2 \" eval \" $cgrep -E \\\" ${ keyword } | $ \\\"\" \" $file \" fi } function cf_ps_env () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 if cf_is_linux >/dev/null ; then xargs --null --max-args = 1 < /proc/ $pid /environ elif cf_is_darwin >/dev/null ; then ps -wwE -p $pid else echo \"unsupported os\" && return 1 fi } # get bash(current shell) major version function cf_bash_major_ver () { echo ${ BASH_VERSINFO [0] } } # get bash(current shell) minor version function cf_bash_minor_ver () { echo ${ BASH_VERSINFO [1] } } # get kernel version function cf_kernel_ver () { if cf_is_linux >/dev/null ; then uname -r | cut -d '-' -f1 elif cf_is_darwin >/dev/null ; then uname -r | cut -d '-' -f1 else echo \"unsupported os\" && return 1 fi } # get kernel major version function cf_kernel_major_ver () { if cf_is_linux >/dev/null ; then uname -r | awk -F '.' '{print $1\".\"$2}' elif cf_is_darwin >/dev/null ; then uname -r | awk -F '.' '{print $1\".\"$2}' else echo \"unsupported os\" && return 1 fi } # get kernel minor version function cf_kernel_minor_ver () { if cf_is_linux >/dev/null ; then uname -r | awk -F '.' '{print $3}' elif cf_is_darwin >/dev/null ; then uname -r | awk -F '.' '{print $3}' else echo \"unsupported os\" && return 1 fi } # get value from config file such as app.properties function cf_get_property () { local file = \" $1 \" local key = \" $2 \" grep \"^ ${ key } =\" \" $file \" | tr -d '\\r' | cut -d '=' -f2 | cf_trim } # get command path, eg: `cf_command_path ls` output /usr/bin/ls function cf_command_path () { local cmd = $1 cf_is_bash && builtin type -P $cmd && return $? if [ -x /usr/bin/which ] ; then local p = $( /usr/bin/which $1 | head -1 ) [ ! -z \" $p \" ] && echo $p && return 0 return 1 else local p = $( which $1 | grep \"^/\" | head -1 ) [ ! -z \" $p \" ] && echo $p && return 0 return 1 fi } # get all ip addresses function cf_ip_list () { if [ -x /sbin/ip ] ; then local list = $( /sbin/ip -o -4 addr list | awk '{print $4}' | cut -d '/' -f1 | tr '\\n' ',' ) else local list = $( /sbin/ifconfig | grep \"inet \" | awk '{print $2}' | sed 's/addr://' | tr '\\n' ',' ) fi echo ${ list %, } } function cf_stdio () { local pid = $1 /usr/sbin/lsof -a -p $pid -d 0 ,1,2 } function cf_stdout () { local pid = $1 if cf_is_linux >/dev/null ; then readlink -f /proc/ $pid /fd/1 elif cf_is_darwin >/dev/null ; then /usr/sbin/lsof -a -p $pid -d 1 | awk 'NR>1{print $NF}' else echo \"unsupported os\" && return 1 fi } # get file last modification time function cf_last_modification () { local file = \" $1 \" if [[ $OSTYPE == *linux* ]] ; then date +%Y%m%d%H%M%S -r $file elif [[ $OSTYPE == *darwin* ]] ; then stat -f \"%Sm\" -t \"%Y%m%d%H%M%S\" $file fi } # check current user is root function cf_is_root () { [ ` whoami ` = \"root\" ] && echo \"true\" && return 0 echo \"false\" && return 1 } # check current shell is interactive function cf_is_interactive_shell () { if cf_is_bash >/dev/null ; then [[ \" $- \" = *i* ]] && echo \"true\" && return 0 elif cf_is_zsh >/dev/null ; then [[ -o interactive ]] && echo \"true\" && return 0 else echo \"unsupported shell\" && return 1 fi echo \"false\" && return 1 } # check current shell is login shell function cf_is_login_shell () { if cf_is_bash >/dev/null ; then shopt -q login_shell && echo \"true\" && return 0 elif cf_is_zsh >/dev/null ; then [[ -o login ]] && echo \"true\" && return 0 else echo \"unsupported shell\" && return 1 fi echo \"false\" && return 1 } # check command is exists function cf_is_command_exists () { local cmd = $1 if [ -x /usr/bin/which ] ; then /usr/bin/which $cmd >/dev/null 2 > & 1 && echo \"true\" && return 0 else which $cmd >/dev/null 2 > & 1 && echo \"true\" && return 0 fi echo \"false\" && return 1 } # check file name globbing flag function cf_is_glob_enabled () { if cf_is_bash >/dev/null ; then [[ $- ! = *f* ]] && echo \"true\" && return 0 elif cf_is_zsh >/dev/null ; then [[ -o glob ]] && echo \"true\" && return 0 else echo \"unsupported shell\" && return 1 fi echo \"false\" && return 1 } # enable file name globbing function cf_enable_glob () { cf_is_bash >/dev/null && set +f && return 0 cf_is_zsh >/dev/null && set -o glob && return 0 echo \"unsupported shell\" && return 1 } # disable file name globbing function cf_disable_glob () { cf_is_bash >/dev/null && set -f && return 0 cf_is_zsh >/dev/null && set -o noglob && return 0 echo \"unsupported shell\" && return 1 } # check extglob flag function cf_is_extglob_enabled () { if cf_is_bash >/dev/null ; then shopt -q extglob && echo \"true\" && return 0 elif cf_is_zsh >/dev/null ; then [[ -o kshglob ]] && echo \"true\" && return 0 else echo \"unsupported shell\" && return 1 fi echo \"false\" && return 1 } # enable extglob function cf_enable_extglob () { cf_is_bash >/dev/null && shopt -s extglob && return 0 cf_is_zsh >/dev/null && set -o kshglob && return 0 echo \"unsupported shell\" && return 1 } # disable extglob function cf_disable_extglob () { cf_is_bash >/dev/null && shopt -u extglob && return 0 cf_is_zsh >/dev/null && unsetopt kshglob && return 0 echo \"unsupported shell\" && return 1 } # check pid is exists function cf_is_pid_exists () { local pid = $1 [ -z \" $pid \" ] && echo \"false\" && return 1 kill -0 $pid >/dev/null 2 > & 1 && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_java () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 ps -ocommand = -p $pid | awk '$1~/java$/' > /dev/null && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_available_port () { local port = $1 if [[ \" $OSTYPE \" = *linux* ]] ; then local r = $( netstat -ant | awk '$6==\"LISTEN\" && $4~\":' $port '$\"' ) elif [[ \" $OSTYPE \" = *darwin* ]] ; then local r = $( netstat -ant | awk '$6==\"LISTEN\"' | grep \"\\. $port \" ) else echo \"unknown system\" && return 1 fi [ -z \" $r \" ] && echo \"true\" && return 0 ; echo \"false\" && return 1 # port has been used } function cf_defined () { if cf_is_bash >/dev/null ; then [[ ${ !1-X } == ${ !1-Y } ]] elif cf_is_zsh >/dev/null ; then [[ ${ (P)1-X } == ${ (P)1-Y } ]] else echo \"unsupported shell\" && return 1 fi } function cf_has_value () { cf_defined $1 || return 1 if cf_is_bash >/dev/null ; then [[ -n ${ !1 } ]] && return 0 elif cf_is_zsh >/dev/null ; then [[ -n ${ (P)1 } ]] && return 0 fi return 1 } function cf_has_sudo_privilege () { # do not need password sudo -n echo >/dev/null 2 > & 1 } function cf_timestamp () { date +%F-%T | tr ':-' '_' #2015_12_01_22_15_22 } function cf_length () { echo ${# 1 } } # trim string function cf_trim () { if [ -p /dev/stdin ] ; then while IFS = '' read line ; do _trim \" $line \" done else _trim \" $1 \" fi } # private function function _trim () { local str = \" $1 \" local extglob = $( cf_is_extglob_enabled ) if cf_is_bash >/dev/null || cf_is_zsh >/dev/null ; then [ $extglob = \"false\" ] && cf_enable_extglob str = \" ${ str ##*( ) } \" str = \" ${ str %%*( ) } \" [ $extglob = \"false\" ] && cf_disable_extglob else echo \"unsupported shell\" && return 1 fi echo $str } function cf_lower () { echo \" $1 \" | tr '[:upper:]' '[:lower:]' } function cf_upper () { echo \" $1 \" | tr '[:lower:]' '[:upper:]' } function cf_ps_name () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 if cf_is_java $pid >/dev/null ; then local main = $( cf_ps_java_main $pid ) echo \"java( $main )\" else ps -ocommand = -p $pid | awk '{print $1}' fi } function cf_ppid () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 ps -oppid = -p $pid } function cf_ps_java_main () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 ps -ocommand = -p $pid | tr ' ' '\\n' | awk '/-classpath|-cp/{getline;next};/^-/{next}1' | awk 'NR==2' } function cf_ps_time () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 local elapsed = \" $( ps -oetime = -p $pid | cf_trim ) \" local started = \" $( ps -olstart = -p $pid | cf_trim ) \" if [ ` cf_is_gnu_date ` = \"true\" ] ; then started = $( date + '%Y-%m-%d %H:%M:%S' -d \" $started \" ) fi local cpu_time = $( ps -otime = -p $pid | cf_trim ) echo \"started from: $started , elapsed: $elapsed , cumulative cpu time: $cpu_time \" } function cf_ps_zombies () { ps -opid,state,command -e | awk 'NR==1 || $2==\"Z\"' } function cf_connection_topology () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 /usr/sbin/lsof -Pan -iTCP -p $pid > /tmp/. $pid .lsof grep -o \"[0-9.:]*->[0-9.:]*\" /tmp/. $pid .lsof > /tmp/. $pid .conns grep \"LISTEN\" /tmp/. $pid .lsof | awk '$9~/*/{print substr($9,3)}' > /tmp/. $pid .ports echo \"-------------- downstream -------------\" for port in $( cat /tmp/. $pid .ports ) ; do cf_connection_list_by_port $port | awk '$6==\"ESTABLISHED\" {print $5}' | cut -d ':' -f1 | sort | uniq -c | awk '{print $2\"-->localhost:\"' $port '\" (\"$1\")\"}' done echo \"-------------- upstream ---------------\" local portsExpr = $( cat /tmp/. $pid .ports | sed -e 's/^/:/' -e 's/$/->/' | xargs | sed 's/ /|/g' ) grep -Ev \" $portsExpr \" /tmp/. $pid .conns > /tmp/. $pid .out awk -F '->' '{print $2}' /tmp/. $pid .out | sort | uniq -c | sort -nrk1 | awk '{print \"localhost-->\"$2\" (\"$1\")\"}' rm -f /tmp/. $pid .lsof /tmp/. $pid .conns /tmp/. $pid .ports } function cf_connection_list_by_pid () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 /usr/sbin/lsof -Pan -iTCP -p $pid } function cf_connection_list_by_port () { local port = $1 netstat -ant | awk '$4~/[:.]' \" $port \" '$/' } function cf_connection_stat_by_pid () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 local interval = ${ 2 :- 1 } /usr/sbin/lsof -Pan -iTCP -p $pid -r $interval } function cf_connection_stat_by_port () { local port = $1 netstat -ant -c | awk '$1==\"Proto\"{print \"\\n\"$0};$4~/[:.]' \" $port \" '$/' } function cf_listening_sockets () { #lsof -Pnl -i4TCP -sTCP:LISTEN #low version unsupported -sTCP params if cf_is_linux >/dev/null || cf_is_darwin >/dev/null ; then if cf_has_sudo_privilege ; then sudo /usr/sbin/lsof -Pnl -i4TCP | grep LISTEN else /usr/sbin/lsof -Pnl -i4TCP | grep LISTEN fi else netstat -plnt 2 >/dev/null | grep -v tcp6 fi } function cf_traffic_by_eth () { local eth = ${ 1 :- \"eth0\" } if cf_is_linux >/dev/null ; then [ ! -d /sys/class/net/ $eth ] && echo \"network interface not exists.\" && return 1 while true ; do local r1 = ` cat /sys/class/net/ $eth /statistics/rx_bytes ` local t1 = ` cat /sys/class/net/ $eth /statistics/tx_bytes ` sleep 1 local r2 = ` cat /sys/class/net/ $eth /statistics/rx_bytes ` local t2 = ` cat /sys/class/net/ $eth /statistics/tx_bytes ` local rkbps = ` cf_calc \"( $r2 - $r1 ) / 1024\" ` local tkbps = ` cf_calc \"( $t2 - $t1 ) / 1024\" ` echo \" $eth : RX $rkbps kB/s TX $tkbps kB/s\" done elif cf_is_darwin >/dev/null ; then # `netstat -I eth0 -w 1` or `nettop -n -m tcp` declare -a tuple local _i1 = 0 cf_is_zsh >/dev/null && _i1 = 1 local _i2 = 1 cf_is_zsh >/dev/null && _i1 = 2 while true ; do tuple =( $( netstat -nbi -I $eth | tail -1 | awk '{print $7,$10}' ) ) local r1 = ${ tuple [ $_i1 ] } local t1 = ${ tuple [ $_i2 ] } sleep 1 tuple =( $( netstat -nbi -I $eth | tail -1 | awk '{print $7,$10}' ) ) local r2 = ${ tuple [ $_i1 ] } local t2 = ${ tuple [ $_i2 ] } local rkbps = ` cf_calc \"( $r2 - $r1 ) / 1024\" ` local tkbps = ` cf_calc \"( $t2 - $t1 ) / 1024\" ` echo \" $eth : RX $rkbps kB/s TX $tkbps kB/s\" done else echo \"unsupported os\" && return 1 fi } function cf_traffic_by_pid () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 # kernel 2.6.18 not support, must 2.6.32 or later? local pf = \"/proc/ $pid /net/netstat\" [ ! -f $pf ] && echo \" $pf not found!\" && return 1 declare -a tuple local _i1 = 0 cf_is_zsh >/dev/null && _i1 = 1 local _i2 = 1 cf_is_zsh >/dev/null && _i1 = 2 local pname = \" $( cf_ps_name $pid ) \" while true ; do tuple =( $( grep \"IpExt: \" $pf | awk 'NR==2{print $8,$9}' ) ) local r1 = ${ tuple [ $_i1 ] } local t1 = ${ tuple [ $_i2 ] } sleep 1 tuple =( $( grep \"IpExt: \" $pf | awk 'NR==2{print $8,$9}' ) ) local r2 = ${ tuple [ $_i1 ] } local t2 = ${ tuple [ $_i2 ] } local rkbps = ` cf_calc \"( $r2 - $r1 ) / 1024\" ` local tkbps = ` cf_calc \"( $t2 - $t1 ) / 1024\" ` echo \" $pname : IN $rkbps kB/s OUT $tkbps kB/s\" done } function cf_iotop () { sudo iotop -bod1 } function cf_check_sum () { local dir = ${ 1 :- $PWD } local dirsum = 0 for sum in $( find ${ dir } -type f -print0 | xargs -0 cksum | awk '{print $1}' ) do dirsum = $(( ${ sum } + ${ dirsum } )) done echo ${ dirsum } } function cf_java_classpath_check () { [ $# -eq 0 ] && echo \"please enter classpath dir\" && return 1 [ ! -d \" $1 \" ] && echo \"not a directory\" && return 1 local tmpfile = \"/tmp/.cp $( date +%s ) \" local tmphash = \"/tmp/.hash $( date +%s ) \" local verbose = \"/tmp/cp-verbose.log\" if cf_is_zsh >/dev/null ; then local -a files local begin = 1 elif cf_is_bash >/dev/null ; then declare -a files local begin = 0 else echo \"unsupported shell\" && return 1 fi files =( ` find \" $1 \" -name \"*.jar\" ` ) for f in $files ; do jarName = ` basename $f ` list = ` unzip -l $f | awk -v fn = $jarName '/\\.class$/{print $NF,fn}' ` size = ` echo \" $list \" | wc -l ` echo $jarName $size >> $tmphash echo \" $list \" done | sort | awk 'NF{ a[$1]++;m[$1]=m[$1]\",\"$2}END{for(i in a) if(a[i] > 1) print i,substr(m[i],2)}' > $tmpfile awk '{print $2}' $tmpfile | awk -F ',' '{i=1;for(;i<=NF;i++) for(j=i+1;j<=NF;j++) print $i,$j}' | sort | uniq -c | sort -nrk1 | while read line ; do local dup = ${ line %% * } local jars = ${ line #* } local jar1 = ${ jars % * } local jar2 = ${ jars #* } local len_jar1 = ` grep -F \" $jar1 \" $tmphash | grep ^ \" $jar1 \" | awk '{print $2}' ` local len_jar2 = ` grep -F \" $jar2 \" $tmphash | grep ^ \" $jar2 \" | awk '{print $2}' ` local len = $(( $len_jar1 > $len_jar2 ? $len_jar1 : $len_jar2 )) local per = $( echo \"scale=2; $dup / $len \" | bc -l ) echo ${ per /./ } $dup $jar1 $jar2 done | sort -nr -k1 -k2 | awk 'NR==1{print \"Similarity DuplicateClasses File1 File2\"}{print \"%\"$0}' | column -t sort $tmpfile | awk '{print $1,\"\\n\\t\\t\",$2}' > $verbose echo \"See $verbose for more details.\" rm -f $tmpfile rm -f $tmphash } function cf_java_class_find () { local libdir = $1 local name = $2 local glob = $( cf_is_glob_enabled ) [ $glob = \"false\" ] && cf_enable_glob builtin pushd $libdir >/dev/null for j in *.jar ; do unzip -l $j | grep $name && echo $j ; done builtin popd >/dev/null [ $glob = \"false\" ] && cf_disable_glob } function cf_java_pids () { ps x | grep \"jav[a]\" | awk '{print $1}' } function cf_java_infos () { for p in ` cf_java_pids ` ; do echo \"java pid: $p \" info = ` ps -opid = ,command = -p $p | tr ' ' '\\n' | awk '/-classpath|-cp/{getline;next};/-Xmx|-Dcatalina.base/{print};/^-/{next};1' | xargs ` echo \" $info \" time = ` cf_ps_time $p ` echo \" $time \" done } function cf_java_threads () { local pid = $1 local vm_threads = \"GC task|VM |CompilerThread|Finalizer|Reference Handler|Signal Dispatcher\" \" $JAVA_HOME \" /bin/jstack $pid | grep \"^\\\"\" | grep -Ev \" $vm_threads \" } function cf_java_sysprops () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 \" $JAVA_HOME \" /bin/jinfo -sysprops $pid } function cf_jstack_series () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 local count = ${ 2 :- 5 } # defaults 5 times local delay = ${ 3 :- 0 .5 } # defaults 0.5 seconds local logdir = ${ LOG_DIR :- \"/tmp\" } while [ $count -gt 0 ] ; do if cf_is_gnu_date >/dev/null ; then local suffix = $( date +%H%M%S.%N ) else local suffix = $( date +%H%M%S ) \".\" $count fi \" $JAVA_HOME \" /bin/jstack $pid > $logdir /jstack. $pid . $suffix sleep $delay let count-- echo -n \".\" done } function cf_dmesg () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 dmesg -T \" $@ \" 2 >/dev/null [ $? -eq 0 ] && return 0 dmesg \" $@ \" | perl -w -e 'use strict; my ($uptime) = do { local @ARGV=\"/proc/uptime\";<>}; ($uptime) = ($uptime =~ /^(\\d+)\\./); foreach my $line (<>) { printf( ($line=~/^\\[\\s*(\\d+)\\.\\d+\\](.+)/) ? ( \"[%s]%s\\n\", scalar localtime(time - $uptime + $1), $2 ) : $line ) }' } function cf_trace_http_request () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e read -s 2000 -qftp $pid 2 > & 1 | grep \" HTTP/1[.][01][\\]r[\\]n\" } function cf_trace_http_response () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e write -s 2000 -qftp $pid 2 > & 1 | grep \"HTTP/1[.][01] \" } function cf_trace_http_req_header () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e read -s 2000 -qftp $pid 2 > & 1 | grep \" HTTP/1[.][01][\\]r[\\]n\" | sed 's/\\\\r\\\\n/\\n/g' } function cf_trace_http_resp_header () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e write -s 2000 -qftp $pid 2 > & 1 | grep \"HTTP/1[.][01] \" | sed 's/\\\\r\\\\n/\\n/g' } function cf_trace_http_invoke () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e sendto -s 2000 -qftp $pid 2 > & 1 | grep \" HTTP/1[.][01][\\]r[\\]n\" } function cf_trace_connect () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e connect -s 2000 -qftp $pid 2 > & 1 | grep \"port\" } function cf_trace_socket () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e connect,socket,close -s 2000 -qftp $pid 2 > & 1 | grep \"port\" } function cf_trace_sql_select () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e sendto,write -s 2000 -qftp $pid 2 > & 1 | grep -i \"[\\]3select\" } function cf_trace_sql_update () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e sendto,write -s 2000 -qftp $pid 2 > & 1 | grep -i \"[\\]3update\" } function cf_trace_sql_insert () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e sendto,write -s 2000 -qftp $pid 2 > & 1 | grep -i \"[\\]3insert\" } function cf_trace_redis_command () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 local cmd = $2 strace -e sendto,write -s 2000 -qftp $pid 2 > & 1 | grep -i \" $cmd [\\]r[\\]n\" } function cf_trace_dubbo_request () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e read -s 2000 -qftp $pid 2 > & 1 | grep -i \"[\\]tinterface\" } function cf_trace_dubbo_invoke () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e write -s 2000 -qftp $pid 2 > & 1 | grep -i \"[\\]tinterface\" } function cf_trace_system_call () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 local time = ${ 2 :- 5 } local outfile = \"/tmp/.sys-call. $pid \" strace -cqftp $pid -o $outfile & local spid = $! while [ $time -gt 0 ] ; do sleep 1 let time-- echo -n \".\" done echo \"\" kill $spid && echo \"ok\" # if strace process still exists cf_is_pid_exists $spid >/dev/null 2 > & 1 && kill -9 $spid cat $outfile && rm -f $outfile } function cf_random_entropy_stat () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 while true ; do echo \"entropy available:\" ` cat /proc/sys/kernel/random/entropy_avail ` sleep 1 done } function cf_json_fmt () { python -mjson.tool } function cf_http_server () { local port = ${ 1 :- 8000 } python -mSimpleHTTPServer $port 2 >/dev/null }","title":"\u5b9e\u7528\u7684bash\u5185\u7f6e\u51fd\u6570"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/%E5%AE%9E%E7%94%A8%E7%9A%84bash%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/#_1","text":"# check current os is linux function cf_is_linux () { [[ \" $OSTYPE \" = *linux* ]] && echo \"true\" && return 0 echo \"false\" && return 1 } # check current os is mac/darwin function cf_is_darwin () { [[ \" $OSTYPE \" = *darwin* ]] && echo \"true\" && return 0 echo \"false\" && return 1 } # check current os is windows/cygwin function cf_is_cygwin () { [[ \" $OSTYPE \" = *cygwin* ]] && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_gnu_date () { date --version >/dev/null 2 > & 1 && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_gnu_sed () { sed --version >/dev/null 2 > & 1 && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_gnu_awk () { awk --version | grep GNU >/dev/null && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_gnu_grep () { grep --version | grep GNU >/dev/null && echo \"true\" && return 0 echo \"false\" && return 1 } # java style startsWith function cf_starts_with () { local str = $1 local pre = $2 [[ \" $str \" == ${ pre } * ]] } # java style substring function cf_substring () { local str = $1 local begin = $2 local end = $3 if [ -z \" $end \" ] ; then echo ${ str : $begin } else local len = ` expr $end - $begin ` echo ${ str : $begin : $len } fi } # get current shell name function cf_shell_name () { local name = $( ps -ocommand = -p $$ | awk '{print $1}' ) if cf_starts_with $name \"-\" ; then cf_substring $name 1 else echo $name fi } # check current shell is bash function cf_is_bash () { [[ ` cf_shell_name ` = \"-bash\" || ` basename $( cf_shell_name ) ` = \"bash\" ]] && echo \"true\" && return 0 echo \"false\" && return 1 } # check current shell is zsh function cf_is_zsh () { [[ ` cf_shell_name ` = \"-zsh\" || ` basename $( cf_shell_name ) ` = \"zsh\" ]] && echo \"true\" && return 0 echo \"false\" && return 1 } function _script_dir () { if cf_is_bash >/dev/null ; then cd \" $( dirname \" ${ BASH_SOURCE [0] } \" ) \" && pwd -P elif cf_is_zsh >/dev/null ; then cd \" $( dirname \" ${ (%) :- %N } \" ) \" && pwd -P else echo \"unsupported shell\" && return 1 fi } function _script_file () { if cf_is_bash >/dev/null ; then basename \" ${ BASH_SOURCE [0] } \" elif cf_is_zsh >/dev/null ; then basename \" ${ (%) :- %N } \" else echo \"unsupported shell\" && return 1 fi } # colorful grep. private function function _get_colorful_grep () { cf_is_gnu_grep >/dev/null && echo \"grep --color\" && return 0 export GREP_OPTIONS = '--color=always' export GREP_COLOR = '1;35;40' echo \"grep\" } # list all common functions function cf_functions () { if cf_is_bash >/dev/null ; then declare -F | awk '{print $NF}' | grep \"cf_\" | sort elif cf_is_zsh >/dev/null ; then print -l ${ (ok)functions } | grep \"cf_\" | sort else echo \"unsupported shell\" && return 1 fi } # get total memory (MB) function cf_mem_total () { if cf_is_linux >/dev/null ; then free -m | awk '/^Mem/{print $2\"M\"}' elif cf_is_darwin >/dev/null ; then sysctl hw.memsize | awk '{print $2/1024/1024\"M\"}' else echo \"unsupported os\" && return 1 fi } # decimal to hexadecimal function cf_dec2Hex () { printf \"%x\" $1 } # decimal to octal function cf_dec2Oct () { printf \"%o\" $1 } # decimal to binary function cf_dec2Bin () { echo \"obase=2; $1 \" | bc } # hexadecimal to decimal function cf_hex2Dec () { echo $(( 16# $1 )) } # octal to decimal function cf_oct2Dec () { echo $(( 8# $1 )) } # binary to decimal function cf_bin2Dec () { echo $(( 2# $1 )) } function cf_calc () { local exp = \" $1 \" echo \" $exp \" | bc -l | awk '{printf \"%.2f\", $0}' } # warning and exit, not for interactive shell function cf_die () { local msg = \" $1 \" local code = ${ 2 :- 1 } echo \" $msg \" && exit $code } # highlight key words from file or pipeline function cf_highlight () { local keyword = \" $1 \" local cgrep = \" $( _get_colorful_grep ) \" if [ -p /dev/stdin ] ; then # from pipeline while IFS = '' read line ; do echo $line | eval \" $cgrep -E \\\" ${ keyword } | $ \\\"\" done else local file = \" $2 \" eval \" $cgrep -E \\\" ${ keyword } | $ \\\"\" \" $file \" fi } function cf_ps_env () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 if cf_is_linux >/dev/null ; then xargs --null --max-args = 1 < /proc/ $pid /environ elif cf_is_darwin >/dev/null ; then ps -wwE -p $pid else echo \"unsupported os\" && return 1 fi } # get bash(current shell) major version function cf_bash_major_ver () { echo ${ BASH_VERSINFO [0] } } # get bash(current shell) minor version function cf_bash_minor_ver () { echo ${ BASH_VERSINFO [1] } } # get kernel version function cf_kernel_ver () { if cf_is_linux >/dev/null ; then uname -r | cut -d '-' -f1 elif cf_is_darwin >/dev/null ; then uname -r | cut -d '-' -f1 else echo \"unsupported os\" && return 1 fi } # get kernel major version function cf_kernel_major_ver () { if cf_is_linux >/dev/null ; then uname -r | awk -F '.' '{print $1\".\"$2}' elif cf_is_darwin >/dev/null ; then uname -r | awk -F '.' '{print $1\".\"$2}' else echo \"unsupported os\" && return 1 fi } # get kernel minor version function cf_kernel_minor_ver () { if cf_is_linux >/dev/null ; then uname -r | awk -F '.' '{print $3}' elif cf_is_darwin >/dev/null ; then uname -r | awk -F '.' '{print $3}' else echo \"unsupported os\" && return 1 fi } # get value from config file such as app.properties function cf_get_property () { local file = \" $1 \" local key = \" $2 \" grep \"^ ${ key } =\" \" $file \" | tr -d '\\r' | cut -d '=' -f2 | cf_trim } # get command path, eg: `cf_command_path ls` output /usr/bin/ls function cf_command_path () { local cmd = $1 cf_is_bash && builtin type -P $cmd && return $? if [ -x /usr/bin/which ] ; then local p = $( /usr/bin/which $1 | head -1 ) [ ! -z \" $p \" ] && echo $p && return 0 return 1 else local p = $( which $1 | grep \"^/\" | head -1 ) [ ! -z \" $p \" ] && echo $p && return 0 return 1 fi } # get all ip addresses function cf_ip_list () { if [ -x /sbin/ip ] ; then local list = $( /sbin/ip -o -4 addr list | awk '{print $4}' | cut -d '/' -f1 | tr '\\n' ',' ) else local list = $( /sbin/ifconfig | grep \"inet \" | awk '{print $2}' | sed 's/addr://' | tr '\\n' ',' ) fi echo ${ list %, } } function cf_stdio () { local pid = $1 /usr/sbin/lsof -a -p $pid -d 0 ,1,2 } function cf_stdout () { local pid = $1 if cf_is_linux >/dev/null ; then readlink -f /proc/ $pid /fd/1 elif cf_is_darwin >/dev/null ; then /usr/sbin/lsof -a -p $pid -d 1 | awk 'NR>1{print $NF}' else echo \"unsupported os\" && return 1 fi } # get file last modification time function cf_last_modification () { local file = \" $1 \" if [[ $OSTYPE == *linux* ]] ; then date +%Y%m%d%H%M%S -r $file elif [[ $OSTYPE == *darwin* ]] ; then stat -f \"%Sm\" -t \"%Y%m%d%H%M%S\" $file fi } # check current user is root function cf_is_root () { [ ` whoami ` = \"root\" ] && echo \"true\" && return 0 echo \"false\" && return 1 } # check current shell is interactive function cf_is_interactive_shell () { if cf_is_bash >/dev/null ; then [[ \" $- \" = *i* ]] && echo \"true\" && return 0 elif cf_is_zsh >/dev/null ; then [[ -o interactive ]] && echo \"true\" && return 0 else echo \"unsupported shell\" && return 1 fi echo \"false\" && return 1 } # check current shell is login shell function cf_is_login_shell () { if cf_is_bash >/dev/null ; then shopt -q login_shell && echo \"true\" && return 0 elif cf_is_zsh >/dev/null ; then [[ -o login ]] && echo \"true\" && return 0 else echo \"unsupported shell\" && return 1 fi echo \"false\" && return 1 } # check command is exists function cf_is_command_exists () { local cmd = $1 if [ -x /usr/bin/which ] ; then /usr/bin/which $cmd >/dev/null 2 > & 1 && echo \"true\" && return 0 else which $cmd >/dev/null 2 > & 1 && echo \"true\" && return 0 fi echo \"false\" && return 1 } # check file name globbing flag function cf_is_glob_enabled () { if cf_is_bash >/dev/null ; then [[ $- ! = *f* ]] && echo \"true\" && return 0 elif cf_is_zsh >/dev/null ; then [[ -o glob ]] && echo \"true\" && return 0 else echo \"unsupported shell\" && return 1 fi echo \"false\" && return 1 } # enable file name globbing function cf_enable_glob () { cf_is_bash >/dev/null && set +f && return 0 cf_is_zsh >/dev/null && set -o glob && return 0 echo \"unsupported shell\" && return 1 } # disable file name globbing function cf_disable_glob () { cf_is_bash >/dev/null && set -f && return 0 cf_is_zsh >/dev/null && set -o noglob && return 0 echo \"unsupported shell\" && return 1 } # check extglob flag function cf_is_extglob_enabled () { if cf_is_bash >/dev/null ; then shopt -q extglob && echo \"true\" && return 0 elif cf_is_zsh >/dev/null ; then [[ -o kshglob ]] && echo \"true\" && return 0 else echo \"unsupported shell\" && return 1 fi echo \"false\" && return 1 } # enable extglob function cf_enable_extglob () { cf_is_bash >/dev/null && shopt -s extglob && return 0 cf_is_zsh >/dev/null && set -o kshglob && return 0 echo \"unsupported shell\" && return 1 } # disable extglob function cf_disable_extglob () { cf_is_bash >/dev/null && shopt -u extglob && return 0 cf_is_zsh >/dev/null && unsetopt kshglob && return 0 echo \"unsupported shell\" && return 1 } # check pid is exists function cf_is_pid_exists () { local pid = $1 [ -z \" $pid \" ] && echo \"false\" && return 1 kill -0 $pid >/dev/null 2 > & 1 && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_java () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 ps -ocommand = -p $pid | awk '$1~/java$/' > /dev/null && echo \"true\" && return 0 echo \"false\" && return 1 } function cf_is_available_port () { local port = $1 if [[ \" $OSTYPE \" = *linux* ]] ; then local r = $( netstat -ant | awk '$6==\"LISTEN\" && $4~\":' $port '$\"' ) elif [[ \" $OSTYPE \" = *darwin* ]] ; then local r = $( netstat -ant | awk '$6==\"LISTEN\"' | grep \"\\. $port \" ) else echo \"unknown system\" && return 1 fi [ -z \" $r \" ] && echo \"true\" && return 0 ; echo \"false\" && return 1 # port has been used } function cf_defined () { if cf_is_bash >/dev/null ; then [[ ${ !1-X } == ${ !1-Y } ]] elif cf_is_zsh >/dev/null ; then [[ ${ (P)1-X } == ${ (P)1-Y } ]] else echo \"unsupported shell\" && return 1 fi } function cf_has_value () { cf_defined $1 || return 1 if cf_is_bash >/dev/null ; then [[ -n ${ !1 } ]] && return 0 elif cf_is_zsh >/dev/null ; then [[ -n ${ (P)1 } ]] && return 0 fi return 1 } function cf_has_sudo_privilege () { # do not need password sudo -n echo >/dev/null 2 > & 1 } function cf_timestamp () { date +%F-%T | tr ':-' '_' #2015_12_01_22_15_22 } function cf_length () { echo ${# 1 } } # trim string function cf_trim () { if [ -p /dev/stdin ] ; then while IFS = '' read line ; do _trim \" $line \" done else _trim \" $1 \" fi } # private function function _trim () { local str = \" $1 \" local extglob = $( cf_is_extglob_enabled ) if cf_is_bash >/dev/null || cf_is_zsh >/dev/null ; then [ $extglob = \"false\" ] && cf_enable_extglob str = \" ${ str ##*( ) } \" str = \" ${ str %%*( ) } \" [ $extglob = \"false\" ] && cf_disable_extglob else echo \"unsupported shell\" && return 1 fi echo $str } function cf_lower () { echo \" $1 \" | tr '[:upper:]' '[:lower:]' } function cf_upper () { echo \" $1 \" | tr '[:lower:]' '[:upper:]' } function cf_ps_name () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 if cf_is_java $pid >/dev/null ; then local main = $( cf_ps_java_main $pid ) echo \"java( $main )\" else ps -ocommand = -p $pid | awk '{print $1}' fi } function cf_ppid () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 ps -oppid = -p $pid } function cf_ps_java_main () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 ps -ocommand = -p $pid | tr ' ' '\\n' | awk '/-classpath|-cp/{getline;next};/^-/{next}1' | awk 'NR==2' } function cf_ps_time () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 local elapsed = \" $( ps -oetime = -p $pid | cf_trim ) \" local started = \" $( ps -olstart = -p $pid | cf_trim ) \" if [ ` cf_is_gnu_date ` = \"true\" ] ; then started = $( date + '%Y-%m-%d %H:%M:%S' -d \" $started \" ) fi local cpu_time = $( ps -otime = -p $pid | cf_trim ) echo \"started from: $started , elapsed: $elapsed , cumulative cpu time: $cpu_time \" } function cf_ps_zombies () { ps -opid,state,command -e | awk 'NR==1 || $2==\"Z\"' } function cf_connection_topology () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 /usr/sbin/lsof -Pan -iTCP -p $pid > /tmp/. $pid .lsof grep -o \"[0-9.:]*->[0-9.:]*\" /tmp/. $pid .lsof > /tmp/. $pid .conns grep \"LISTEN\" /tmp/. $pid .lsof | awk '$9~/*/{print substr($9,3)}' > /tmp/. $pid .ports echo \"-------------- downstream -------------\" for port in $( cat /tmp/. $pid .ports ) ; do cf_connection_list_by_port $port | awk '$6==\"ESTABLISHED\" {print $5}' | cut -d ':' -f1 | sort | uniq -c | awk '{print $2\"-->localhost:\"' $port '\" (\"$1\")\"}' done echo \"-------------- upstream ---------------\" local portsExpr = $( cat /tmp/. $pid .ports | sed -e 's/^/:/' -e 's/$/->/' | xargs | sed 's/ /|/g' ) grep -Ev \" $portsExpr \" /tmp/. $pid .conns > /tmp/. $pid .out awk -F '->' '{print $2}' /tmp/. $pid .out | sort | uniq -c | sort -nrk1 | awk '{print \"localhost-->\"$2\" (\"$1\")\"}' rm -f /tmp/. $pid .lsof /tmp/. $pid .conns /tmp/. $pid .ports } function cf_connection_list_by_pid () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 /usr/sbin/lsof -Pan -iTCP -p $pid } function cf_connection_list_by_port () { local port = $1 netstat -ant | awk '$4~/[:.]' \" $port \" '$/' } function cf_connection_stat_by_pid () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 local interval = ${ 2 :- 1 } /usr/sbin/lsof -Pan -iTCP -p $pid -r $interval } function cf_connection_stat_by_port () { local port = $1 netstat -ant -c | awk '$1==\"Proto\"{print \"\\n\"$0};$4~/[:.]' \" $port \" '$/' } function cf_listening_sockets () { #lsof -Pnl -i4TCP -sTCP:LISTEN #low version unsupported -sTCP params if cf_is_linux >/dev/null || cf_is_darwin >/dev/null ; then if cf_has_sudo_privilege ; then sudo /usr/sbin/lsof -Pnl -i4TCP | grep LISTEN else /usr/sbin/lsof -Pnl -i4TCP | grep LISTEN fi else netstat -plnt 2 >/dev/null | grep -v tcp6 fi } function cf_traffic_by_eth () { local eth = ${ 1 :- \"eth0\" } if cf_is_linux >/dev/null ; then [ ! -d /sys/class/net/ $eth ] && echo \"network interface not exists.\" && return 1 while true ; do local r1 = ` cat /sys/class/net/ $eth /statistics/rx_bytes ` local t1 = ` cat /sys/class/net/ $eth /statistics/tx_bytes ` sleep 1 local r2 = ` cat /sys/class/net/ $eth /statistics/rx_bytes ` local t2 = ` cat /sys/class/net/ $eth /statistics/tx_bytes ` local rkbps = ` cf_calc \"( $r2 - $r1 ) / 1024\" ` local tkbps = ` cf_calc \"( $t2 - $t1 ) / 1024\" ` echo \" $eth : RX $rkbps kB/s TX $tkbps kB/s\" done elif cf_is_darwin >/dev/null ; then # `netstat -I eth0 -w 1` or `nettop -n -m tcp` declare -a tuple local _i1 = 0 cf_is_zsh >/dev/null && _i1 = 1 local _i2 = 1 cf_is_zsh >/dev/null && _i1 = 2 while true ; do tuple =( $( netstat -nbi -I $eth | tail -1 | awk '{print $7,$10}' ) ) local r1 = ${ tuple [ $_i1 ] } local t1 = ${ tuple [ $_i2 ] } sleep 1 tuple =( $( netstat -nbi -I $eth | tail -1 | awk '{print $7,$10}' ) ) local r2 = ${ tuple [ $_i1 ] } local t2 = ${ tuple [ $_i2 ] } local rkbps = ` cf_calc \"( $r2 - $r1 ) / 1024\" ` local tkbps = ` cf_calc \"( $t2 - $t1 ) / 1024\" ` echo \" $eth : RX $rkbps kB/s TX $tkbps kB/s\" done else echo \"unsupported os\" && return 1 fi } function cf_traffic_by_pid () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 # kernel 2.6.18 not support, must 2.6.32 or later? local pf = \"/proc/ $pid /net/netstat\" [ ! -f $pf ] && echo \" $pf not found!\" && return 1 declare -a tuple local _i1 = 0 cf_is_zsh >/dev/null && _i1 = 1 local _i2 = 1 cf_is_zsh >/dev/null && _i1 = 2 local pname = \" $( cf_ps_name $pid ) \" while true ; do tuple =( $( grep \"IpExt: \" $pf | awk 'NR==2{print $8,$9}' ) ) local r1 = ${ tuple [ $_i1 ] } local t1 = ${ tuple [ $_i2 ] } sleep 1 tuple =( $( grep \"IpExt: \" $pf | awk 'NR==2{print $8,$9}' ) ) local r2 = ${ tuple [ $_i1 ] } local t2 = ${ tuple [ $_i2 ] } local rkbps = ` cf_calc \"( $r2 - $r1 ) / 1024\" ` local tkbps = ` cf_calc \"( $t2 - $t1 ) / 1024\" ` echo \" $pname : IN $rkbps kB/s OUT $tkbps kB/s\" done } function cf_iotop () { sudo iotop -bod1 } function cf_check_sum () { local dir = ${ 1 :- $PWD } local dirsum = 0 for sum in $( find ${ dir } -type f -print0 | xargs -0 cksum | awk '{print $1}' ) do dirsum = $(( ${ sum } + ${ dirsum } )) done echo ${ dirsum } } function cf_java_classpath_check () { [ $# -eq 0 ] && echo \"please enter classpath dir\" && return 1 [ ! -d \" $1 \" ] && echo \"not a directory\" && return 1 local tmpfile = \"/tmp/.cp $( date +%s ) \" local tmphash = \"/tmp/.hash $( date +%s ) \" local verbose = \"/tmp/cp-verbose.log\" if cf_is_zsh >/dev/null ; then local -a files local begin = 1 elif cf_is_bash >/dev/null ; then declare -a files local begin = 0 else echo \"unsupported shell\" && return 1 fi files =( ` find \" $1 \" -name \"*.jar\" ` ) for f in $files ; do jarName = ` basename $f ` list = ` unzip -l $f | awk -v fn = $jarName '/\\.class$/{print $NF,fn}' ` size = ` echo \" $list \" | wc -l ` echo $jarName $size >> $tmphash echo \" $list \" done | sort | awk 'NF{ a[$1]++;m[$1]=m[$1]\",\"$2}END{for(i in a) if(a[i] > 1) print i,substr(m[i],2)}' > $tmpfile awk '{print $2}' $tmpfile | awk -F ',' '{i=1;for(;i<=NF;i++) for(j=i+1;j<=NF;j++) print $i,$j}' | sort | uniq -c | sort -nrk1 | while read line ; do local dup = ${ line %% * } local jars = ${ line #* } local jar1 = ${ jars % * } local jar2 = ${ jars #* } local len_jar1 = ` grep -F \" $jar1 \" $tmphash | grep ^ \" $jar1 \" | awk '{print $2}' ` local len_jar2 = ` grep -F \" $jar2 \" $tmphash | grep ^ \" $jar2 \" | awk '{print $2}' ` local len = $(( $len_jar1 > $len_jar2 ? $len_jar1 : $len_jar2 )) local per = $( echo \"scale=2; $dup / $len \" | bc -l ) echo ${ per /./ } $dup $jar1 $jar2 done | sort -nr -k1 -k2 | awk 'NR==1{print \"Similarity DuplicateClasses File1 File2\"}{print \"%\"$0}' | column -t sort $tmpfile | awk '{print $1,\"\\n\\t\\t\",$2}' > $verbose echo \"See $verbose for more details.\" rm -f $tmpfile rm -f $tmphash } function cf_java_class_find () { local libdir = $1 local name = $2 local glob = $( cf_is_glob_enabled ) [ $glob = \"false\" ] && cf_enable_glob builtin pushd $libdir >/dev/null for j in *.jar ; do unzip -l $j | grep $name && echo $j ; done builtin popd >/dev/null [ $glob = \"false\" ] && cf_disable_glob } function cf_java_pids () { ps x | grep \"jav[a]\" | awk '{print $1}' } function cf_java_infos () { for p in ` cf_java_pids ` ; do echo \"java pid: $p \" info = ` ps -opid = ,command = -p $p | tr ' ' '\\n' | awk '/-classpath|-cp/{getline;next};/-Xmx|-Dcatalina.base/{print};/^-/{next};1' | xargs ` echo \" $info \" time = ` cf_ps_time $p ` echo \" $time \" done } function cf_java_threads () { local pid = $1 local vm_threads = \"GC task|VM |CompilerThread|Finalizer|Reference Handler|Signal Dispatcher\" \" $JAVA_HOME \" /bin/jstack $pid | grep \"^\\\"\" | grep -Ev \" $vm_threads \" } function cf_java_sysprops () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 \" $JAVA_HOME \" /bin/jinfo -sysprops $pid } function cf_jstack_series () { local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 local count = ${ 2 :- 5 } # defaults 5 times local delay = ${ 3 :- 0 .5 } # defaults 0.5 seconds local logdir = ${ LOG_DIR :- \"/tmp\" } while [ $count -gt 0 ] ; do if cf_is_gnu_date >/dev/null ; then local suffix = $( date +%H%M%S.%N ) else local suffix = $( date +%H%M%S ) \".\" $count fi \" $JAVA_HOME \" /bin/jstack $pid > $logdir /jstack. $pid . $suffix sleep $delay let count-- echo -n \".\" done } function cf_dmesg () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 dmesg -T \" $@ \" 2 >/dev/null [ $? -eq 0 ] && return 0 dmesg \" $@ \" | perl -w -e 'use strict; my ($uptime) = do { local @ARGV=\"/proc/uptime\";<>}; ($uptime) = ($uptime =~ /^(\\d+)\\./); foreach my $line (<>) { printf( ($line=~/^\\[\\s*(\\d+)\\.\\d+\\](.+)/) ? ( \"[%s]%s\\n\", scalar localtime(time - $uptime + $1), $2 ) : $line ) }' } function cf_trace_http_request () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e read -s 2000 -qftp $pid 2 > & 1 | grep \" HTTP/1[.][01][\\]r[\\]n\" } function cf_trace_http_response () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e write -s 2000 -qftp $pid 2 > & 1 | grep \"HTTP/1[.][01] \" } function cf_trace_http_req_header () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e read -s 2000 -qftp $pid 2 > & 1 | grep \" HTTP/1[.][01][\\]r[\\]n\" | sed 's/\\\\r\\\\n/\\n/g' } function cf_trace_http_resp_header () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e write -s 2000 -qftp $pid 2 > & 1 | grep \"HTTP/1[.][01] \" | sed 's/\\\\r\\\\n/\\n/g' } function cf_trace_http_invoke () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e sendto -s 2000 -qftp $pid 2 > & 1 | grep \" HTTP/1[.][01][\\]r[\\]n\" } function cf_trace_connect () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e connect -s 2000 -qftp $pid 2 > & 1 | grep \"port\" } function cf_trace_socket () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e connect,socket,close -s 2000 -qftp $pid 2 > & 1 | grep \"port\" } function cf_trace_sql_select () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e sendto,write -s 2000 -qftp $pid 2 > & 1 | grep -i \"[\\]3select\" } function cf_trace_sql_update () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e sendto,write -s 2000 -qftp $pid 2 > & 1 | grep -i \"[\\]3update\" } function cf_trace_sql_insert () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e sendto,write -s 2000 -qftp $pid 2 > & 1 | grep -i \"[\\]3insert\" } function cf_trace_redis_command () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 local cmd = $2 strace -e sendto,write -s 2000 -qftp $pid 2 > & 1 | grep -i \" $cmd [\\]r[\\]n\" } function cf_trace_dubbo_request () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e read -s 2000 -qftp $pid 2 > & 1 | grep -i \"[\\]tinterface\" } function cf_trace_dubbo_invoke () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 strace -e write -s 2000 -qftp $pid 2 > & 1 | grep -i \"[\\]tinterface\" } function cf_trace_system_call () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 local pid = $1 ! cf_is_pid_exists >/dev/null $pid && echo \"pid: $pid not exists\" && return 1 local time = ${ 2 :- 5 } local outfile = \"/tmp/.sys-call. $pid \" strace -cqftp $pid -o $outfile & local spid = $! while [ $time -gt 0 ] ; do sleep 1 let time-- echo -n \".\" done echo \"\" kill $spid && echo \"ok\" # if strace process still exists cf_is_pid_exists $spid >/dev/null 2 > & 1 && kill -9 $spid cat $outfile && rm -f $outfile } function cf_random_entropy_stat () { ! cf_is_linux >/dev/null && echo \"only works in linux\" && return 1 while true ; do echo \"entropy available:\" ` cat /proc/sys/kernel/random/entropy_avail ` sleep 1 done } function cf_json_fmt () { python -mjson.tool } function cf_http_server () { local port = ${ 1 :- 8000 } python -mSimpleHTTPServer $port 2 >/dev/null }","title":"\u5b9e\u7528\u5185\u7f6e\u51fd\u6570"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/","text":"\u53c2\u8003 \u00b6 \u4ec5\u6709600\u884c\u4ee3\u7801\u7684\u7cbe\u7b80\u7248Rails\uff0c\u53ef\u4f5c\u4e3a\u5b66\u4e60Rails\u6e90\u7801\u7684\u5411\u5bfc https://github.com/xaqi/mini-rails https://rebuilding-rails.com/ \u63d0\u51fa\u95ee\u9898(\u64cd\u4f5c) \u00b6 bundel exe \u5982\u4f55\u7701\u7565 \u521b\u5efa\u4e86sqlite,\u5982\u4f55\u5f80\u5176\u4ed6\u6570\u636e\u5e93\u8fc1\u79fb \u9047\u5230\u7684\u95ee\u9898 \u00b6 RAILS_ENV=development environment is not defined in config/webpacker.yml, falling back to production environment \u279c build-an-api-rails- \u89e3\u51b3: # \u5148\u5b89\u88c5yarn brew install yarn # \u518d\u5b89\u88c5webpacker bundle exec rails webpacker:install Gem\u4f7f\u7528\u56fd\u5185\u955c\u50cf \u00b6 gem sources -- add https : // gems . ruby - china . com / -- remove https : // rubygems . org / gem sources - l https : // gems . ruby - china . com # \u786e\u4fdd\u53ea\u6709 gems.ruby-china.com \u4f60\u53ef\u4ee5\u7528 Bundler \u7684 Gem \u6e90\u4ee3\u7801\u955c\u50cf\u547d\u4ee4 \u3002 $ bundle config mirror.https://rubygems.org https://gems.ruby-china.com \u8fd9\u6837\u4f60\u4e0d\u7528\u6539\u4f60\u7684 Gemfile \u7684 source\u3002 source 'https://rubygems.org/' gem 'rails', '4.2.5' ... rails new \u65f6bundle install \u65f6\u95f4\u957f \u00b6 \u65b0\u5efarails\u9879\u76ee\u65f6\uff0crails new\u8001\u662f\u5361\u5728bundle install\u90a3\u91cc. rails new my_app -- skip - bundle cd my_app bundle install -- local \u5b89\u88c5\u6307\u5b9a\u7248\u672c\u7684rails \u00b6 gem install rails - v 5 . 0 . 0 // gem install rails -- version = 5 . 0 . 0 \u751f\u6210\u6307\u5b9a\u7248\u672c\u7684Rails\u9879\u76ee \u00b6 // \u672c\u5730 Rails \u9ed8\u8ba4 5 . 0 . 2 \u7248\u672c $ gem list -- local rails ( 5 . 0 . 2 , 5 . 0 . 0 . 1 , 5 . 0 . 0 , 4 . 2 . 8 ) // \u4f7f\u7528 version \u751f\u6210\u6307\u5b9a version\u7684\u9879\u76ee rails version new application_name // \u4f8b\u5982\u751f\u6210 4 . 2 . 8 rails 4 . 2 . 8 new todolis \u751f\u6210\u9879\u76ee\u540e,\u6267\u884cbundle,\u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528rails(\u4e0d\u7528\u6307\u5b9a\u7248\u672c)\u4e86,\u901a\u8fc7bundle\u6765\u6307\u5b9a\u7248\u672c. config.ru \u4f5c\u7528\u662f\u4ec0\u4e48? \u00b6 ru\u662frackup\u7684\u7f29\u5199. config.ru\u662f\u4e00\u4e2aRack-based Server\u542f\u52a8\u7684\u914d\u7f6e\u6587\u4ef6. \u4ec0\u4e48\u662fRack? \u00b6 Rails \u5c31\u662f\u4e00\u4e2a Rack app. \u5b9e\u9645\u4e0a, \u57fa\u672c\u4e0a\u6240\u6709\u7684 Ruby web framework \u90fd\u662f rack app \u53c2\u8003 \u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981Rack rails\u7684\u751f\u547d\u5468\u671f? \u00b6 \u6570\u636e\u5e93\u914d\u7f6e \u00b6 sqlite3 \u00b6 # SQLite version 3.x # gem install sqlite3 # # Ensure the SQLite 3 gem is defined in your Gemfile # gem 'sqlite3' # default : &default adapter : sqlite3 pool : <%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %> timeout : 5000 development : << : *default database : db/development.sqlite3 # Warning: The database defined as \"test\" will be erased and # re-generated from your development database when you run \"rake\". # Do not set this db to the same as development or production. test : << : *default database : db/test.sqlite3 production : << : *default database : db/production.sqlite3 mysql \u00b6 # MySQL. Versions 5.1.10 and up are supported. # # Install the MySQL driver # gem install mysql2 # # Ensure the MySQL gem is defined in your Gemfile # gem 'mysql2' # # And be sure to use new-style password hashing: # https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html # default : &default adapter : mysql2 encoding : utf8 pool : <%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %> username : root password : host : localhost development : << : *default database : rails_app_mysql_development # Warning: The database defined as \"test\" will be erased and # re-generated from your development database when you run \"rake\". # Do not set this db to the same as development or production. test : << : *default database : rails_app_mysql_test # As with config/secrets.yml, you never want to store sensitive information, # like your database password, in your source code. If your source code is # ever seen by anyone, they now have access to your database. # # Instead, provide the password as a unix environment variable when you boot # the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database # for a full rundown on how to provide these environment variables in a # production deployment. # # On Heroku and other platform providers, you may have a full connection URL # available as an environment variable. For example: # # DATABASE_URL=\"mysql2://myuser:mypass@localhost/somedatabase\" # # You can use this database configuration with: # # production: # url: <%= ENV['DATABASE_URL'] %> # production : << : *default database : rails_app_mysql_production username : rails_app_mysql password : <%= ENV['RAILS_APP_MYSQL_DATABASE_PASSWORD'] %>","title":"Rails\u7b14\u8bb0"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#_1","text":"\u4ec5\u6709600\u884c\u4ee3\u7801\u7684\u7cbe\u7b80\u7248Rails\uff0c\u53ef\u4f5c\u4e3a\u5b66\u4e60Rails\u6e90\u7801\u7684\u5411\u5bfc https://github.com/xaqi/mini-rails https://rebuilding-rails.com/","title":"\u53c2\u8003"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#_2","text":"bundel exe \u5982\u4f55\u7701\u7565 \u521b\u5efa\u4e86sqlite,\u5982\u4f55\u5f80\u5176\u4ed6\u6570\u636e\u5e93\u8fc1\u79fb","title":"\u63d0\u51fa\u95ee\u9898(\u64cd\u4f5c)"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#_3","text":"RAILS_ENV=development environment is not defined in config/webpacker.yml, falling back to production environment \u279c build-an-api-rails- \u89e3\u51b3: # \u5148\u5b89\u88c5yarn brew install yarn # \u518d\u5b89\u88c5webpacker bundle exec rails webpacker:install","title":"\u9047\u5230\u7684\u95ee\u9898"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#gem","text":"gem sources -- add https : // gems . ruby - china . com / -- remove https : // rubygems . org / gem sources - l https : // gems . ruby - china . com # \u786e\u4fdd\u53ea\u6709 gems.ruby-china.com \u4f60\u53ef\u4ee5\u7528 Bundler \u7684 Gem \u6e90\u4ee3\u7801\u955c\u50cf\u547d\u4ee4 \u3002 $ bundle config mirror.https://rubygems.org https://gems.ruby-china.com \u8fd9\u6837\u4f60\u4e0d\u7528\u6539\u4f60\u7684 Gemfile \u7684 source\u3002 source 'https://rubygems.org/' gem 'rails', '4.2.5' ...","title":"Gem\u4f7f\u7528\u56fd\u5185\u955c\u50cf"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#rails-new-bundle-install","text":"\u65b0\u5efarails\u9879\u76ee\u65f6\uff0crails new\u8001\u662f\u5361\u5728bundle install\u90a3\u91cc. rails new my_app -- skip - bundle cd my_app bundle install -- local","title":"rails new \u65f6bundle install \u65f6\u95f4\u957f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#rails","text":"gem install rails - v 5 . 0 . 0 // gem install rails -- version = 5 . 0 . 0","title":"\u5b89\u88c5\u6307\u5b9a\u7248\u672c\u7684rails"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#rails_1","text":"// \u672c\u5730 Rails \u9ed8\u8ba4 5 . 0 . 2 \u7248\u672c $ gem list -- local rails ( 5 . 0 . 2 , 5 . 0 . 0 . 1 , 5 . 0 . 0 , 4 . 2 . 8 ) // \u4f7f\u7528 version \u751f\u6210\u6307\u5b9a version\u7684\u9879\u76ee rails version new application_name // \u4f8b\u5982\u751f\u6210 4 . 2 . 8 rails 4 . 2 . 8 new todolis \u751f\u6210\u9879\u76ee\u540e,\u6267\u884cbundle,\u7136\u540e\u5c31\u53ef\u4ee5\u4f7f\u7528rails(\u4e0d\u7528\u6307\u5b9a\u7248\u672c)\u4e86,\u901a\u8fc7bundle\u6765\u6307\u5b9a\u7248\u672c.","title":"\u751f\u6210\u6307\u5b9a\u7248\u672c\u7684Rails\u9879\u76ee"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#configru","text":"ru\u662frackup\u7684\u7f29\u5199. config.ru\u662f\u4e00\u4e2aRack-based Server\u542f\u52a8\u7684\u914d\u7f6e\u6587\u4ef6.","title":"config.ru \u4f5c\u7528\u662f\u4ec0\u4e48?"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#rack","text":"Rails \u5c31\u662f\u4e00\u4e2a Rack app. \u5b9e\u9645\u4e0a, \u57fa\u672c\u4e0a\u6240\u6709\u7684 Ruby web framework \u90fd\u662f rack app \u53c2\u8003 \u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981Rack","title":"\u4ec0\u4e48\u662fRack?"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#rails_2","text":"","title":"rails\u7684\u751f\u547d\u5468\u671f?"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#_4","text":"","title":"\u6570\u636e\u5e93\u914d\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#sqlite3","text":"# SQLite version 3.x # gem install sqlite3 # # Ensure the SQLite 3 gem is defined in your Gemfile # gem 'sqlite3' # default : &default adapter : sqlite3 pool : <%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %> timeout : 5000 development : << : *default database : db/development.sqlite3 # Warning: The database defined as \"test\" will be erased and # re-generated from your development database when you run \"rake\". # Do not set this db to the same as development or production. test : << : *default database : db/test.sqlite3 production : << : *default database : db/production.sqlite3","title":"sqlite3"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Rails%E7%AC%94%E8%AE%B0/#mysql","text":"# MySQL. Versions 5.1.10 and up are supported. # # Install the MySQL driver # gem install mysql2 # # Ensure the MySQL gem is defined in your Gemfile # gem 'mysql2' # # And be sure to use new-style password hashing: # https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html # default : &default adapter : mysql2 encoding : utf8 pool : <%= ENV.fetch(\"RAILS_MAX_THREADS\") { 5 } %> username : root password : host : localhost development : << : *default database : rails_app_mysql_development # Warning: The database defined as \"test\" will be erased and # re-generated from your development database when you run \"rake\". # Do not set this db to the same as development or production. test : << : *default database : rails_app_mysql_test # As with config/secrets.yml, you never want to store sensitive information, # like your database password, in your source code. If your source code is # ever seen by anyone, they now have access to your database. # # Instead, provide the password as a unix environment variable when you boot # the app. Read http://guides.rubyonrails.org/configuring.html#configuring-a-database # for a full rundown on how to provide these environment variables in a # production deployment. # # On Heroku and other platform providers, you may have a full connection URL # available as an environment variable. For example: # # DATABASE_URL=\"mysql2://myuser:mypass@localhost/somedatabase\" # # You can use this database configuration with: # # production: # url: <%= ENV['DATABASE_URL'] %> # production : << : *default database : rails_app_mysql_production username : rails_app_mysql password : <%= ENV['RAILS_APP_MYSQL_DATABASE_PASSWORD'] %>","title":"mysql"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","text":"Ruby\u7684\u4e00\u4e9b\u7b14\u8bb0 \u00b6 Ruby\u539f\u7406 \u00b6 \u4f7f\u7528Ripper\u5bf9ruby\u811a\u672c\u8fdb\u884c\u5206\u8bcd Yacc,\u89e3\u6790\u5668,ruby\u4f7f\u7528\u4e86\u66f4\u9ad8\u7ea7\u7684Bison,\u4ed6\u4eec\u4f7f\u7528\u4ee5 .y \u6269\u5c55\u540d\u7684\u8bed\u6cd5\u6587\u4ef6 \u63d0\u95ee\u9898 \u00b6 print pus\u533a\u522b \u51fd\u6570\u6216\u65b9\u6cd5\u7684\u6700\u540e\u4e00\u884c\u53ef\u4ee5\u76f4\u63a5\u5199\u503c\u4f5c\u4e3a\u8fd4\u56de\u503c,\u4f46\u7a0b\u5e8f\u6700\u540e\u4e00\u884c\u8981\u663e\u793a\u58f0\u660e.\u4e0e\u5176\u4ed6\u8bed\u8a00\u5982shell\u6df7\u7f16,\u8981\u7528print\u8f93\u51fa\u800c\u4e0d\u662f\u76f4\u63a5return def hello 'world' end print 'world' # return 'world' # shell\u65e0\u6cd5\u83b7\u53d6\u8fd9\u4e2a\u503c \u5bb9\u6613\u641e\u9519\u7684\u95ee\u9898 \u00b6 \u6b63\u5219\u7684\u987a\u5e8f \u00b6 str =~ obj \u2192 integer or nil \u5982\u679cobj\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219\u7528\u6b64\u6b63\u5219\u53bb\u5339\u914dstr\uff0c\u5339\u914d\u6210\u529f\u5219\u8fd4\u56de\u5339\u914d\u5230\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\uff0c\u5426\u5219\u8fd4\u56denil \u5982\u679cobj\u4e0d\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219\u8c03\u7528 obj.=~(str) \uff0c\u5373\u8c03\u7528obj\u7684 =~ \u65b9\u6cd5\uff0c\u7136\u540e\u4ee5str\u4f5c\u4e3a\u53c2\u6570 \u6ce8\uff1a str =~ reg \u548c reg =~ str\u662f\u4e0d\u540c\u7684 \uff0c\u5982\u679creg\u91cc\u6709\u547d\u540d\u6355\u83b7\uff0c\u5219\u53ea\u6709\u7b2c\u4e8c\u79cd\u624d\u4f1a\u5c06\u6355\u83b7\u5230\u7684\u5185\u5bb9\u8d4b\u503c\u5230\u5bf9\u5e94\u7684\u53d8\u91cf\u5f53\u4e2d\u3002 \u6240\u4ee5\u5728Ruby\u4e2d\uff0c\u5f3a\u70c8\u5efa\u8bae\u5c06reg\u653e\u5728\u524d\u9762\uff0c\u8fd9\u548cPerl\u7684\u4f4d\u7f6e\u987a\u5e8f\u662f\u76f8\u53cd\u7684 \u3002 \u5b57\u7b26\u4e32\u64cd\u4f5c \u00b6 \u66ff\u6362\u64cd\u4f5c \u00b6 gsub replace //\u5b8c\u6574\u66ff\u6362 \u53bb\u9664\u7a7a\u683c \u00b6 ltrip,rtrip \u53bb\u9664\u6362\u884c\u5206\u9694\u7b26 \u00b6 chop \u53bb\u9664\u7b2c\u4e00\u4e2a\u5b57\u7b26 \"hello\"[1..-1] \u4e00\u4e9b\u4e0d\u5e38\u89c1\u5230\u7684\u6280\u5de7 \u00b6 \u7c7b\u540d\u662f\u4e00\u4e2a\u5e38\u91cf Ruby \u91cc\u7684 %Q, %q, %W, %w, %x, %r, %s, %i \u00b6 %Q() \u00b6 \u62ec\u53f7\u91cc\u7684\u5b57\u7b26\u4e32\u5916\u9762\u52a0\u4e0a\u53cc\u5f15\u53f7,\u5e76\u4e14\u62ec\u53f7\u91cc\u7684\u53cc\u5f15\u53f7\u4e0d\u9700\u8981\u8f6c\u4e49 \u62ec\u53f7\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7684\u975e\u6570\u5b57\u7684\u6210\u5bf9\u7684\u7b26\u53f7\u8868\u793a. %Q[] %Q! ! %Q+ + \u90fd\u662f\u53ef\u4ee5\u7684,\u4e00\u822c\u5c31\u7528()\u5c31\u597d. %Q(He said: \"Good!\") => \"He said: \"Good!\"\" %q() \u00b6 \u5355\u5f15\u53f7,\u5176\u4ed6\u540c%Q %W \u8bed\u6cd5\u8fd1\u4f3c\u4e8e %Q , \u7528\u4e8e\u8868\u793a\u5176\u4e2d\u5143\u7d20\u88ab\u53cc\u5f15\u53f7\u62ec\u8d77\u7684\u6570\u7ec4. >> %W(#{foo} Bar Bar\\ with\\ space) => [\"Foo\", \"Bar\", \"Bar with space\"] %w \u00b6 \u7528\u4e8e\u8868\u793a\u5176\u4e2d\u5143\u7d20\u88ab\u5355\u5f15\u53f7\u62ec\u8d77\u7684\u6570\u7ec4. \u6bd4\u8f83\u5947\u602a\u7684\u662f \\ (\u659c\u6760\u7a7a\u683c)\u4f1a\u88ab\u8f6c\u5316\u6210``(\u7a7a\u683c), \u4f46\u662f\u5176\u4ed6\u7684\u5185\u5bb9\u4e0d\u4f1a. >> %w(a b c\\ d \\#e #{1}f) => [\"a\", \"b\", \"c d\", \"\\\\#e\", \"\\#{1}f\"] %x \u00b6 \u4f7f\u7528`\u65b9\u6cd5\u6267\u884c\u4e00\u6bb5shell\u811a\u672c\u5e76\u8fd4\u56de\u6807\u51c6\u8f93\u51fa\u5185\u5bb9. >> %x(echo foo:#{foo}) => \"foo:Foo\\n\" %r \u00b6 \u8bed\u6cd5\u8fd1\u4f3c\u4e8e %Q , \u7528\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f. >> %r(/home/#{foo}) => /\\/home\\/Foo/ %s \u00b6 \u7528\u4e8e\u8868\u793asymbol, \u4f46\u662f\u4e0d\u4f1a\u5bf9\u5176\u4e2d\u8868\u8fbe\u5f0f\u7b49\u5185\u5bb9\u8fdb\u884c\u8f6c\u5316 >> %s(foo) => :foo >> %s(foo bar) => :\"foo bar\" >> %s(#{foo} bar) => :\"\\#{foo} bar\" %i \u00b6 Ruby 2.0 \u4e4b\u540e\u5f15\u5165\u7684\u8bed\u6cd5, \u7528\u4e8e\u751f\u6210\u4e00\u4e2asymbol\u6570\u7ec4 2.0.0p247 :014 > %i(a b c) => [:a, :b, :c] Ruby Gem\u547d\u4ee4\u8be6\u89e3 \u00b6 // \u66f4\u65b0 Gem\u81ea\u8eab // \u6ce8\u610f\uff1a\u5728\u67d0\u4e9b linux\u53d1\u884c\u7248\u4e2d\u4e3a\u4e86\u7cfb\u7edf\u7a33\u5b9a\u6027\u6b64\u547d\u4ee4\u7981\u6b62\u6267\u884c gem update -- system // \u4ece Gem\u6e90\u5b89\u88c5gem\u5305 $ gem install [ gemname ] // \u4ece\u672c\u673a\u5b89\u88c5 gem\u5305 $ gem install - l [ gemname ]. gem // \u5b89\u88c5\u6307\u5b9a\u7248\u672c\u7684 gem\u5305 $ gem install [ gemname ] -- version =[ ver ] // \u66f4\u65b0\u6240\u6709\u5df2\u5b89\u88c5\u7684 gem\u5305 $ gem update // \u66f4\u65b0\u6307\u5b9a\u7684 gem\u5305 // \u6ce8\u610f\uff1a gem update [ gemname ] \u4e0d\u4f1a\u5347\u7ea7\u65e7\u7248\u672c\u7684\u5305\uff0c\u6b64\u65f6\u4f60\u53ef\u4ee5\u4f7f\u7528 gem install [ gemname ] -- version =[ ver ] \u4ee3\u66ff $ gem update [ gemname ] // \u5220\u9664\u6307\u5b9a\u7684 gem\u5305 \uff0c\u6ce8\u610f\u6b64\u547d\u4ee4\u5c06\u5220\u9664\u6240\u6709\u5df2\u5b89\u88c5\u7684\u7248\u672c $ gem uninstall [ gemname ] // \u5220\u9664\u67d0\u6307\u5b9a\u7248\u672c gem $ gem uninstall [ gemname ] -- version =[ ver ] // \u67e5\u770b\u672c\u673a\u5df2\u5b89\u88c5\u7684\u6240\u6709 gem\u5305 $ gem list [-- local ] inheritances & extend & include \u7684\u533a\u522b? \u00b6 inheritance : \u5b50\u7c7b\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u5c5e\u6027\uff0c\u5305\u62ec\u8bbf\u95ee\u8fd9\u4e9b\u5c5e\u6027\u7684\u6743\u9650 (public/protected/private)\uff0c\u4e0e\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e0d\u540c\u7684\u662f\uff0cRuby \u80fd\u591f\u8bbf\u95ee\u7236\u7c7b\u7684\u79c1\u6709\u65b9\u6cd5\uff0c\u751a\u81f3\u8fd8\u53ef\u4ee5\u628a\u7236\u7c7b\u7684\u79c1\u6709\u65b9\u6cd5\u8f6c\u5316\u4e3a\u516c\u6709\u65b9\u6cd5\u3002 include : \u5728\u6307\u5b9a\u7684\u7c7b\u4e2d mixed in \u6a21\u5757 (module) \u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u4f5c\u4e3a\u8be5\u7c7b\u7684\u5b9e\u4f8b\u65b9\u6cd5\u3002 include model \u7b49\u540c\u4e8e\u628a\u6a21\u5757\u4e2d\u7684\u4ee3\u7801\u590d\u5236\u5230\u6240\u5728\u7c7b\u4e2d\uff0c\u51cf\u5c11\u4ee3\u7801\u91cd\u590d\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u7a81\u7834\u4e86 Ruby \u53ea\u5141\u8bb8\u5355\u7ee7\u627f\u7684\u9650\u5236\u3002 extend : \u628a\u6a21\u5757\u4e2d\u7684\u65b9\u6cd5\u5f15\u5165\u5230\u5f53\u524d\u7c7b\uff0c\u5e76\u4f5c\u4e3a\u7c7b\u65b9\u6cd5\u3002 Object#extend \u00b6 module MyModule def my_method 'hello' end end obj = Object . new obj . extend MyModule obj . my_method #=> \"hello\" class MyClass extend MyModule end MyClass . my_method #=> \"hello\" Ruby \u4e2d\u7684 module_function \u548c extend self\u5f02\u540c? \u00b6 module m extend self #\u5199\u5728\u65b9\u6cd5\u5b9a\u4e49\u4e0a\u4e00\u884c def hello end end module n def hello end module_function :hello end module_function \u6539\u53d8\u6a21\u5757\u5185\u539f\u65b9\u6cd5\u7684 public/private \u5c5e\u6027\u5e76\u8bbe\u7f6e\u6210\u6a21\u5757\u65b9\u6cd5,\u80fd\u591f\u901a\u8fc7 module_name.method_name \u7684\u65b9\u6cd5\u8c03\u7528,\u56e0\u4e3a\u6539\u53d8\u4e86public/private\u5c5e\u6027,\u6240\u4ee5include\u8fdb\u67d0\u4e2a\u7c7b\u7684\u65f6\u5019,\u8fd9\u4e2a\u65b9\u6cd5\u4e5f\u5c31\u4e0d\u518d\u53ef\u89c1(\u7528)\u4e86\u3002 extend self \u5c31\u662f\u5728\u6a21\u5757\u5185\u81ea\u7ee7\u627f\uff0c\u4e0d\u6539\u53d8\u6a21\u5757\u4e2d\u65b9\u6cd5\u7684 public/private \u5c5e\u6027\uff0c\u540c\u6837\u4e5f\u80fd\u901a\u8fc7 module_name.public_method \u7684\u65b9\u6cd5\u8c03\u7528\u3002inlude\u8fdb\u67d0\u4e2a\u7c7b\u65f6\u5f53\u5b9e\u4f8b\u65b9\u6cd5\u4f7f\u7528. \u4e0d\u786e\u5b9a\u6a21\u5757\u662f\u5426\u72ec\u7acb\u4f7f\u7528\u6216\u662fmixin\u7684\u60c5\u51b5\u4e0b,\u60f3\u8981\u76f4\u63a5\u4ee5module.method\u65b9\u5f0f\u4f7f\u7528\u6a21\u5757\u5185\u7684\u65b9\u6cd5,\u5efa\u8bae\u4f7f\u7528extend self. \u8fd9\u4e00\u70b9\u5f85\u786e\u8ba4 module_function \u5173\u952e\u5b57? \u00b6 module Utils #https://github.com/candlerb/webrick/blob/master/lib/webrick/utils.rb def create_listeners #sockets end module_function :create_listeners end \u7528\u4e8e\u5bf9module\u7684\u65b9\u6cd5\u5bf9\u5916\u8fdb\u884c\u516c\u5f00,\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528. Ex : Utils.create_listeners \u5bf9\u4e8emixin,\u5219\u4e0d\u5fc5\u4f7f\u7528. \u6539\u53d8\u4e86\u65b9\u6cd5\u7684public/private\u5c5e\u6027, include\u8fdb\u4e86\u7c7b,\u8fd9\u4e2a\u65b9\u6cd5\u4e5f\u53d8\u4e3a\u4e0d\u53ef\u89c1, \u614e\u7528 class << self class << obj \u662f\u4ec0\u4e48\u610f\u601d? \u00b6 a = 'foo' class << a def inspect '\"bar\"' end end a . inspect # => \"bar\" a = 'foo' # new object, new singleton class a . inspect # => \"foo\" \u6253\u5f00a\u7684\u5355\u4f8b\u7c7b,\u53ef\u4ee5\u5728a\u7684\u5bf9\u8c61\u4e2d\u5b9a\u4e49\u65b0\u7684\u65b9\u6cd5. \u8fd9\u91cc\u7684self\u662f\u4e0a\u4e0b\u6587\u4e2d\u7684\u5bf9\u8c61. \u6ce8\u610f,\u8fd9\u91cc\u7684\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u662f\u7c7b,\u7c7b\u5b9a\u4e49\u7684\u7c7b\u672c\u8eab\u4e5f\u662f\u5bf9\u8c61 \u5982: module A class << self end end \u5b9e\u4f8b\u53d8\u91cf\u5e76\u4e0d\u662f \u5b9a\u4e49 \u51fa\u6765\u7684 \u00b6 class A def m @m = \"hello\" end end \u5982\u679c\u6ca1\u6709\u8fd0\u884c m\u7684\u65b9\u6cd5,\u90a3\u4e2a@m\u662f\u4e0d\u5b58\u5728\u7684. \u8fd9\u8ddfjava\u662f\u5b8c\u5168\u4e0d\u540c\u7684 \u5bf9\u8c61\u662f\u53d8\u91cf,\u7c7b\u540d\u662f\u5e38\u91cf \u00b6 obj1\u662f\u53d8\u91cf,MyClass\u662f\u5e38\u91cf \u5176\u5b9e\u90fd\u662f\u5bf9\u8c61,\u8fd9\u4e2a\u8ddfjava\u91cc\u7684\u7c7b\u548c\u5bf9\u8c61\u7684\u6982\u5ff5\u8fd8\u662f\u6709\u4e9b\u533a\u522b\u7684.java\u91cc\u7684\u5bf9\u8c61\u548c\u7c7b\u4ece\u903b\u8f91\u4e0a\u66f4\u50cf\u662f\u6a21\u5177\u548c\u4ea7\u54c1\u5173\u7cfb \u4efb\u4f55\u5927\u5b9d\u5b57\u6bcd\u5f00\u5934\u7684\u90fd\u662f\u5e38\u91cf \u548cJava,C#\u4e2d\u7684\u7c7b\u76f8\u6bd4\u6709\u4ec0\u4e48\u533a\u522b \u00b6 \u5728java\u548cc#\u4e2d,\u7c7b\u4e5f\u662fClass\u7684\u5b9e\u4f8b,\u4f46\u662fJava\u4e2d\u7684\u7c7b\u548c\u5bf9\u8c61\u6709\u5f88\u5927\u533a\u522b \u4e0d\u80fd\u8fd0\u884c\u65f6\u521b\u5efa\u7c7b \u4e0d\u80fd\u8fd0\u884c\u65f6\u4fee\u6539\u7c7b class(\u7c7bMyClass)\u66f4\u50cf\u662f\u7c7b\u7684\u63cf\u8ff0\u7b26,\u800c\u4e0d\u662f \u771f\u6b63 \u7684\u7c7b,\u7c7b\u4f3c\u4e8eJavaFile\u7c7b\u4e0d\u8fc7\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26,\u800c\u4e0d\u662f\u6587\u4ef6\u672c\u8eab \u521d\u5b66\u65f6\u7684\u7c7b\u6bd4\u903b\u8f91\u5bf9\u4e8e\u7c7b\u548c\u5b9e\u4f8b\u7684\u6df1\u5165\u7406\u89e3\u662f\u6709\u969c\u788d\u7684. \u5982\u4f55\u9009\u62e9Class\u548cModule \u00b6 \u547d\u540d\u7a7a\u95f4\u4f7f\u7528\u65f6\u4f7f\u7528module \u5e0c\u671b\u5b9e\u4f8b\u6216\u662f\u7ee7\u627f,\u4f7f\u7528\u7c7b ::\u662f\u4ec0\u4e48 \u00b6 module M Y = 'y const' class C :: M :: Y # \u8868\u793a\u6839\u8def\u5f84 y const end end \u65b9\u6cd5\u662f\u600e\u4e48\u6267\u884c\u7684 \u00b6 \u5bf9\u8c61\u4e2d\u627e\u5bf9\u8c61\u672c\u8eab\u5b9a\u4e49\u7684\u65b9\u6cd5(\u8f83\u5c11) \u5728\u5bf9\u8c61\u7684\u7c7b\u5b9a\u4e49\u4e2d\u627e\u65b9\u6cd5,\u7136\u540e\u4f9d\u6b21\u662f\u8fd9\u4e2a\u7c7b\u7c7bmxin\u7684\u6a21\u5757( \u8fd9\u4e2a\u5bb9\u6613\u5ffd\u7565 ) \u7c7b\u7684superclass\u4e2d\u5bfb\u627e,\u5176\u4e2d\u5305\u62ec\u5f71\u5b50\u7c7b(\u4ee3\u7406\u7c7b/\u533f\u540d\u7c7beigenclass) Eigenclasses\u4f4d\u4e8e\u65b9\u6cd5\u67e5\u627e\u7684\u6700\u5e95\u7aef\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c \u6700\u5148\u5f00\u59cb\u65b9\u6cd5\u67e5\u627e\u7684\u5730\u65b9\u5c31\u662f\u8fd9\u4e2a\u5bf9\u8c61\u81ea\u5df1\u7684Eigenclass. \u9634\u5f71\u7684\u90e8\u5206\u662f\u5f71\u5b50\u7c7b self\u662f\u4ec0\u4e48 \u00b6 \u4efb\u4f55\u65f6\u523b,\u53ea\u8981\u8c03\u7528 \u67d0\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5,\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u6210\u4e3aself,\u5982\u679c\u6ca1\u6709\u8c03\u7528\u65b9\u6cd5self\u662f\u4ec0\u4e48? self # => main self . class # => Object ruby\u7a0b\u5e8f\u8fd0\u884c\u65f6,\u89e3\u91ca\u5668\u4f1a\u521b\u5efa\u4e00\u4e2amain\u7684\u5bf9\u8c61,\u8fd9\u4e2a\u5bf9\u8c61\u88ab\u79f0\u4e3a\u9876\u7ea7\u4e0a\u4e0b\u6587.\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019self\u5c31\u662f\u8fd9\u4e2amain \u5f71\u5b50\u7c7b/\u533f\u540d\u7c7b,\u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5 \u00b6 # Ruby\u5143\u7a0b\u5e8f\u5c31\u662f\u5173\u4e8eSelf \uff1aIt\u2019s All About the Self # \u6240\u6709ruby\u4ee3\u7801\u5728ruby\u4ee3\u7801\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d,\u662f\u6ca1\u6709\u6ca1\u6709\u5355\u72ec\u7684\u7f16\u8bd1\u6216\u8fd0\u884c\u9636\u6bb5. \u5728Ruby\u4e2d\uff0c\u6bcf\u4e00\u884c\u4ee3\u7801\u662f\u5bf9\u4e00\u4e2a\u7279\u5b9a\u5bf9\u8c61\u7684\u6267\u884c\u7684 =begin \u4e00\u4e2a\u533f\u540d\u7c7b\uff08Anonymous Class\uff09\u4e5f\u88ab\u79f0\u4f5c\u5355\u4f8b\u7c7b\uff08Singleton Class\uff09\uff0c\u7279\u5f81\u7c7b\uff08Eigenclass\uff09\uff0c\u9b3c\u9b42\u7c7b\uff08Ghost Class\uff09\uff0c \u5143\u7c7b\uff08Metaclass\uff09\u6216\u8005 uniclass\u8bd1\u540d\u8bf7\u6c42. Eigenclass: an object\u2019s own class Metaclass: the class of a class =end # \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u5b83\u81ea\u5df1\u7684\u72ec\u6709\u7684\uff0c\u9690\u85cf\u7684\u7c7b\u3002\u5b83\u88ab\u53eb\u505a\uff1a \u90a3\u4e2a\u5bf9\u8c61\u7684 eigen-class. =begin eigenclass\u7684\u4f5c\u7528\u57df\uff1a class << an_object # your code that end \u5982\u679c\u4f60\u60f3\u5f97\u5230\u4e00\u4e2aeigenclass\u7684\u5f15\u7528\uff0c\u4f60\u53ef\u4ee5\u5728\u5916\u90e8\u57df\u8fd4\u56de\u4e00\u4e2aself\uff0c\u4f8b\u5982\uff1a obj = Object.new eigenclass = class << obj self end > eigenclass => #<Class:#<Object:0x2bccd0>> > eigenclass.class => Class =end # \u4e00\u4e2a\u5bf9\u8c61\u7684Eigenclass \u662f\u5176\u5355\u4f8b\u65b9\u6cd5\u4fdd\u5b58\u7684\u5730\u65b9 =begin Eigenclasses and instance_eval() instance_eval():\u6539\u53d8\u7684\u662fthe current class\u7c7b\u7684Eigenclass. Eigenclasses and Method lookup\uff08lookup\u5177\u4f53\u8be6\u89c1\uff1a\u65b9\u6cd5\u8c03\u7528\uff09 Eigenclasses\u4f4d\u4e8e\u65b9\u6cd5\u67e5\u627e\u7684\u6700\u5e95\u7aef\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c \u6700\u5148\u5f00\u59cb\u65b9\u6cd5\u67e5\u627e\u7684\u5730\u65b9\u5c31\u662f\u8fd9\u4e2a\u5bf9\u8c61\u81ea\u5df1\u7684Eigenclass. =end # \u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u4e00\u4e0b\u4e94\u79cd\u65b9\u5f0f\uff0c\u521b\u5efa\u7c7b\u65b9\u6cd5\uff1a #1 class Person def self . ni_ming_lei \"this is a ni_ming_lei\" end end #2 class Person class << self def ni_ming_lei \"this is a ni_ming_lei\" end end end #3 class << Person def ni_ming_lei \"this is a ni_ming_lei\" end end #4 Person . instance_eval do def ni_ming_lei \"this is a ni_ming_lei\" end end # 5 class Person end def Person . ni_ming_lei \"this is a ni_ming_lei\" end # \u65b9\u6cd5\u8c03\u7528\uff1a p Person . ni_ming_lei # =>\"this is a ni_ming_lei\" # \u81f3\u4e8e\u4f7f\u7528\u90a3\u79cd\u770b\u81ea\u5df1\u7684\u4e60\u60ef\u4e86~~~ # \u6211\u4eec\u77e5\u9053eigenclass\u4e5f\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6545\u800c\u4ed6\u4e5f\u6709\u81ea\u5df1\u7684eigenclass\u3002\u8c8c\u4f3c\u6781\u4e3a\u5c11\u89c1\u3002\u3002\u3002\u3002 # \u7c7b\u7684\u5b9e\u4f8b\u65b9\u6cd5\u7684\u4e66\u5199 class Per def name \"Test\" end end Per . class_eval do def name \"Matz\" end end p Per . new . name #>\"Matz\" \u7c7b\u548c\u5bf9\u8c61\u7684\u7406\u89e3 \u00b6 \u8ddfjava\u4e0d\u540c,java\u91cc\u7684\u7c7b\u5c31\u662f\u7c7b,\u5bf9\u8c61\u5c31\u662f\u7c7b\u7684\u5b9e\u4f8b. ruby\u4e2d\u7684\u6240\u6709\u4e00\u5207\u90fd\u662f\u5bf9\u8c61,\u4f46\u6709\u65f6\u5019\u9700\u8981\u8bf4\u660e\u7c7b\u548c\u5b9e\u4f8b\u7684\u8fd9\u79cd\u5173\u7cfb\u65f6,\u5c31\u9700\u8981\u660e\u786e\u4e0a\u4e0b\u6587\u7684\u6982\u5ff5 \u4e00\u822c\u60c5\u51b5\u4e0b\u6240\u8bf4\u7684\u7c7b\u548c\u5b9e\u4f8b,\u8ddfjava\u4e2d\u7684\u6ca1\u6709\u592a\u5927\u5dee\u522b \u5728\u8bf4\u7c7b\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019,\u8fd9\u4e2a\u65f6\u5019\u7c7b\u5c31\u662f\u5bf9\u8c61,Class\u5bf9\u5e94\u7684\u5c31\u662f\u7c7b\u4e86 \u6709\u70b9\u5b9a\u4e49\u7684\u4e0a\u9012\u5f52\u611f\u89c9,\u5f53\u7136\u8fd9\u4e48\u8bf4\u4e5f\u4e0d\u4e00\u5b9a\u4e25\u8c28 \u65b9\u6cd5\u8c03\u7528\u7684\u672c\u8d28 \u00b6 irb ( main ): 01 8 : 0 > 1 + 1 => 2 irb ( main ): 01 9 : 0 > 1 . send ( :+ , 1 ) => 2 irb ( main ): 020 : 0 > \u4f5c\u7528\u57df \u00b6 ruby\u4e2d\u7684\u4f5c\u7528\u57df\u4e0d\u50cfjava\u4e2d\u7684inner scope\u6216\u662f\u5757\u4f5c\u7528\u57df\u7684\u6982\u5ff5,\u5185\u90e8\u53ef\u4ee5\u770b\u5230\u5916\u5c42\u7684\u53d8\u91cf class A { int i void m (){ // \u8fd9\u91cc\u662f\u53ef\u4ee5\u770b\u5230i\u7684 } } ruby\u7684 class,module,def\u90fd\u662f\u4f5c\u7528\u57df\u7684\u5206\u9694\u95e8 module A v1 #\u5c40\u90e8\u4ea6\u662f\u8fd9\u91cc\u770b\u5230\u6709v1 class B v2 #\u8fd9\u91cc\u53ea\u770b\u5230v2 def c v3 #\u8fd9\u91cc\u53ea\u770b\u5230v3,\u770b\u4e0d\u5230v2 end end #\u8fd9\u91cc\u53ea\u770b\u5230v1 end #\u5982\u679c\u60f3\u7a7f\u8d8a\u8fd9\u4e2a\u95e8,\u4e0d\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e09\u4e2a\u5173\u952e\u5b57(\u4f7f\u7528\u95ed\u5305\u7684\u65b9\u5f0f\u6765) module A v1 B = Class . new do v2 #\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230v1 def c v3 #\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230 v1,v2 end instance_eval & instance_exec \u00b6 \u53ef\u4ee5\u6241\u5e73\u5316\u4f5c\u7528\u57df,\u8bf4\u4eba\u8bdd\u5c31\u662f\u53ef\u4ee5\u5728\u4ee3\u7801\u5757\u91cc\u8bbf\u95ee\u5bf9\u8c61\u7684\u4f5c\u7528\u57df\u5185(\u79c1\u6709)\u53d8\u91cf\u4e86 class C def initialize @x = 1 end end c = C . new c . x # Error #\u5982\u4f55\u8bbf\u95eec\u7684@x, @x\u662f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7684 c.x c . instance_eval { @x #\u8fd9\u91cc\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4e86 } class_eval \u00b6 class_eval\u5b9e\u9645\u4e0a\u662f\u91cd\u65b0\u6253\u5f00\u4e86\u7c7b,\u4e0einstance_eval\u53ea\u6539\u53d8self\u4e0d\u540c,class_eval \u4f1a\u540c\u65f6\u6539\u53d8self\u548c\u5f53\u524d\u7c7b. \u4ec0\u4e48\u65f6\u5019\u5f53\u524d\u7c7b?\u53c2\u8003\u4e0b\u6587 \u4ec0\u4e48\u662f\u5f53\u524d\u7c7b \u00b6 \u65e0\u8bba\u5728ruby\u7a0b\u5e8f\u7684\u90a3\u4e2a\u4f4d\u7f6e,\u90fd\u6709\u4e00\u4e2a\u53ebself\u7684\u5f53\u524d\u5bf9\u8c61, \u540c\u65f6,\u4e5f\u603b\u6709\u4e00\u4e2a\u5f53\u524d\u7c7b(\u6a21\u5757)\u5b58\u5728,\u5982\u679c\u5728\u4e00\u4e2a\u65b9\u6cd5\u91cc,\u8be5\u65b9\u6cd5\u6210\u4e3a\u5f53\u524d\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5. \u5757\u4e0d\u662f\u5bf9\u8c61 \u00b6 \u5757\u4e0d\u662f\u5bf9\u8c61,\u5982\u4f55\u4fdd\u5b58\u4f20\u9012\u5462? \u9700\u8981\u901a\u8fc7 Proc\u5c06\u5757\u8f6c\u6362\u6210\u5bf9\u8c61,lambda\u4e5f\u662f\u540c\u7406 inc = Proc . new { | x | x + 1 } inc . call ( 2 ) #=> 3 proc & lambda \u00b6 Proc.new() lambda() & \u8fd9\u4e09\u79cd\u65b9\u5f0f\u521b\u5efa\u7684\u90fd\u662fProc\u5bf9\u8c61,\u53ea\u662f\u4ed6\u4eec\u6709\u4e9b\u533a\u522b,\u5f88\u7ec6\u5fae\u7684\u533a\u522b\u4f46\u5f88\u91cd\u8981,\u6240\u4ee5\u7528\u4e0d\u540c\u7684\u540d\u79f0\u6765\u8868\u793a. return\u5728Proc\u548cLambda\u4e2d\u7684\u533a\u522b \u5728lambda\u4e2dreturn\u8868\u793a\u4ece\u8fd9\u4e2alambda\u8fd4\u56de \u5728Proc\u4e2d\u8868\u793a\u4ece\u5b9a\u4e49proc\u7684\u4f5c\u7528\u57df\u4e2d\u8fd4\u56de def d p = Proc . new { return 10 } r = p . call # \u76f4\u63a5\u4ece\u5b9a\u4e49proc\u4f5c\u7528\u57df\u4e5f\u5c31\u662f\u65b9\u6cd5d\u4e2d\u8fd4\u56de return r * 2 #\u4e0d\u80fd\u6267\u884c\u5230\u8fd9 end puts d #=> 10 \u4e0d\u662f20 \u5982\u679c\u4e00\u5b9a\u8981\u7528\u53ef\u4ee5\u6539\u6210\u7528\u663e\u5f0freuturn\u65b9\u5f0f(\u5c31\u662f\u4e0d\u5199return) def d p = Proc . new { 10 } #\u663e\u793areturn r = p . call return r * 2 end puts d #=> 20 \u53c2\u6570 lambda\u5bf9\u53c2\u6570\u7684\u68c0\u67e5\u4e25\u683c proc\u4f1a\u81ea\u5df1\u8c03\u6574,\u8fd9\u662f\u95ee\u9898\u7684\u6839\u6e90 p = Proc . new { | a , b | [ a , b ] } p . call ( 1 , 2 , 3 ) #=> [1,2] p . call ( 1 ) #=> [1,nil] \u5efa\u8bae\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f7f\u7528**lambda** \u5728ruby1.8\u4e2d Kernel#proc()\u662fKernel#lambda() \u7684\u522b\u540d,\u7a0b\u5e8f\u4e0d\u65ad\u6297\u8bae,\u57281.9\u7684\u7248\u672c\u4e2dproc()\u53d8\u6210Proc.new()\u7684\u522b\u540d. lambda\u7684\u5b9a\u4e49\u65b9\u5f0f p = -> ( x ){ x + 1 } p = lambda { | x | x + 1 } \u7c7b\u5b8f Class Macro \u00b6 class A attr_accessor :my_attribute end obj = A . new obj . my_attribute = 'x' obj . my_attribute # => \"x\" \u5b9e\u73b0\u81ea\u5df1\u7684\u7c7b\u5b8f \u5f53\u6a21\u5757\u88ab\u5f15\u5165\u7684\u65f6\u5019\u8c03\u7528 self.included\u56de\u8c03 \u56de\u8c03\u4e2d\u5c06\u5f15\u5165\u8be5\u6a21\u5757\u7684\u7c7b\u8fdb\u884cextend\u6269\u5c55(\u7c7b\u65b9\u6cd5),\u5c31\u662f\u5c06ClassMethods\u6269\u5c55\u4e3aMyClass\u7684\u7c7b\u65b9\u6cd5,\u8fd9\u6837my_attr\u5c31\u53d8\u6210\u4e86MyClass\u7684\u7c7b\u65b9\u6cd5 \u5728MyClass\u91cc\u5c31\u53ef\u4ee5\u4f7f\u7528 my_attr :abc \u8fd9\u4e2a\u7c7b\u65b9\u6cd5\u6765\u8fdb\u884c\u65b9\u6cd5\u5b9a\u4e49\u4e86 module MyModule def self . included ( base ) #\u5f53\u6a21\u5757\u88ab\u5f15\u5165\u7684\u65f6\u5019\u56de\u8c03,base\u662f\u5f15\u5165\u8be5\u6a21\u5757\u7684\u6a21\u5757(\u7c7b) base . extend ClassMethods base . class_eval do def my_instance_method end end end module ClassMethods def my_attr ( str , & block ) #block define_method ( str ) do @str #instance_variable_set(\"@#{str}\", value) end define_method ( \" #{ str } =\" ) do | value | @str = value end end end end class MyClass include MyModule my_attr :abc end obj = MyClass . new obj . abc = '10' puts obj . abc #10 # part 2 puts MyClass . instance_methods # [ my_instance_method, abc, abc=] \u65b9\u6cd5\u522b\u540d&\u73af\u7ed5\u522b\u540d \u00b6 \u65b9\u6cd5\u522b\u540d class MyClass def my_method 'hello' end alias :m :my_method end MyClass . new . m #=> \"hello\" \u73af\u7ed5\u522b\u540d(around alias) \u5148\u770b\u4ee3\u7801 class String alias :real_length :length def length real_length > 5 ? 'long' : 'short' end end \"hello,world\" . length #=> \"long\" \"hello,world\" . real_length #=> 13 alias \u628a\u539f\u6765\u7684length \u6620\u5c04\u7ed1\u5b9a\u5230 real_length\u4e0a,\u540e\u9762\u7684def\u5b9a\u4e49\u7684length\u5df2\u7ecf\u8ddf\u4e0a\u9762\u7684alias\u4e2d\u7684length\u65e0\u5173\u4e86. \u65b0\u5b9a\u4e49\u7684\u65b9\u6cd5length\u4e2d\u53ef\u4ee5\u8c03\u7528real_length(\u5176\u5b9e\u5c31\u662f\u539f\u6765\u7684length). \u8fd9\u6837\u7684\u65b9\u5f0f\u9002\u5408\u7528\u6765\u4e3a\u65b9\u6cd5\u6253\u8865\u4e01. \u901a\u5e38\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u662f\u901a\u8fc7\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u6765\u8fdb\u884c,\u53ef\u4f5c\u7c7b\u6bd4\u7406\u89e3. **\u91cd\u8981:**\u73af\u7ed5\u522b\u540d\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u8981\u91cd\u5b9a\u4e49\u539f\u6709\u7684\u65b9\u6cd5,\u5426\u5219\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u98ce\u9669 \u5982\u4f55\u4e0d\u77e5\u9053\u7c7b\u7684\u540d\u79f0\u5728\u7c7b\u91cc\u589e\u52a0\u65b9\u6cd5\u5b9a\u4e49 \u00b6 class_eval() def add_method_to ( a_class ) a_class . class_eval do def m 'hello' end end end \u7c7b\u53d8\u91cf\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 \u00b6 @@v @@v = 1 class MyClass @@v = 2 end #@@v=> 2 \u7c7b\u53d8\u91cf\u6709\u70b9\u50cfjava\u662f\u7684\u9759\u6001\u53d8\u91cf,\u4f46\u662f\u4e0d\u80fd\u7b49\u540c\u7406\u89e3. \u7c7b\u53d8\u91cf\u4e25\u683c\u610f\u4e49\u4e0a\u5e76\u4e0d\u5c5e\u4e8e\u7c7b,\u5c5e\u4e8e\u7c7b\u4f53\u7cfb\u7ed3\u6784.\u4e0a\u9762\u7684@@V\u5b9a\u4e49\u4e8emain\u7684\u4e0a\u4e0b\u6587,\u5b83\u5c5e\u4e8emain\u7c7b\u7684Object\u7684,\u4e5f\u5c5e\u4e8eObject\u7684\u6240\u6709\u540e\u4ee3.\u6709\u70b9\u50cf\u5168\u5c40\u53d8\u91cf\u4e86. \u8fd8\u662f\u4e0d\u8981\u4f7f\u7528\u4e3a\u597d \u5355\u4ef6\u65b9\u6cd5 \u00b6 ruby\u4e2d,\u5bf9\u8c61\u7684\u7c7b\u578b\u5e76\u4e0d\u4e25\u683c\u4e0e\u5b83\u7684\u7c7b\u76f8\u5173,\u5b83\u7684 \u7c7b\u578b \u53ea\u662f\u4e00\u7ec4\u5b83\u80fd\u54cd\u5e94\u7684\u65b9\u6cd5\u800c\u5df2. \u8fd9\u4e00\u70b9\u8ddfGO\u8bed\u8a00\u7684\u63a5\u53e3\u8fd8\u662f\u5f88\u7c7b\u4f3c\u7684. \u7c7b\u65b9\u6cd5\u7684\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u7c7b\u7684\u5355\u4ef6\u65b9\u6cd5. \u5355\u4ef6\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\u7684\u5b9a\u4e49\u662f\u4e00\u6837\u7684. \u5bf9\u8c61\u7684\u5355\u4ef6\u65b9\u6cd5,\u5c31\u662f\u53ea\u5728\u8fd9\u4e2a\u5bf9\u8c61\u4e0a\u5b9a\u4e49\u7684\u65b9\u6cd5,\u53ea\u4f5c\u7528\u4e8e\u8fd9\u4e2a\u5bf9\u8c61 \u7c7b\u7684\u5355\u4ef6\u65b9\u6cd5,\u53ea\u662f\u7c7b\u8fd9\u4e2a\u5bf9\u8c61\u4e0a\u5b9a\u4e49\u7684, public ,protected, private \u00b6 \u9996\u5148\u6765\u770b\u8fd9\u6bb5\u4ee3\u7801\uff1a class Test def method_public puts \"In method_public\" end def method_protected puts \"In method_protected\" end def method_private puts \"In method_private\" end protected :method_protected private :method_private end test = Test . new \u5206\u522b\u5c1d\u8bd5\uff1a test . method_public \u8f93\u51fa\uff1a In method_public test . method_protected \u8f93\u51fa\uff1a test . rb : 20 : protected method `method_protected' called for #<Test:0x3756068> (NoMethodError) test.method_private \u8f93\u51fa\uff1atest.rb:21: private method ` method_private ' called for #<Test:0x346070> (NoMethodError) \u53ef\u77e5\uff1apublic\u80fd\u88ab\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528\uff0cprotected\u548cprivate\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5bf9\u8c61\u76f4\u63a5\u8c03\u7528\u3002 \u6539\u5199\u4ee3\u7801\uff1a class Test def method_public puts \"In method_public\" end def method_protected puts \"In method_protected\" end def method_private puts \"In method_private\" end protected :method_protected private :method_private def access_method puts method_public puts method_protected puts method_private end end test = Test . new test . access_method \u8f93\u51fa\uff1a In method_public nil In method_protected nil In method_private nil \u53ef\u77e5\uff1a\u4e09\u79cd\u65b9\u5f0f\u90fd\u80fd\u88ab\u5b9a\u4e49\u5b83\u4eec\u7684\u7c7b\u8bbf\u95ee\u3002 \u6539\u5199\u4ee3\u7801\uff1a class Test def method_public puts \"In method_public\" end def method_protected puts \"In method_protected\" end def method_private puts \"In method_private\" end protected :method_protected private :method_private end class SonTest < Test def access_method puts method_public puts method_protected puts method_private end end test = SonTest . new test . access_method \u8f93\u51fa\uff1a In method_public nil In method_protected nil In method_private nil \u53ef\u77e5\uff1a\u4e09\u79cd\u65b9\u6cd5\u90fd\u80fd\u88ab\u5b9a\u4e49\u5b83\u4eec\u7684\u7c7b\u7684\u5b50\u7c7b\u8bbf\u95ee\u3002 \u6539\u5199\u4ee3\u7801\uff1a class Test def method_public puts \"In method_public\" end def method_protected puts \"In method_protected\" end def method_private puts \"In method_private\" end protected :method_protected private :method_private def call_method_protected ( testmember ) puts testmember . method_protected end def call_method_private ( testmember ) puts testmember . method_private end end test1 = Test . new test2 = Test . new \u5206\u522b\u5c1d\u8bd5\uff1a test2 . call_method_protected ( test1 ) \u8f93\u51fa\uff1a In method_protected nil test2 . call_method_private ( test1 ) \u8f93\u51fa\uff1a test . rb : 21 :in `call_method_private': private method ` method_private ' called for #<Test:0x36c5af4> (NoMethodError) \u53ef\u77e5\uff1aprotected\u65b9\u6cd5\u53ef\u4ee5\u88ab\u5176\u4ed6\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8bbf\u95ee\uff0c\u800cprivate\u65b9\u6cd5\u53ea\u80fd\u88ab\u81ea\u5df1\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8bbf\u95ee\u3002 \u603b\u7ed3\u4e00\u4e0b public\u65b9\u6cd5\u53ef\u4ee5\u88ab\u5b9a\u4e49\u5b83\u7684\u7c7b\u548c\u5b50\u7c7b\u8bbf\u95ee\uff0c\u5e76\u53ef\u4ee5\u88ab\u7c7b\u548c\u5b50\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528\uff1b protected\u65b9\u6cd5\u53ef\u4ee5\u88ab\u5b9a\u4e49\u5b83\u7684\u7c7b\u548c\u5b50\u7c7b\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u7c7b\u548c\u5b50\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528\uff0c\u4f46\u53ef\u4ee5\u88ab\u8be5\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61(\u6240\u6709)\u8bbf\u95ee\uff1b private\u65b9\u6cd5\u53ef\u4ee5\u88ab\u5b9a\u4e49\u5b83\u7684\u7c7b\u548c\u5b50\u7c7b\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u7c7b\u548c\u5b50\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528\uff0c\u4e14\u5b9e\u4f8b\u5bf9\u8c61\u53ea\u80fd\u8bbf\u95ee\u81ea\u5df1\u7684private\u65b9\u6cd5\u3002 \u4ee5\u4e0a\u7684\u9648\u8ff0\u4e2d\uff0c\u8bf7\u6ce8\u610f\u201c\u8c03\u7528\u201d\u548c\u201c\u8bbf\u95ee\u201d\u7684\u533a\u522b\u3002 \u7ed1\u5b9a\u5bf9\u8c61 \u00b6 \u901a\u8fc7binding\u5bf9\u8c61\u6765\u6355\u83b7\u5e76\u5e26\u8d70\u5f53\u524d\u7684\u4f5c\u7528\u57df,\u63a5\u4e0b\u6765\u901a\u8fc7eval,instance_eval,class_eval\u5728binding\u5bf9\u8c61\u6240\u643a\u5e26\u7684\u4f5c\u7528\u57df\u4e2d\u6267\u884c\u4ee3\u7801 class A def my_method @x = 1 binding # Kernal\u4e2d\u7684\u65b9\u6cd5,\u8fd4\u56debinding\u5bf9\u8c61 end end b = A . new . my_method eval \"@x\" , b # => 1 Ruby\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a TOPLEVEL_BINDING\u9884\u5b9a\u4e49\u5e38\u91cf,\u4ee3\u8868\u9876\u7ea7\u4f5c\u7528\u57df\u7684\u5bf9\u8c61 ,\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9 \u8bbf\u95ee\u7a7a\u865a\u9876\u7ea7\u4f5c\u7528\u57df class A def my_method eval \"self\" , TOPLEVEL_BINDING end end A . new . my_method #=>main \u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4,Binding\u662f\u4e00\u4e2a\u6bd4\u5757\u66f4\"\u7eaf\u51c0\"\u7684\u95ed\u5305,\u56e0\u4e3a\u5b83\u4eec\u53ea\u5305\u542b\u4f5c\u7528\u57df\u800c\u4e0d\u5305\u542b\u4ee3\u7801 eval() \u6709\u4e09\u4e2a\u53ef\u9009\u53c2\u6570,\u7b2c\u4e00\u4e2a\u662fbinding\u5bf9\u8c61,\u7b2c\u4e8c\u4e2a\u662f\u6587\u4ef6 ,\u7b2c\u4e09\u4e2a\u662fline,\u6b63\u662f\u8fd9\u4e09\u4e2a\u53c2\u6570,irb\u5728\u6267\u884c\u4ee3\u7801\u7684\u5f02\u5e38\u7684\u65f6\u5019\u53ef\u4ee5\u8ddf\u8e2a\u8c03\u7528\u6808\u7684\u4fe1\u606f. here\u6587\u6863 (<<END END) \u00b6 s = <<END \u200b \u8fd9\u662f\u4e00\u4e2a\u591a\u884c\u6ce8\u91ca \u7c7b\u4f3cjavadoc\u91cc\u7684preview,\u4f46\u662f\u6bd4\u5176\u66f4\u597d\u7528 END eval()\u7684\u5b89\u5168 \u00b6 ruby\u63d0\u4f9b\u4e86$$SAFE\u7684\u5168\u5c40\u53d8\u91cf,0-4\u63d0\u4f9b\u7531\u4f4e\u5230\u9ad8\u7684\u5b89\u5168\u9650\u5236 \u00b6","title":"Ruby\u7684\u4e00\u4e9b\u7b14\u8bb0"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#ruby","text":"","title":"Ruby\u7684\u4e00\u4e9b\u7b14\u8bb0"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#ruby_1","text":"\u4f7f\u7528Ripper\u5bf9ruby\u811a\u672c\u8fdb\u884c\u5206\u8bcd Yacc,\u89e3\u6790\u5668,ruby\u4f7f\u7528\u4e86\u66f4\u9ad8\u7ea7\u7684Bison,\u4ed6\u4eec\u4f7f\u7528\u4ee5 .y \u6269\u5c55\u540d\u7684\u8bed\u6cd5\u6587\u4ef6","title":"Ruby\u539f\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_1","text":"print pus\u533a\u522b \u51fd\u6570\u6216\u65b9\u6cd5\u7684\u6700\u540e\u4e00\u884c\u53ef\u4ee5\u76f4\u63a5\u5199\u503c\u4f5c\u4e3a\u8fd4\u56de\u503c,\u4f46\u7a0b\u5e8f\u6700\u540e\u4e00\u884c\u8981\u663e\u793a\u58f0\u660e.\u4e0e\u5176\u4ed6\u8bed\u8a00\u5982shell\u6df7\u7f16,\u8981\u7528print\u8f93\u51fa\u800c\u4e0d\u662f\u76f4\u63a5return def hello 'world' end print 'world' # return 'world' # shell\u65e0\u6cd5\u83b7\u53d6\u8fd9\u4e2a\u503c","title":"\u63d0\u95ee\u9898"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_2","text":"","title":"\u5bb9\u6613\u641e\u9519\u7684\u95ee\u9898"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_3","text":"str =~ obj \u2192 integer or nil \u5982\u679cobj\u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219\u7528\u6b64\u6b63\u5219\u53bb\u5339\u914dstr\uff0c\u5339\u914d\u6210\u529f\u5219\u8fd4\u56de\u5339\u914d\u5230\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\uff0c\u5426\u5219\u8fd4\u56denil \u5982\u679cobj\u4e0d\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5219\u8c03\u7528 obj.=~(str) \uff0c\u5373\u8c03\u7528obj\u7684 =~ \u65b9\u6cd5\uff0c\u7136\u540e\u4ee5str\u4f5c\u4e3a\u53c2\u6570 \u6ce8\uff1a str =~ reg \u548c reg =~ str\u662f\u4e0d\u540c\u7684 \uff0c\u5982\u679creg\u91cc\u6709\u547d\u540d\u6355\u83b7\uff0c\u5219\u53ea\u6709\u7b2c\u4e8c\u79cd\u624d\u4f1a\u5c06\u6355\u83b7\u5230\u7684\u5185\u5bb9\u8d4b\u503c\u5230\u5bf9\u5e94\u7684\u53d8\u91cf\u5f53\u4e2d\u3002 \u6240\u4ee5\u5728Ruby\u4e2d\uff0c\u5f3a\u70c8\u5efa\u8bae\u5c06reg\u653e\u5728\u524d\u9762\uff0c\u8fd9\u548cPerl\u7684\u4f4d\u7f6e\u987a\u5e8f\u662f\u76f8\u53cd\u7684 \u3002","title":"\u6b63\u5219\u7684\u987a\u5e8f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_4","text":"","title":"\u5b57\u7b26\u4e32\u64cd\u4f5c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_5","text":"gsub replace //\u5b8c\u6574\u66ff\u6362","title":"\u66ff\u6362\u64cd\u4f5c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_6","text":"ltrip,rtrip","title":"\u53bb\u9664\u7a7a\u683c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_7","text":"chop \u53bb\u9664\u7b2c\u4e00\u4e2a\u5b57\u7b26 \"hello\"[1..-1]","title":"\u53bb\u9664\u6362\u884c\u5206\u9694\u7b26"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_8","text":"\u7c7b\u540d\u662f\u4e00\u4e2a\u5e38\u91cf","title":"\u4e00\u4e9b\u4e0d\u5e38\u89c1\u5230\u7684\u6280\u5de7"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#ruby-q-q-w-w-x-r-s-i","text":"","title":"Ruby \u91cc\u7684 %Q, %q, %W, %w, %x, %r, %s, %i"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#q","text":"\u62ec\u53f7\u91cc\u7684\u5b57\u7b26\u4e32\u5916\u9762\u52a0\u4e0a\u53cc\u5f15\u53f7,\u5e76\u4e14\u62ec\u53f7\u91cc\u7684\u53cc\u5f15\u53f7\u4e0d\u9700\u8981\u8f6c\u4e49 \u62ec\u53f7\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7684\u975e\u6570\u5b57\u7684\u6210\u5bf9\u7684\u7b26\u53f7\u8868\u793a. %Q[] %Q! ! %Q+ + \u90fd\u662f\u53ef\u4ee5\u7684,\u4e00\u822c\u5c31\u7528()\u5c31\u597d. %Q(He said: \"Good!\") => \"He said: \"Good!\"\"","title":"%Q()"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#q_1","text":"\u5355\u5f15\u53f7,\u5176\u4ed6\u540c%Q %W \u8bed\u6cd5\u8fd1\u4f3c\u4e8e %Q , \u7528\u4e8e\u8868\u793a\u5176\u4e2d\u5143\u7d20\u88ab\u53cc\u5f15\u53f7\u62ec\u8d77\u7684\u6570\u7ec4. >> %W(#{foo} Bar Bar\\ with\\ space) => [\"Foo\", \"Bar\", \"Bar with space\"]","title":"%q()"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#w","text":"\u7528\u4e8e\u8868\u793a\u5176\u4e2d\u5143\u7d20\u88ab\u5355\u5f15\u53f7\u62ec\u8d77\u7684\u6570\u7ec4. \u6bd4\u8f83\u5947\u602a\u7684\u662f \\ (\u659c\u6760\u7a7a\u683c)\u4f1a\u88ab\u8f6c\u5316\u6210``(\u7a7a\u683c), \u4f46\u662f\u5176\u4ed6\u7684\u5185\u5bb9\u4e0d\u4f1a. >> %w(a b c\\ d \\#e #{1}f) => [\"a\", \"b\", \"c d\", \"\\\\#e\", \"\\#{1}f\"]","title":"%w"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#x","text":"\u4f7f\u7528`\u65b9\u6cd5\u6267\u884c\u4e00\u6bb5shell\u811a\u672c\u5e76\u8fd4\u56de\u6807\u51c6\u8f93\u51fa\u5185\u5bb9. >> %x(echo foo:#{foo}) => \"foo:Foo\\n\"","title":"%x"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#r","text":"\u8bed\u6cd5\u8fd1\u4f3c\u4e8e %Q , \u7528\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f. >> %r(/home/#{foo}) => /\\/home\\/Foo/","title":"%r"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#s","text":"\u7528\u4e8e\u8868\u793asymbol, \u4f46\u662f\u4e0d\u4f1a\u5bf9\u5176\u4e2d\u8868\u8fbe\u5f0f\u7b49\u5185\u5bb9\u8fdb\u884c\u8f6c\u5316 >> %s(foo) => :foo >> %s(foo bar) => :\"foo bar\" >> %s(#{foo} bar) => :\"\\#{foo} bar\"","title":"%s"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#i","text":"Ruby 2.0 \u4e4b\u540e\u5f15\u5165\u7684\u8bed\u6cd5, \u7528\u4e8e\u751f\u6210\u4e00\u4e2asymbol\u6570\u7ec4 2.0.0p247 :014 > %i(a b c) => [:a, :b, :c]","title":"%i"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#ruby-gem","text":"// \u66f4\u65b0 Gem\u81ea\u8eab // \u6ce8\u610f\uff1a\u5728\u67d0\u4e9b linux\u53d1\u884c\u7248\u4e2d\u4e3a\u4e86\u7cfb\u7edf\u7a33\u5b9a\u6027\u6b64\u547d\u4ee4\u7981\u6b62\u6267\u884c gem update -- system // \u4ece Gem\u6e90\u5b89\u88c5gem\u5305 $ gem install [ gemname ] // \u4ece\u672c\u673a\u5b89\u88c5 gem\u5305 $ gem install - l [ gemname ]. gem // \u5b89\u88c5\u6307\u5b9a\u7248\u672c\u7684 gem\u5305 $ gem install [ gemname ] -- version =[ ver ] // \u66f4\u65b0\u6240\u6709\u5df2\u5b89\u88c5\u7684 gem\u5305 $ gem update // \u66f4\u65b0\u6307\u5b9a\u7684 gem\u5305 // \u6ce8\u610f\uff1a gem update [ gemname ] \u4e0d\u4f1a\u5347\u7ea7\u65e7\u7248\u672c\u7684\u5305\uff0c\u6b64\u65f6\u4f60\u53ef\u4ee5\u4f7f\u7528 gem install [ gemname ] -- version =[ ver ] \u4ee3\u66ff $ gem update [ gemname ] // \u5220\u9664\u6307\u5b9a\u7684 gem\u5305 \uff0c\u6ce8\u610f\u6b64\u547d\u4ee4\u5c06\u5220\u9664\u6240\u6709\u5df2\u5b89\u88c5\u7684\u7248\u672c $ gem uninstall [ gemname ] // \u5220\u9664\u67d0\u6307\u5b9a\u7248\u672c gem $ gem uninstall [ gemname ] -- version =[ ver ] // \u67e5\u770b\u672c\u673a\u5df2\u5b89\u88c5\u7684\u6240\u6709 gem\u5305 $ gem list [-- local ]","title":"Ruby Gem\u547d\u4ee4\u8be6\u89e3"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#inheritances-extend-include","text":"inheritance : \u5b50\u7c7b\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u5c5e\u6027\uff0c\u5305\u62ec\u8bbf\u95ee\u8fd9\u4e9b\u5c5e\u6027\u7684\u6743\u9650 (public/protected/private)\uff0c\u4e0e\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\u4e0d\u540c\u7684\u662f\uff0cRuby \u80fd\u591f\u8bbf\u95ee\u7236\u7c7b\u7684\u79c1\u6709\u65b9\u6cd5\uff0c\u751a\u81f3\u8fd8\u53ef\u4ee5\u628a\u7236\u7c7b\u7684\u79c1\u6709\u65b9\u6cd5\u8f6c\u5316\u4e3a\u516c\u6709\u65b9\u6cd5\u3002 include : \u5728\u6307\u5b9a\u7684\u7c7b\u4e2d mixed in \u6a21\u5757 (module) \u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u4f5c\u4e3a\u8be5\u7c7b\u7684\u5b9e\u4f8b\u65b9\u6cd5\u3002 include model \u7b49\u540c\u4e8e\u628a\u6a21\u5757\u4e2d\u7684\u4ee3\u7801\u590d\u5236\u5230\u6240\u5728\u7c7b\u4e2d\uff0c\u51cf\u5c11\u4ee3\u7801\u91cd\u590d\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u7a81\u7834\u4e86 Ruby \u53ea\u5141\u8bb8\u5355\u7ee7\u627f\u7684\u9650\u5236\u3002 extend : \u628a\u6a21\u5757\u4e2d\u7684\u65b9\u6cd5\u5f15\u5165\u5230\u5f53\u524d\u7c7b\uff0c\u5e76\u4f5c\u4e3a\u7c7b\u65b9\u6cd5\u3002","title":"inheritances &amp; extend &amp; include \u7684\u533a\u522b?"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#objectextend","text":"module MyModule def my_method 'hello' end end obj = Object . new obj . extend MyModule obj . my_method #=> \"hello\" class MyClass extend MyModule end MyClass . my_method #=> \"hello\"","title":"Object#extend"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#ruby-module_function-extend-self","text":"module m extend self #\u5199\u5728\u65b9\u6cd5\u5b9a\u4e49\u4e0a\u4e00\u884c def hello end end module n def hello end module_function :hello end module_function \u6539\u53d8\u6a21\u5757\u5185\u539f\u65b9\u6cd5\u7684 public/private \u5c5e\u6027\u5e76\u8bbe\u7f6e\u6210\u6a21\u5757\u65b9\u6cd5,\u80fd\u591f\u901a\u8fc7 module_name.method_name \u7684\u65b9\u6cd5\u8c03\u7528,\u56e0\u4e3a\u6539\u53d8\u4e86public/private\u5c5e\u6027,\u6240\u4ee5include\u8fdb\u67d0\u4e2a\u7c7b\u7684\u65f6\u5019,\u8fd9\u4e2a\u65b9\u6cd5\u4e5f\u5c31\u4e0d\u518d\u53ef\u89c1(\u7528)\u4e86\u3002 extend self \u5c31\u662f\u5728\u6a21\u5757\u5185\u81ea\u7ee7\u627f\uff0c\u4e0d\u6539\u53d8\u6a21\u5757\u4e2d\u65b9\u6cd5\u7684 public/private \u5c5e\u6027\uff0c\u540c\u6837\u4e5f\u80fd\u901a\u8fc7 module_name.public_method \u7684\u65b9\u6cd5\u8c03\u7528\u3002inlude\u8fdb\u67d0\u4e2a\u7c7b\u65f6\u5f53\u5b9e\u4f8b\u65b9\u6cd5\u4f7f\u7528. \u4e0d\u786e\u5b9a\u6a21\u5757\u662f\u5426\u72ec\u7acb\u4f7f\u7528\u6216\u662fmixin\u7684\u60c5\u51b5\u4e0b,\u60f3\u8981\u76f4\u63a5\u4ee5module.method\u65b9\u5f0f\u4f7f\u7528\u6a21\u5757\u5185\u7684\u65b9\u6cd5,\u5efa\u8bae\u4f7f\u7528extend self. \u8fd9\u4e00\u70b9\u5f85\u786e\u8ba4","title":"Ruby \u4e2d\u7684 module_function \u548c extend self\u5f02\u540c?"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#module_function","text":"module Utils #https://github.com/candlerb/webrick/blob/master/lib/webrick/utils.rb def create_listeners #sockets end module_function :create_listeners end \u7528\u4e8e\u5bf9module\u7684\u65b9\u6cd5\u5bf9\u5916\u8fdb\u884c\u516c\u5f00,\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528. Ex : Utils.create_listeners \u5bf9\u4e8emixin,\u5219\u4e0d\u5fc5\u4f7f\u7528. \u6539\u53d8\u4e86\u65b9\u6cd5\u7684public/private\u5c5e\u6027, include\u8fdb\u4e86\u7c7b,\u8fd9\u4e2a\u65b9\u6cd5\u4e5f\u53d8\u4e3a\u4e0d\u53ef\u89c1, \u614e\u7528","title":"module_function \u5173\u952e\u5b57?"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#class-self-class-obj","text":"a = 'foo' class << a def inspect '\"bar\"' end end a . inspect # => \"bar\" a = 'foo' # new object, new singleton class a . inspect # => \"foo\" \u6253\u5f00a\u7684\u5355\u4f8b\u7c7b,\u53ef\u4ee5\u5728a\u7684\u5bf9\u8c61\u4e2d\u5b9a\u4e49\u65b0\u7684\u65b9\u6cd5. \u8fd9\u91cc\u7684self\u662f\u4e0a\u4e0b\u6587\u4e2d\u7684\u5bf9\u8c61. \u6ce8\u610f,\u8fd9\u91cc\u7684\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u662f\u7c7b,\u7c7b\u5b9a\u4e49\u7684\u7c7b\u672c\u8eab\u4e5f\u662f\u5bf9\u8c61 \u5982: module A class << self end end","title":"class &lt;&lt; self  class &lt;&lt; obj \u662f\u4ec0\u4e48\u610f\u601d?"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_9","text":"class A def m @m = \"hello\" end end \u5982\u679c\u6ca1\u6709\u8fd0\u884c m\u7684\u65b9\u6cd5,\u90a3\u4e2a@m\u662f\u4e0d\u5b58\u5728\u7684. \u8fd9\u8ddfjava\u662f\u5b8c\u5168\u4e0d\u540c\u7684","title":"\u5b9e\u4f8b\u53d8\u91cf\u5e76\u4e0d\u662f\u5b9a\u4e49\u51fa\u6765\u7684"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_10","text":"obj1\u662f\u53d8\u91cf,MyClass\u662f\u5e38\u91cf \u5176\u5b9e\u90fd\u662f\u5bf9\u8c61,\u8fd9\u4e2a\u8ddfjava\u91cc\u7684\u7c7b\u548c\u5bf9\u8c61\u7684\u6982\u5ff5\u8fd8\u662f\u6709\u4e9b\u533a\u522b\u7684.java\u91cc\u7684\u5bf9\u8c61\u548c\u7c7b\u4ece\u903b\u8f91\u4e0a\u66f4\u50cf\u662f\u6a21\u5177\u548c\u4ea7\u54c1\u5173\u7cfb \u4efb\u4f55\u5927\u5b9d\u5b57\u6bcd\u5f00\u5934\u7684\u90fd\u662f\u5e38\u91cf","title":"\u5bf9\u8c61\u662f\u53d8\u91cf,\u7c7b\u540d\u662f\u5e38\u91cf"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#javac","text":"\u5728java\u548cc#\u4e2d,\u7c7b\u4e5f\u662fClass\u7684\u5b9e\u4f8b,\u4f46\u662fJava\u4e2d\u7684\u7c7b\u548c\u5bf9\u8c61\u6709\u5f88\u5927\u533a\u522b \u4e0d\u80fd\u8fd0\u884c\u65f6\u521b\u5efa\u7c7b \u4e0d\u80fd\u8fd0\u884c\u65f6\u4fee\u6539\u7c7b class(\u7c7bMyClass)\u66f4\u50cf\u662f\u7c7b\u7684\u63cf\u8ff0\u7b26,\u800c\u4e0d\u662f \u771f\u6b63 \u7684\u7c7b,\u7c7b\u4f3c\u4e8eJavaFile\u7c7b\u4e0d\u8fc7\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26,\u800c\u4e0d\u662f\u6587\u4ef6\u672c\u8eab \u521d\u5b66\u65f6\u7684\u7c7b\u6bd4\u903b\u8f91\u5bf9\u4e8e\u7c7b\u548c\u5b9e\u4f8b\u7684\u6df1\u5165\u7406\u89e3\u662f\u6709\u969c\u788d\u7684.","title":"\u548cJava,C#\u4e2d\u7684\u7c7b\u76f8\u6bd4\u6709\u4ec0\u4e48\u533a\u522b"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#classmodule","text":"\u547d\u540d\u7a7a\u95f4\u4f7f\u7528\u65f6\u4f7f\u7528module \u5e0c\u671b\u5b9e\u4f8b\u6216\u662f\u7ee7\u627f,\u4f7f\u7528\u7c7b","title":"\u5982\u4f55\u9009\u62e9Class\u548cModule"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_11","text":"module M Y = 'y const' class C :: M :: Y # \u8868\u793a\u6839\u8def\u5f84 y const end end","title":"::\u662f\u4ec0\u4e48"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_12","text":"\u5bf9\u8c61\u4e2d\u627e\u5bf9\u8c61\u672c\u8eab\u5b9a\u4e49\u7684\u65b9\u6cd5(\u8f83\u5c11) \u5728\u5bf9\u8c61\u7684\u7c7b\u5b9a\u4e49\u4e2d\u627e\u65b9\u6cd5,\u7136\u540e\u4f9d\u6b21\u662f\u8fd9\u4e2a\u7c7b\u7c7bmxin\u7684\u6a21\u5757( \u8fd9\u4e2a\u5bb9\u6613\u5ffd\u7565 ) \u7c7b\u7684superclass\u4e2d\u5bfb\u627e,\u5176\u4e2d\u5305\u62ec\u5f71\u5b50\u7c7b(\u4ee3\u7406\u7c7b/\u533f\u540d\u7c7beigenclass) Eigenclasses\u4f4d\u4e8e\u65b9\u6cd5\u67e5\u627e\u7684\u6700\u5e95\u7aef\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c \u6700\u5148\u5f00\u59cb\u65b9\u6cd5\u67e5\u627e\u7684\u5730\u65b9\u5c31\u662f\u8fd9\u4e2a\u5bf9\u8c61\u81ea\u5df1\u7684Eigenclass. \u9634\u5f71\u7684\u90e8\u5206\u662f\u5f71\u5b50\u7c7b","title":"\u65b9\u6cd5\u662f\u600e\u4e48\u6267\u884c\u7684"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#self","text":"\u4efb\u4f55\u65f6\u523b,\u53ea\u8981\u8c03\u7528 \u67d0\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5,\u8fd9\u4e2a\u5bf9\u8c61\u5c31\u6210\u4e3aself,\u5982\u679c\u6ca1\u6709\u8c03\u7528\u65b9\u6cd5self\u662f\u4ec0\u4e48? self # => main self . class # => Object ruby\u7a0b\u5e8f\u8fd0\u884c\u65f6,\u89e3\u91ca\u5668\u4f1a\u521b\u5efa\u4e00\u4e2amain\u7684\u5bf9\u8c61,\u8fd9\u4e2a\u5bf9\u8c61\u88ab\u79f0\u4e3a\u9876\u7ea7\u4e0a\u4e0b\u6587.\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019self\u5c31\u662f\u8fd9\u4e2amain","title":"self\u662f\u4ec0\u4e48"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_13","text":"# Ruby\u5143\u7a0b\u5e8f\u5c31\u662f\u5173\u4e8eSelf \uff1aIt\u2019s All About the Self # \u6240\u6709ruby\u4ee3\u7801\u5728ruby\u4ee3\u7801\u6267\u884c\u7684\u8fc7\u7a0b\u4e2d,\u662f\u6ca1\u6709\u6ca1\u6709\u5355\u72ec\u7684\u7f16\u8bd1\u6216\u8fd0\u884c\u9636\u6bb5. \u5728Ruby\u4e2d\uff0c\u6bcf\u4e00\u884c\u4ee3\u7801\u662f\u5bf9\u4e00\u4e2a\u7279\u5b9a\u5bf9\u8c61\u7684\u6267\u884c\u7684 =begin \u4e00\u4e2a\u533f\u540d\u7c7b\uff08Anonymous Class\uff09\u4e5f\u88ab\u79f0\u4f5c\u5355\u4f8b\u7c7b\uff08Singleton Class\uff09\uff0c\u7279\u5f81\u7c7b\uff08Eigenclass\uff09\uff0c\u9b3c\u9b42\u7c7b\uff08Ghost Class\uff09\uff0c \u5143\u7c7b\uff08Metaclass\uff09\u6216\u8005 uniclass\u8bd1\u540d\u8bf7\u6c42. Eigenclass: an object\u2019s own class Metaclass: the class of a class =end # \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u5b83\u81ea\u5df1\u7684\u72ec\u6709\u7684\uff0c\u9690\u85cf\u7684\u7c7b\u3002\u5b83\u88ab\u53eb\u505a\uff1a \u90a3\u4e2a\u5bf9\u8c61\u7684 eigen-class. =begin eigenclass\u7684\u4f5c\u7528\u57df\uff1a class << an_object # your code that end \u5982\u679c\u4f60\u60f3\u5f97\u5230\u4e00\u4e2aeigenclass\u7684\u5f15\u7528\uff0c\u4f60\u53ef\u4ee5\u5728\u5916\u90e8\u57df\u8fd4\u56de\u4e00\u4e2aself\uff0c\u4f8b\u5982\uff1a obj = Object.new eigenclass = class << obj self end > eigenclass => #<Class:#<Object:0x2bccd0>> > eigenclass.class => Class =end # \u4e00\u4e2a\u5bf9\u8c61\u7684Eigenclass \u662f\u5176\u5355\u4f8b\u65b9\u6cd5\u4fdd\u5b58\u7684\u5730\u65b9 =begin Eigenclasses and instance_eval() instance_eval():\u6539\u53d8\u7684\u662fthe current class\u7c7b\u7684Eigenclass. Eigenclasses and Method lookup\uff08lookup\u5177\u4f53\u8be6\u89c1\uff1a\u65b9\u6cd5\u8c03\u7528\uff09 Eigenclasses\u4f4d\u4e8e\u65b9\u6cd5\u67e5\u627e\u7684\u6700\u5e95\u7aef\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c \u6700\u5148\u5f00\u59cb\u65b9\u6cd5\u67e5\u627e\u7684\u5730\u65b9\u5c31\u662f\u8fd9\u4e2a\u5bf9\u8c61\u81ea\u5df1\u7684Eigenclass. =end # \u76ee\u524d\u4e3a\u6b62\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u4e00\u4e0b\u4e94\u79cd\u65b9\u5f0f\uff0c\u521b\u5efa\u7c7b\u65b9\u6cd5\uff1a #1 class Person def self . ni_ming_lei \"this is a ni_ming_lei\" end end #2 class Person class << self def ni_ming_lei \"this is a ni_ming_lei\" end end end #3 class << Person def ni_ming_lei \"this is a ni_ming_lei\" end end #4 Person . instance_eval do def ni_ming_lei \"this is a ni_ming_lei\" end end # 5 class Person end def Person . ni_ming_lei \"this is a ni_ming_lei\" end # \u65b9\u6cd5\u8c03\u7528\uff1a p Person . ni_ming_lei # =>\"this is a ni_ming_lei\" # \u81f3\u4e8e\u4f7f\u7528\u90a3\u79cd\u770b\u81ea\u5df1\u7684\u4e60\u60ef\u4e86~~~ # \u6211\u4eec\u77e5\u9053eigenclass\u4e5f\u662f\u4e00\u4e2a\u7c7b\uff0c\u5b83\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6545\u800c\u4ed6\u4e5f\u6709\u81ea\u5df1\u7684eigenclass\u3002\u8c8c\u4f3c\u6781\u4e3a\u5c11\u89c1\u3002\u3002\u3002\u3002 # \u7c7b\u7684\u5b9e\u4f8b\u65b9\u6cd5\u7684\u4e66\u5199 class Per def name \"Test\" end end Per . class_eval do def name \"Matz\" end end p Per . new . name #>\"Matz\"","title":"\u5f71\u5b50\u7c7b/\u533f\u540d\u7c7b,\u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65b9\u6cd5"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_14","text":"\u8ddfjava\u4e0d\u540c,java\u91cc\u7684\u7c7b\u5c31\u662f\u7c7b,\u5bf9\u8c61\u5c31\u662f\u7c7b\u7684\u5b9e\u4f8b. ruby\u4e2d\u7684\u6240\u6709\u4e00\u5207\u90fd\u662f\u5bf9\u8c61,\u4f46\u6709\u65f6\u5019\u9700\u8981\u8bf4\u660e\u7c7b\u548c\u5b9e\u4f8b\u7684\u8fd9\u79cd\u5173\u7cfb\u65f6,\u5c31\u9700\u8981\u660e\u786e\u4e0a\u4e0b\u6587\u7684\u6982\u5ff5 \u4e00\u822c\u60c5\u51b5\u4e0b\u6240\u8bf4\u7684\u7c7b\u548c\u5b9e\u4f8b,\u8ddfjava\u4e2d\u7684\u6ca1\u6709\u592a\u5927\u5dee\u522b \u5728\u8bf4\u7c7b\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019,\u8fd9\u4e2a\u65f6\u5019\u7c7b\u5c31\u662f\u5bf9\u8c61,Class\u5bf9\u5e94\u7684\u5c31\u662f\u7c7b\u4e86 \u6709\u70b9\u5b9a\u4e49\u7684\u4e0a\u9012\u5f52\u611f\u89c9,\u5f53\u7136\u8fd9\u4e48\u8bf4\u4e5f\u4e0d\u4e00\u5b9a\u4e25\u8c28","title":"\u7c7b\u548c\u5bf9\u8c61\u7684\u7406\u89e3"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_15","text":"irb ( main ): 01 8 : 0 > 1 + 1 => 2 irb ( main ): 01 9 : 0 > 1 . send ( :+ , 1 ) => 2 irb ( main ): 020 : 0 >","title":"\u65b9\u6cd5\u8c03\u7528\u7684\u672c\u8d28"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_16","text":"ruby\u4e2d\u7684\u4f5c\u7528\u57df\u4e0d\u50cfjava\u4e2d\u7684inner scope\u6216\u662f\u5757\u4f5c\u7528\u57df\u7684\u6982\u5ff5,\u5185\u90e8\u53ef\u4ee5\u770b\u5230\u5916\u5c42\u7684\u53d8\u91cf class A { int i void m (){ // \u8fd9\u91cc\u662f\u53ef\u4ee5\u770b\u5230i\u7684 } } ruby\u7684 class,module,def\u90fd\u662f\u4f5c\u7528\u57df\u7684\u5206\u9694\u95e8 module A v1 #\u5c40\u90e8\u4ea6\u662f\u8fd9\u91cc\u770b\u5230\u6709v1 class B v2 #\u8fd9\u91cc\u53ea\u770b\u5230v2 def c v3 #\u8fd9\u91cc\u53ea\u770b\u5230v3,\u770b\u4e0d\u5230v2 end end #\u8fd9\u91cc\u53ea\u770b\u5230v1 end #\u5982\u679c\u60f3\u7a7f\u8d8a\u8fd9\u4e2a\u95e8,\u4e0d\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e09\u4e2a\u5173\u952e\u5b57(\u4f7f\u7528\u95ed\u5305\u7684\u65b9\u5f0f\u6765) module A v1 B = Class . new do v2 #\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230v1 def c v3 #\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230 v1,v2 end","title":"\u4f5c\u7528\u57df"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#instance_eval-instance_exec","text":"\u53ef\u4ee5\u6241\u5e73\u5316\u4f5c\u7528\u57df,\u8bf4\u4eba\u8bdd\u5c31\u662f\u53ef\u4ee5\u5728\u4ee3\u7801\u5757\u91cc\u8bbf\u95ee\u5bf9\u8c61\u7684\u4f5c\u7528\u57df\u5185(\u79c1\u6709)\u53d8\u91cf\u4e86 class C def initialize @x = 1 end end c = C . new c . x # Error #\u5982\u4f55\u8bbf\u95eec\u7684@x, @x\u662f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7684 c.x c . instance_eval { @x #\u8fd9\u91cc\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4e86 }","title":"instance_eval &amp; instance_exec"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#class_eval","text":"class_eval\u5b9e\u9645\u4e0a\u662f\u91cd\u65b0\u6253\u5f00\u4e86\u7c7b,\u4e0einstance_eval\u53ea\u6539\u53d8self\u4e0d\u540c,class_eval \u4f1a\u540c\u65f6\u6539\u53d8self\u548c\u5f53\u524d\u7c7b. \u4ec0\u4e48\u65f6\u5019\u5f53\u524d\u7c7b?\u53c2\u8003\u4e0b\u6587","title":"class_eval"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_17","text":"\u65e0\u8bba\u5728ruby\u7a0b\u5e8f\u7684\u90a3\u4e2a\u4f4d\u7f6e,\u90fd\u6709\u4e00\u4e2a\u53ebself\u7684\u5f53\u524d\u5bf9\u8c61, \u540c\u65f6,\u4e5f\u603b\u6709\u4e00\u4e2a\u5f53\u524d\u7c7b(\u6a21\u5757)\u5b58\u5728,\u5982\u679c\u5728\u4e00\u4e2a\u65b9\u6cd5\u91cc,\u8be5\u65b9\u6cd5\u6210\u4e3a\u5f53\u524d\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5.","title":"\u4ec0\u4e48\u662f\u5f53\u524d\u7c7b"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_18","text":"\u5757\u4e0d\u662f\u5bf9\u8c61,\u5982\u4f55\u4fdd\u5b58\u4f20\u9012\u5462? \u9700\u8981\u901a\u8fc7 Proc\u5c06\u5757\u8f6c\u6362\u6210\u5bf9\u8c61,lambda\u4e5f\u662f\u540c\u7406 inc = Proc . new { | x | x + 1 } inc . call ( 2 ) #=> 3","title":"\u5757\u4e0d\u662f\u5bf9\u8c61"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#proc-lambda","text":"Proc.new() lambda() & \u8fd9\u4e09\u79cd\u65b9\u5f0f\u521b\u5efa\u7684\u90fd\u662fProc\u5bf9\u8c61,\u53ea\u662f\u4ed6\u4eec\u6709\u4e9b\u533a\u522b,\u5f88\u7ec6\u5fae\u7684\u533a\u522b\u4f46\u5f88\u91cd\u8981,\u6240\u4ee5\u7528\u4e0d\u540c\u7684\u540d\u79f0\u6765\u8868\u793a. return\u5728Proc\u548cLambda\u4e2d\u7684\u533a\u522b \u5728lambda\u4e2dreturn\u8868\u793a\u4ece\u8fd9\u4e2alambda\u8fd4\u56de \u5728Proc\u4e2d\u8868\u793a\u4ece\u5b9a\u4e49proc\u7684\u4f5c\u7528\u57df\u4e2d\u8fd4\u56de def d p = Proc . new { return 10 } r = p . call # \u76f4\u63a5\u4ece\u5b9a\u4e49proc\u4f5c\u7528\u57df\u4e5f\u5c31\u662f\u65b9\u6cd5d\u4e2d\u8fd4\u56de return r * 2 #\u4e0d\u80fd\u6267\u884c\u5230\u8fd9 end puts d #=> 10 \u4e0d\u662f20 \u5982\u679c\u4e00\u5b9a\u8981\u7528\u53ef\u4ee5\u6539\u6210\u7528\u663e\u5f0freuturn\u65b9\u5f0f(\u5c31\u662f\u4e0d\u5199return) def d p = Proc . new { 10 } #\u663e\u793areturn r = p . call return r * 2 end puts d #=> 20 \u53c2\u6570 lambda\u5bf9\u53c2\u6570\u7684\u68c0\u67e5\u4e25\u683c proc\u4f1a\u81ea\u5df1\u8c03\u6574,\u8fd9\u662f\u95ee\u9898\u7684\u6839\u6e90 p = Proc . new { | a , b | [ a , b ] } p . call ( 1 , 2 , 3 ) #=> [1,2] p . call ( 1 ) #=> [1,nil] \u5efa\u8bae\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4f7f\u7528**lambda** \u5728ruby1.8\u4e2d Kernel#proc()\u662fKernel#lambda() \u7684\u522b\u540d,\u7a0b\u5e8f\u4e0d\u65ad\u6297\u8bae,\u57281.9\u7684\u7248\u672c\u4e2dproc()\u53d8\u6210Proc.new()\u7684\u522b\u540d. lambda\u7684\u5b9a\u4e49\u65b9\u5f0f p = -> ( x ){ x + 1 } p = lambda { | x | x + 1 }","title":"proc &amp;  lambda"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#class-macro","text":"class A attr_accessor :my_attribute end obj = A . new obj . my_attribute = 'x' obj . my_attribute # => \"x\" \u5b9e\u73b0\u81ea\u5df1\u7684\u7c7b\u5b8f \u5f53\u6a21\u5757\u88ab\u5f15\u5165\u7684\u65f6\u5019\u8c03\u7528 self.included\u56de\u8c03 \u56de\u8c03\u4e2d\u5c06\u5f15\u5165\u8be5\u6a21\u5757\u7684\u7c7b\u8fdb\u884cextend\u6269\u5c55(\u7c7b\u65b9\u6cd5),\u5c31\u662f\u5c06ClassMethods\u6269\u5c55\u4e3aMyClass\u7684\u7c7b\u65b9\u6cd5,\u8fd9\u6837my_attr\u5c31\u53d8\u6210\u4e86MyClass\u7684\u7c7b\u65b9\u6cd5 \u5728MyClass\u91cc\u5c31\u53ef\u4ee5\u4f7f\u7528 my_attr :abc \u8fd9\u4e2a\u7c7b\u65b9\u6cd5\u6765\u8fdb\u884c\u65b9\u6cd5\u5b9a\u4e49\u4e86 module MyModule def self . included ( base ) #\u5f53\u6a21\u5757\u88ab\u5f15\u5165\u7684\u65f6\u5019\u56de\u8c03,base\u662f\u5f15\u5165\u8be5\u6a21\u5757\u7684\u6a21\u5757(\u7c7b) base . extend ClassMethods base . class_eval do def my_instance_method end end end module ClassMethods def my_attr ( str , & block ) #block define_method ( str ) do @str #instance_variable_set(\"@#{str}\", value) end define_method ( \" #{ str } =\" ) do | value | @str = value end end end end class MyClass include MyModule my_attr :abc end obj = MyClass . new obj . abc = '10' puts obj . abc #10 # part 2 puts MyClass . instance_methods # [ my_instance_method, abc, abc=]","title":"\u7c7b\u5b8f Class Macro"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_19","text":"\u65b9\u6cd5\u522b\u540d class MyClass def my_method 'hello' end alias :m :my_method end MyClass . new . m #=> \"hello\" \u73af\u7ed5\u522b\u540d(around alias) \u5148\u770b\u4ee3\u7801 class String alias :real_length :length def length real_length > 5 ? 'long' : 'short' end end \"hello,world\" . length #=> \"long\" \"hello,world\" . real_length #=> 13 alias \u628a\u539f\u6765\u7684length \u6620\u5c04\u7ed1\u5b9a\u5230 real_length\u4e0a,\u540e\u9762\u7684def\u5b9a\u4e49\u7684length\u5df2\u7ecf\u8ddf\u4e0a\u9762\u7684alias\u4e2d\u7684length\u65e0\u5173\u4e86. \u65b0\u5b9a\u4e49\u7684\u65b9\u6cd5length\u4e2d\u53ef\u4ee5\u8c03\u7528real_length(\u5176\u5b9e\u5c31\u662f\u539f\u6765\u7684length). \u8fd9\u6837\u7684\u65b9\u5f0f\u9002\u5408\u7528\u6765\u4e3a\u65b9\u6cd5\u6253\u8865\u4e01. \u901a\u5e38\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\u662f\u901a\u8fc7\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u6765\u8fdb\u884c,\u53ef\u4f5c\u7c7b\u6bd4\u7406\u89e3. **\u91cd\u8981:**\u73af\u7ed5\u522b\u540d\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u8981\u91cd\u5b9a\u4e49\u539f\u6709\u7684\u65b9\u6cd5,\u5426\u5219\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u98ce\u9669","title":"\u65b9\u6cd5\u522b\u540d&amp;\u73af\u7ed5\u522b\u540d"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_20","text":"class_eval() def add_method_to ( a_class ) a_class . class_eval do def m 'hello' end end end","title":"\u5982\u4f55\u4e0d\u77e5\u9053\u7c7b\u7684\u540d\u79f0\u5728\u7c7b\u91cc\u589e\u52a0\u65b9\u6cd5\u5b9a\u4e49"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_21","text":"@@v @@v = 1 class MyClass @@v = 2 end #@@v=> 2 \u7c7b\u53d8\u91cf\u6709\u70b9\u50cfjava\u662f\u7684\u9759\u6001\u53d8\u91cf,\u4f46\u662f\u4e0d\u80fd\u7b49\u540c\u7406\u89e3. \u7c7b\u53d8\u91cf\u4e25\u683c\u610f\u4e49\u4e0a\u5e76\u4e0d\u5c5e\u4e8e\u7c7b,\u5c5e\u4e8e\u7c7b\u4f53\u7cfb\u7ed3\u6784.\u4e0a\u9762\u7684@@V\u5b9a\u4e49\u4e8emain\u7684\u4e0a\u4e0b\u6587,\u5b83\u5c5e\u4e8emain\u7c7b\u7684Object\u7684,\u4e5f\u5c5e\u4e8eObject\u7684\u6240\u6709\u540e\u4ee3.\u6709\u70b9\u50cf\u5168\u5c40\u53d8\u91cf\u4e86. \u8fd8\u662f\u4e0d\u8981\u4f7f\u7528\u4e3a\u597d","title":"\u7c7b\u53d8\u91cf\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_22","text":"ruby\u4e2d,\u5bf9\u8c61\u7684\u7c7b\u578b\u5e76\u4e0d\u4e25\u683c\u4e0e\u5b83\u7684\u7c7b\u76f8\u5173,\u5b83\u7684 \u7c7b\u578b \u53ea\u662f\u4e00\u7ec4\u5b83\u80fd\u54cd\u5e94\u7684\u65b9\u6cd5\u800c\u5df2. \u8fd9\u4e00\u70b9\u8ddfGO\u8bed\u8a00\u7684\u63a5\u53e3\u8fd8\u662f\u5f88\u7c7b\u4f3c\u7684. \u7c7b\u65b9\u6cd5\u7684\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u7c7b\u7684\u5355\u4ef6\u65b9\u6cd5. \u5355\u4ef6\u65b9\u6cd5\u548c\u7c7b\u65b9\u6cd5\u7684\u5b9a\u4e49\u662f\u4e00\u6837\u7684. \u5bf9\u8c61\u7684\u5355\u4ef6\u65b9\u6cd5,\u5c31\u662f\u53ea\u5728\u8fd9\u4e2a\u5bf9\u8c61\u4e0a\u5b9a\u4e49\u7684\u65b9\u6cd5,\u53ea\u4f5c\u7528\u4e8e\u8fd9\u4e2a\u5bf9\u8c61 \u7c7b\u7684\u5355\u4ef6\u65b9\u6cd5,\u53ea\u662f\u7c7b\u8fd9\u4e2a\u5bf9\u8c61\u4e0a\u5b9a\u4e49\u7684,","title":"\u5355\u4ef6\u65b9\u6cd5"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#public-protected-private","text":"\u9996\u5148\u6765\u770b\u8fd9\u6bb5\u4ee3\u7801\uff1a class Test def method_public puts \"In method_public\" end def method_protected puts \"In method_protected\" end def method_private puts \"In method_private\" end protected :method_protected private :method_private end test = Test . new \u5206\u522b\u5c1d\u8bd5\uff1a test . method_public \u8f93\u51fa\uff1a In method_public test . method_protected \u8f93\u51fa\uff1a test . rb : 20 : protected method `method_protected' called for #<Test:0x3756068> (NoMethodError) test.method_private \u8f93\u51fa\uff1atest.rb:21: private method ` method_private ' called for #<Test:0x346070> (NoMethodError) \u53ef\u77e5\uff1apublic\u80fd\u88ab\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528\uff0cprotected\u548cprivate\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5bf9\u8c61\u76f4\u63a5\u8c03\u7528\u3002 \u6539\u5199\u4ee3\u7801\uff1a class Test def method_public puts \"In method_public\" end def method_protected puts \"In method_protected\" end def method_private puts \"In method_private\" end protected :method_protected private :method_private def access_method puts method_public puts method_protected puts method_private end end test = Test . new test . access_method \u8f93\u51fa\uff1a In method_public nil In method_protected nil In method_private nil \u53ef\u77e5\uff1a\u4e09\u79cd\u65b9\u5f0f\u90fd\u80fd\u88ab\u5b9a\u4e49\u5b83\u4eec\u7684\u7c7b\u8bbf\u95ee\u3002 \u6539\u5199\u4ee3\u7801\uff1a class Test def method_public puts \"In method_public\" end def method_protected puts \"In method_protected\" end def method_private puts \"In method_private\" end protected :method_protected private :method_private end class SonTest < Test def access_method puts method_public puts method_protected puts method_private end end test = SonTest . new test . access_method \u8f93\u51fa\uff1a In method_public nil In method_protected nil In method_private nil \u53ef\u77e5\uff1a\u4e09\u79cd\u65b9\u6cd5\u90fd\u80fd\u88ab\u5b9a\u4e49\u5b83\u4eec\u7684\u7c7b\u7684\u5b50\u7c7b\u8bbf\u95ee\u3002 \u6539\u5199\u4ee3\u7801\uff1a class Test def method_public puts \"In method_public\" end def method_protected puts \"In method_protected\" end def method_private puts \"In method_private\" end protected :method_protected private :method_private def call_method_protected ( testmember ) puts testmember . method_protected end def call_method_private ( testmember ) puts testmember . method_private end end test1 = Test . new test2 = Test . new \u5206\u522b\u5c1d\u8bd5\uff1a test2 . call_method_protected ( test1 ) \u8f93\u51fa\uff1a In method_protected nil test2 . call_method_private ( test1 ) \u8f93\u51fa\uff1a test . rb : 21 :in `call_method_private': private method ` method_private ' called for #<Test:0x36c5af4> (NoMethodError) \u53ef\u77e5\uff1aprotected\u65b9\u6cd5\u53ef\u4ee5\u88ab\u5176\u4ed6\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8bbf\u95ee\uff0c\u800cprivate\u65b9\u6cd5\u53ea\u80fd\u88ab\u81ea\u5df1\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8bbf\u95ee\u3002 \u603b\u7ed3\u4e00\u4e0b public\u65b9\u6cd5\u53ef\u4ee5\u88ab\u5b9a\u4e49\u5b83\u7684\u7c7b\u548c\u5b50\u7c7b\u8bbf\u95ee\uff0c\u5e76\u53ef\u4ee5\u88ab\u7c7b\u548c\u5b50\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528\uff1b protected\u65b9\u6cd5\u53ef\u4ee5\u88ab\u5b9a\u4e49\u5b83\u7684\u7c7b\u548c\u5b50\u7c7b\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u7c7b\u548c\u5b50\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528\uff0c\u4f46\u53ef\u4ee5\u88ab\u8be5\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61(\u6240\u6709)\u8bbf\u95ee\uff1b private\u65b9\u6cd5\u53ef\u4ee5\u88ab\u5b9a\u4e49\u5b83\u7684\u7c7b\u548c\u5b50\u7c7b\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u7c7b\u548c\u5b50\u7c7b\u7684\u5b9e\u4f8b\u5bf9\u8c61\u8c03\u7528\uff0c\u4e14\u5b9e\u4f8b\u5bf9\u8c61\u53ea\u80fd\u8bbf\u95ee\u81ea\u5df1\u7684private\u65b9\u6cd5\u3002 \u4ee5\u4e0a\u7684\u9648\u8ff0\u4e2d\uff0c\u8bf7\u6ce8\u610f\u201c\u8c03\u7528\u201d\u548c\u201c\u8bbf\u95ee\u201d\u7684\u533a\u522b\u3002","title":"public ,protected, private"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_23","text":"\u901a\u8fc7binding\u5bf9\u8c61\u6765\u6355\u83b7\u5e76\u5e26\u8d70\u5f53\u524d\u7684\u4f5c\u7528\u57df,\u63a5\u4e0b\u6765\u901a\u8fc7eval,instance_eval,class_eval\u5728binding\u5bf9\u8c61\u6240\u643a\u5e26\u7684\u4f5c\u7528\u57df\u4e2d\u6267\u884c\u4ee3\u7801 class A def my_method @x = 1 binding # Kernal\u4e2d\u7684\u65b9\u6cd5,\u8fd4\u56debinding\u5bf9\u8c61 end end b = A . new . my_method eval \"@x\" , b # => 1 Ruby\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a TOPLEVEL_BINDING\u9884\u5b9a\u4e49\u5e38\u91cf,\u4ee3\u8868\u9876\u7ea7\u4f5c\u7528\u57df\u7684\u5bf9\u8c61 ,\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9 \u8bbf\u95ee\u7a7a\u865a\u9876\u7ea7\u4f5c\u7528\u57df class A def my_method eval \"self\" , TOPLEVEL_BINDING end end A . new . my_method #=>main \u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4,Binding\u662f\u4e00\u4e2a\u6bd4\u5757\u66f4\"\u7eaf\u51c0\"\u7684\u95ed\u5305,\u56e0\u4e3a\u5b83\u4eec\u53ea\u5305\u542b\u4f5c\u7528\u57df\u800c\u4e0d\u5305\u542b\u4ee3\u7801 eval() \u6709\u4e09\u4e2a\u53ef\u9009\u53c2\u6570,\u7b2c\u4e00\u4e2a\u662fbinding\u5bf9\u8c61,\u7b2c\u4e8c\u4e2a\u662f\u6587\u4ef6 ,\u7b2c\u4e09\u4e2a\u662fline,\u6b63\u662f\u8fd9\u4e09\u4e2a\u53c2\u6570,irb\u5728\u6267\u884c\u4ee3\u7801\u7684\u5f02\u5e38\u7684\u65f6\u5019\u53ef\u4ee5\u8ddf\u8e2a\u8c03\u7528\u6808\u7684\u4fe1\u606f.","title":"\u7ed1\u5b9a\u5bf9\u8c61"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#here-end-end","text":"s = <<END \u200b \u8fd9\u662f\u4e00\u4e2a\u591a\u884c\u6ce8\u91ca \u7c7b\u4f3cjavadoc\u91cc\u7684preview,\u4f46\u662f\u6bd4\u5176\u66f4\u597d\u7528 END","title":"here\u6587\u6863 (&lt;&lt;END END)"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#eval","text":"ruby\u63d0\u4f9b\u4e86$$SAFE\u7684\u5168\u5c40\u53d8\u91cf,0-4\u63d0\u4f9b\u7531\u4f4e\u5230\u9ad8\u7684\u5b89\u5168\u9650\u5236","title":"eval()\u7684\u5b89\u5168"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/Ruby%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#_24","text":"","title":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/%E4%BD%BF%E7%94%A8Rails%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE%E9%94%99%E8%AF%AF/","text":"\u4f7f\u7528Rails\u65b0\u5efa\u9879\u76ee\u65f6\u4f7f\u7528mysql\u65f6\u62a5\u5982\u4e0b\u9519\u8bef Fetching mysql2 0 .5.3 Installing mysql2 0 .5.3 with native extensions Gem::Ext::BuildError: ERROR: Failed to build gem native extension. current directory: /Users/bob/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/mysql2-0.5.3/ext/mysql2 /Users/bob/.rbenv/versions/2.5.1/bin/ruby -r ./siteconf20200218-99851-19a42fp.rb extconf.rb checking for rb_absint_size () ... yes checking for rb_absint_singlebit_p () ... yes checking for rb_wait_for_single_fd () ... yes ----- Using mysql_config at /usr/local/bin/mysql_config ----- checking for mysql.h... yes checking for errmsg.h... yes checking for SSL_MODE_DISABLED in mysql.h... yes checking for SSL_MODE_PREFERRED in mysql.h... yes checking for SSL_MODE_REQUIRED in mysql.h... yes checking for SSL_MODE_VERIFY_CA in mysql.h... yes checking for SSL_MODE_VERIFY_IDENTITY in mysql.h... yes checking for MYSQL.net.vio in mysql.h... yes checking for MYSQL.net.pvio in mysql.h... no checking for MYSQL_ENABLE_CLEARTEXT_PLUGIN in mysql.h... yes checking for SERVER_QUERY_NO_GOOD_INDEX_USED in mysql.h... yes checking for SERVER_QUERY_NO_INDEX_USED in mysql.h... yes checking for SERVER_QUERY_WAS_SLOW in mysql.h... yes checking for MYSQL_OPTION_MULTI_STATEMENTS_ON in mysql.h... yes checking for MYSQL_OPTION_MULTI_STATEMENTS_OFF in mysql.h... yes checking for my_bool in mysql.h... no ----- Don 't know how to set rpath on your system, if MySQL libraries are not in path mysql2 may not load ----- ----- Setting libpath to /usr/local/Cellar/mysql/8.0.12/lib ----- creating Makefile current directory: /Users/bob/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/mysql2-0.5.3/ext/mysql2 make \"DESTDIR=\" clean current directory: /Users/bob/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/mysql2-0.5.3/ext/mysql2 make \"DESTDIR=\" compiling client.c compiling infile.c compiling mysql2_ext.c compiling result.c compiling statement.c linking shared-object mysql2/mysql2.bundle ld: library not found for -lssl clang: error: linker command failed with exit code 1 (use -v to see invocation) make: *** [mysql2.bundle] Error 1 make failed, exit code 2 Gem files will remain installed in /Users/bob/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/mysql2-0.5.3 for inspection. Results logged to /Users/bob/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/extensions/x86_64-darwin-18/2.5.0-static/mysql2-0.5.3/gem_make.out An error occurred while installing mysql2 (0.5.3), and Bundler cannot continue. Make sure that `gem install mysql2 -v ' 0 .5.3 ' --source ' https://rubygems.org/ '` succeeds before bundling. In Gemfile: mysql2 run bundle binstubs bundler Could not find gem ' mysql2 ( > = 0 .4.4 ) ' in any of the gem sources listed in your Gemfile. run bundle exec spring binstub --all Could not find gem ' mysql2 ( > = 0 .4.4 ) ' in any of the gem sources listed in your Gemfile. Run `bundle install` to install missing gems. rails webpacker:install Could not find gem ' mysql2 ( > = 0 .4.4 ) ' in any of the gem sources listed in your Gemfile. Run ` bundle install ` to install missing gems. \u5982\u4e0b\u89e3\u51b3: #\u5982\u679c\u6ca1\u6709\u5b89\u88c5openssl,\u5219\u5148\u5b89\u88c5 brew install opensll # \u6ce8\u610f\u4f7f\u7528sudo sudo gem install mysql2 -v '0.5.3' -- --with-ldflags = -L/usr/local/opt/openssl/lib --with-cppflags = -I/usr/local/opt/openssl/include","title":"\u4f7f\u7528Rails\u65b0\u5efa\u9879\u76ee\u9519\u8bef"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/Ruby/%E8%A7%A3%E5%86%B3bundle%20install%E5%A4%AA%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/","text":"\u89e3\u51b3bundle install\u592a\u6162\u7684\u95ee\u9898 bundle config mirror.https://rubygems.org https://gems.ruby-china.com \u4e0d\u7528\u66f4\u6539Gemfile\u4e2d\u7684source. \u4f7f\u7528 gem source --add --remove \u7ba1\u7406gem\u955c\u50cf\u597d\u50cf\u5bf9 bundle install \u4e0d\u8d77\u4f5c\u7528. \u53c2\u8003: [ https://gems.ruby-china.com/ ](","title":"\u89e3\u51b3bundle install\u592a\u6162\u7684\u95ee\u9898"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/android/android%E7%B1%BB%E5%BA%93%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/","text":"android \u7c7b\u5173\u7cfb\u56fe \u00b6 \u00b6","title":"Android\u7c7b\u5e93\u7c7b\u5173\u7cfb\u56fe"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/android/android%E7%B1%BB%E5%BA%93%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/#android","text":"","title":"android \u7c7b\u5173\u7cfb\u56fe"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/android/android%E7%B1%BB%E5%BA%93%E7%B1%BB%E5%85%B3%E7%B3%BB%E5%9B%BE/#_1","text":"","title":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/iOS/iPad%20Pro%E7%9A%84%E4%BD%BF%E7%94%A8/","text":"\u4e70\u4e86\u4e2aiPad Pro ,12.9 256G\u7684. \u8bb0\u5f55\u4e00\u4e0b\u4f7f\u7528\u7684\u611f\u53d7. \u97f3\u9891\u8bbe\u5907 \u00b6 Apogee One \u662f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7684,\u6ca1\u5b89\u88c5apogee maestro app\u7684\u60c5\u51b5\u4e0b. \u5f53\u7136\u9700\u8981\u6709\u4e00\u8981type-c\u7684\u8f6c\u63a5\u5934\u4f7f\u7528\u539f\u6765\u63a5\u7535\u8111\u7684USB\u7ebf.\u6700\u91cd\u8981\u7684\u662f\u4e0d\u9700\u8981\u5185\u7f6e\u7535\u6c60\u4e86. \u4f46\u662f\u5728 jam-up \u548c Bias Fx\u4e0a\u90fd\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528,APP\u8fd8\u662f\u628a\u7cfb\u7edf\u7684Mic\u7684\u58f0\u97f3\u5305\u62econe\u4e0a\u81ea\u5e26\u7684Mic\u7684\u58f0\u97f3\u6536\u8fdb\u6765. Garage Band \u4e5f\u662f\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528\u7684. \u6709\u70b9\u610f\u5916\u7684\u662fApogee jam \u7adf\u7136\u53ef\u4ee5\u4f7f\u7528,\u5f53\u7136\u4e5f\u662f\u4f7f\u7528\u63a5\u7535\u8111\u7684\u7ebf\u52a0\u8f6c\u63a5\u5934,\u800c\u4e14\u5728jamup\u548cBias Fx\u90fd\u6b63\u5e38,\u4f7f\u7528\u7684\u662fipad\u81ea\u5e26\u7684\u5587\u53ed\u8f93\u51fa. Apple Pencil \u00b6 \u8fd8\u6ca1\u6709\u5927\u91cf\u4f7f\u7528,\u5f85\u8865\u5145\u2026","title":"iPad Pro\u7684\u4f7f\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/iOS/iPad%20Pro%E7%9A%84%E4%BD%BF%E7%94%A8/#_1","text":"Apogee One \u662f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7684,\u6ca1\u5b89\u88c5apogee maestro app\u7684\u60c5\u51b5\u4e0b. \u5f53\u7136\u9700\u8981\u6709\u4e00\u8981type-c\u7684\u8f6c\u63a5\u5934\u4f7f\u7528\u539f\u6765\u63a5\u7535\u8111\u7684USB\u7ebf.\u6700\u91cd\u8981\u7684\u662f\u4e0d\u9700\u8981\u5185\u7f6e\u7535\u6c60\u4e86. \u4f46\u662f\u5728 jam-up \u548c Bias Fx\u4e0a\u90fd\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528,APP\u8fd8\u662f\u628a\u7cfb\u7edf\u7684Mic\u7684\u58f0\u97f3\u5305\u62econe\u4e0a\u81ea\u5e26\u7684Mic\u7684\u58f0\u97f3\u6536\u8fdb\u6765. Garage Band \u4e5f\u662f\u65e0\u6cd5\u76f4\u63a5\u4f7f\u7528\u7684. \u6709\u70b9\u610f\u5916\u7684\u662fApogee jam \u7adf\u7136\u53ef\u4ee5\u4f7f\u7528,\u5f53\u7136\u4e5f\u662f\u4f7f\u7528\u63a5\u7535\u8111\u7684\u7ebf\u52a0\u8f6c\u63a5\u5934,\u800c\u4e14\u5728jamup\u548cBias Fx\u90fd\u6b63\u5e38,\u4f7f\u7528\u7684\u662fipad\u81ea\u5e26\u7684\u5587\u53ed\u8f93\u51fa.","title":"\u97f3\u9891\u8bbe\u5907"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/iOS/iPad%20Pro%E7%9A%84%E4%BD%BF%E7%94%A8/#apple-pencil","text":"\u8fd8\u6ca1\u6709\u5927\u91cf\u4f7f\u7528,\u5f85\u8865\u5145\u2026","title":"Apple Pencil"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/macOS/2020-03-19-Mac-%E5%8D%87%E7%BA%A7%E5%88%B010.13%E4%B9%8B%E5%90%8E-Cocoapods-%E4%B8%8D%E8%83%BD%E7%94%A8%28%E8%BD%AC%E8%BD%BD%29/","text":"MacOS \u5347\u7ea7\u523010.13\u4e4b\u540e\u4f7f\u7528 Pod \u63d0\u793a zsh: /usr/local/bin/pod: bad interpreter: /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin: no such file or directory \u539f\u56e0\u662f\u7cfb\u7edf\u5347\u7ea7\u4e4b\u540e\u4f7f\u7528\u4e862.3\u7684 ruby\uff0c\u4f46\u662fCocoapods\u4f3c\u4e4e\u5728link \u7684\u65f6\u5019\u628a\u5730\u5740\u56fa\u5b9a\u5728\u4e862.0\uff0c\u4e8e\u662f\u5c31\u627e\u4e0d\u5230\u3002 Cocoapods\u63a8\u8350\u7684\u89e3\u51b3\u65b9\u6848\u662f\u91cd\u88c5 gem install cocoapods // or brew reinstall cocoapods \u5982\u679c\u63d0\u793a ERROR: While executing gem ... (Gem::FilePermissionError) You don't have write permissions for the /usr/bin directory. \u5c31\u7528 sudo gem install cocoapods -n /usr/local/bin \u4e0d\u8fc7[\u53c2\u80035]\u91cc\u63d0\u5230\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u592a\u597d\u3002\u7531\u4e8e\u770b\u5230\u90a3\u7bc7\u6587\u7ae0\u7684\u65f6\u5019\u6211\u5df2\u7ecf\u7528\u4e86 sudo \u5b89\u88c5\u4e86\uff0c\u5c31\u6ca1\u6709\u5c1d\u8bd5\u4ed6\u63d0\u5230\u7684\u65b9\u6cd5\u3002\u4e0b\u6b21\u53ef\u4ee5\u8bd5\u8bd5\u3002 Gem \u00b6 \u4f46\u91cd\u88c5\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u9047\u5230\u53e6\u4e00\u4e2a\u9519\u8bef\uff0c ERROR : While executing gem ... ( TypeError ) no implicit conversion of nil into String \u89e3\u51b3\u65b9\u6848\uff1a\u5347\u7ea7 gem sudo gem update --system \u603b\u7ed3 \u00b6 \u6240\u4ee5\u603b\u4f53\u6765\u8bf4\u5c31\u662f: sudo gem update --system sudo gem install cocoapods -n /usr/local/bin \u4e24\u884c\u89e3\u51b3\u3002 Update -- 2017.12.19 \u00b6 \u8bd5\u7528\u4e86\u4e00\u4e0b[\u53c2\u80035]\u63d0\u5230\u7684 brew install ruby \u4fee\u6539 ~/.bash_profile (\u6ca1\u6709\u5c31\u521b\u5efa\u4e2a, \u82e5\u662f zsh \u4e4b\u7c7b\u4e5f\u4fee\u6539\u5bf9\u5e94\u7684 profile \u6587\u4ef6)\u6dfb\u52a0\u641c\u5bfb\u8def\u5f84\u5982\u4e0b export PATH = /usr/local/bin: $PATH \u7136\u540e source ~/.bash_profile apply \u5b83\u4e4b\u540e\u5c31\u53ef\u4ee5\u4e0d\u4f7f\u7528 sudo \u76f4\u63a5 gem install cocoapods \u4e86\uff0c\u611f\u89c9\u786e\u5b9e\u6bd4 sudo \u7684\u65b9\u5f0f\u66f4\u4f18\u96c5\u3002 \u53c2\u8003 https://github.com/CocoaPods/CocoaPods/issues/6778 https://stackoverflow.com/questions/44396215/cocoapods-not-working-in-macos-high-sierra https://github.com/rubygems/rubygems/issues/1668 https://stackoverflow.com/questions/2893889/how-do-i-fix-the-you-dont-have-write-permissions-into-the-usr-bin-directory https://blog.argcv.com/articles/4429.c \u4f5c\u8005\uff1atsiic \u94fe\u63a5\uff1a https://www.jianshu.com/p/91f3b9d8f402 \u6765\u6e90\uff1a\u7b80\u4e66 \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002","title":"Mac \u5347\u7ea7\u523010.13\u4e4b\u540e Cocoapods \u4e0d\u80fd\u7528(\u8f6c\u8f7d)"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/macOS/2020-03-19-Mac-%E5%8D%87%E7%BA%A7%E5%88%B010.13%E4%B9%8B%E5%90%8E-Cocoapods-%E4%B8%8D%E8%83%BD%E7%94%A8%28%E8%BD%AC%E8%BD%BD%29/#gem","text":"\u4f46\u91cd\u88c5\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u9047\u5230\u53e6\u4e00\u4e2a\u9519\u8bef\uff0c ERROR : While executing gem ... ( TypeError ) no implicit conversion of nil into String \u89e3\u51b3\u65b9\u6848\uff1a\u5347\u7ea7 gem sudo gem update --system","title":"Gem"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/macOS/2020-03-19-Mac-%E5%8D%87%E7%BA%A7%E5%88%B010.13%E4%B9%8B%E5%90%8E-Cocoapods-%E4%B8%8D%E8%83%BD%E7%94%A8%28%E8%BD%AC%E8%BD%BD%29/#_1","text":"\u6240\u4ee5\u603b\u4f53\u6765\u8bf4\u5c31\u662f: sudo gem update --system sudo gem install cocoapods -n /usr/local/bin \u4e24\u884c\u89e3\u51b3\u3002","title":"\u603b\u7ed3"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/macOS/2020-03-19-Mac-%E5%8D%87%E7%BA%A7%E5%88%B010.13%E4%B9%8B%E5%90%8E-Cocoapods-%E4%B8%8D%E8%83%BD%E7%94%A8%28%E8%BD%AC%E8%BD%BD%29/#update-20171219","text":"\u8bd5\u7528\u4e86\u4e00\u4e0b[\u53c2\u80035]\u63d0\u5230\u7684 brew install ruby \u4fee\u6539 ~/.bash_profile (\u6ca1\u6709\u5c31\u521b\u5efa\u4e2a, \u82e5\u662f zsh \u4e4b\u7c7b\u4e5f\u4fee\u6539\u5bf9\u5e94\u7684 profile \u6587\u4ef6)\u6dfb\u52a0\u641c\u5bfb\u8def\u5f84\u5982\u4e0b export PATH = /usr/local/bin: $PATH \u7136\u540e source ~/.bash_profile apply \u5b83\u4e4b\u540e\u5c31\u53ef\u4ee5\u4e0d\u4f7f\u7528 sudo \u76f4\u63a5 gem install cocoapods \u4e86\uff0c\u611f\u89c9\u786e\u5b9e\u6bd4 sudo \u7684\u65b9\u5f0f\u66f4\u4f18\u96c5\u3002 \u53c2\u8003 https://github.com/CocoaPods/CocoaPods/issues/6778 https://stackoverflow.com/questions/44396215/cocoapods-not-working-in-macos-high-sierra https://github.com/rubygems/rubygems/issues/1668 https://stackoverflow.com/questions/2893889/how-do-i-fix-the-you-dont-have-write-permissions-into-the-usr-bin-directory https://blog.argcv.com/articles/4429.c \u4f5c\u8005\uff1atsiic \u94fe\u63a5\uff1a https://www.jianshu.com/p/91f3b9d8f402 \u6765\u6e90\uff1a\u7b80\u4e66 \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002","title":"Update -- 2017.12.19"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/macOS/block_weak_strong/","text":"__block & __weak & __strong \u00b6 https://www.jianshu.com/p/501af50cd2d9 __block & __weak ```objectivec __block\u4e0d\u7ba1\u662fARC\u8fd8\u662fMRC\u6a21\u5f0f\u4e0b\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u53ef\u4ee5\u4fee\u9970\u5bf9\u8c61\uff0c\u8fd8\u53ef\u4ee5\u4fee\u9970\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002 __weak\u53ea\u80fd\u5728ARC\u6a21\u5f0f\u4e0b\u4f7f\u7528\uff0c\u4e5f\u53ea\u80fd\u4fee\u9970\u5bf9\u8c61\uff08NSString\uff09\uff0c\u4e0d\u80fd\u4fee\u9970\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff08int\uff09\u3002 __block\u5bf9\u8c61\u53ef\u4ee5\u5728block\u4e2d\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c__weak\u4e0d\u53ef\u4ee5\u3002 __block\u5bf9\u8c61\u5728ARC\u4e0b\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5faa\u73af\u5f15\u7528\uff0c\u975eARC\u4e0b\u4f1a\u907f\u514d\u5faa\u73af\u5f15\u7528\uff0c__weak\u53ea\u5728ARC\u4e0b\u4f7f\u7528\uff0c\u53ef\u4ee5\u907f\u514d\u5faa\u73af\u5f15\u7528\u3002 ``` __strong & __strong 1 \u3001 strong \uff0c weak \u7528\u6765\u4fee\u9970\u5c5e\u6027\u3002 strong \u7528\u6765\u4fee\u9970\u5f3a\u5f15\u7528\u7684\u5c5e\u6027\uff1b weak \u7528\u6765\u4fee\u9970\u5f31\u5f15\u7528\u7684\u5c5e\u6027\uff1b 2 \u3001 __weak , __strong \u7528\u6765\u4fee\u9970\u53d8\u91cf . __strong \u662f\u9ed8\u8ba4\u7684\u5f15\u7528\uff1b __weak \u58f0\u660e\u4e86\u4e00\u4e2a\u53ef\u4ee5\u81ea\u52a8 nil \u5316\u7684\u5f31\u5f15\u7528\u3002 https://ziecho.com/post/ios/2015-09-02 \u7ed3\u8bba 1.\u4e00\u4e2a\u7528 __weak \u4fee\u9970\u8fc7\u7684\u53d8\u91cf a \uff0c\u5982\u679c\u518d\u4f7f\u7528 __strong \u4fee\u9970\u7684\u53d8\u91cf b \u6307\u5411\u5b83\uff0c a\u6307\u5411\u7684\u5bf9\u8c61 \u7684\u5f15\u7528\u8ba1\u6570\u4f1a +1 \u3002 2.\u5f53 block \u4ece\u6808\u590d\u5236\u5230\u5806\u4e0a\u65f6\uff0c weak \u5c5e\u6027\u7684\u53d8\u91cf\u6240\u6307\u5411\u5bf9\u8c61 \u4e0d\u4f1a\u589e\u52a0\u5f15\u7528\u8ba1\u6570 \u3002","title":"\\_\\_block & \\_\\_weak & \\_\\_strong"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/macOS/block_weak_strong/#__block-__weak-__strong","text":"https://www.jianshu.com/p/501af50cd2d9 __block & __weak ```objectivec __block\u4e0d\u7ba1\u662fARC\u8fd8\u662fMRC\u6a21\u5f0f\u4e0b\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u53ef\u4ee5\u4fee\u9970\u5bf9\u8c61\uff0c\u8fd8\u53ef\u4ee5\u4fee\u9970\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002 __weak\u53ea\u80fd\u5728ARC\u6a21\u5f0f\u4e0b\u4f7f\u7528\uff0c\u4e5f\u53ea\u80fd\u4fee\u9970\u5bf9\u8c61\uff08NSString\uff09\uff0c\u4e0d\u80fd\u4fee\u9970\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff08int\uff09\u3002 __block\u5bf9\u8c61\u53ef\u4ee5\u5728block\u4e2d\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c__weak\u4e0d\u53ef\u4ee5\u3002 __block\u5bf9\u8c61\u5728ARC\u4e0b\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5faa\u73af\u5f15\u7528\uff0c\u975eARC\u4e0b\u4f1a\u907f\u514d\u5faa\u73af\u5f15\u7528\uff0c__weak\u53ea\u5728ARC\u4e0b\u4f7f\u7528\uff0c\u53ef\u4ee5\u907f\u514d\u5faa\u73af\u5f15\u7528\u3002 ``` __strong & __strong 1 \u3001 strong \uff0c weak \u7528\u6765\u4fee\u9970\u5c5e\u6027\u3002 strong \u7528\u6765\u4fee\u9970\u5f3a\u5f15\u7528\u7684\u5c5e\u6027\uff1b weak \u7528\u6765\u4fee\u9970\u5f31\u5f15\u7528\u7684\u5c5e\u6027\uff1b 2 \u3001 __weak , __strong \u7528\u6765\u4fee\u9970\u53d8\u91cf . __strong \u662f\u9ed8\u8ba4\u7684\u5f15\u7528\uff1b __weak \u58f0\u660e\u4e86\u4e00\u4e2a\u53ef\u4ee5\u81ea\u52a8 nil \u5316\u7684\u5f31\u5f15\u7528\u3002 https://ziecho.com/post/ios/2015-09-02 \u7ed3\u8bba 1.\u4e00\u4e2a\u7528 __weak \u4fee\u9970\u8fc7\u7684\u53d8\u91cf a \uff0c\u5982\u679c\u518d\u4f7f\u7528 __strong \u4fee\u9970\u7684\u53d8\u91cf b \u6307\u5411\u5b83\uff0c a\u6307\u5411\u7684\u5bf9\u8c61 \u7684\u5f15\u7528\u8ba1\u6570\u4f1a +1 \u3002 2.\u5f53 block \u4ece\u6808\u590d\u5236\u5230\u5806\u4e0a\u65f6\uff0c weak \u5c5e\u6027\u7684\u53d8\u91cf\u6240\u6307\u5411\u5bf9\u8c61 \u4e0d\u4f1a\u589e\u52a0\u5f15\u7528\u8ba1\u6570 \u3002","title":"__block &amp; __weak &amp; __strong"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/macOS/macOS-iOS%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E7%9A%84%E6%A1%86%E6%9E%B6%E5%92%8C%E5%BA%93/","text":"sentry ,\u9519\u8bef\u5f02\u5e38\u76d1\u63a7 sparkle \u5e94\u7528\u5347\u7ea7","title":"macOS iOS\u5f00\u53d1\u5e38\u7528\u7684\u6846\u67b6\u548c\u5e93"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/macOS/nsstring%E4%B8%BA%E4%BD%95%E8%A6%81%E7%94%A8copy/","text":"NSString\u4e3a\u4f55\u8981\u7528copy\uff1f\u800c\u4e0d\u662fstrong\uff1f \u00b6 strong\u548cretain\u540c\u4e49, weak\u548cassign\u540c\u4e49, \u4e3a\u4ec0\u4e48\u8981\u91c7\u7528\u8fd9\u79cd\u8bf4\u6cd5, \u4f3c\u4e4e\u662fARC\u51fa\u73b0\u540e\u4e3a\u4e86\u6d88\u9664\u5f15\u7528\u8ba1\u6570\u7684\u89c2\u5ff5\u800c\u91c7\u7528\u7684\u505a\u6cd5. \u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u7528copy, \u7531\u4e8e\u7eafNSString\u662f\u53ea\u8bfb\u7684, \u6240\u4ee5strong\u548ccopy\u7684\u7ed3\u679c\u4e00\u6837,\u636estackOverflow\u4e0a\u7684\u8bf4\u6cd5,\u662f\u4e3a\u4e86\u9632\u6b62mutable string\u88ab\u65e0\u610f\u4e2d\u4fee\u6539, NSMutableString\u662fNSString\u7684\u5b50\u7c7b, \u56e0\u6b64NSString\u6307\u9488\u53ef\u4ee5\u6301\u6709NSMutableString\u5bf9\u8c61 \u8bf4\u7684\u662f\u540c\u4e49,assign \u4fee\u9970\u539f\u59cb\u7c7b\u578b\u53d8\u91cf,weak\u4e0d\u53ef\u4ee5.","title":"NSString\u4e3a\u4f55\u8981\u7528copy\uff1f\u800c\u4e0d\u662fstrong\uff1f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/macOS/nsstring%E4%B8%BA%E4%BD%95%E8%A6%81%E7%94%A8copy/#nsstringcopystrong","text":"strong\u548cretain\u540c\u4e49, weak\u548cassign\u540c\u4e49, \u4e3a\u4ec0\u4e48\u8981\u91c7\u7528\u8fd9\u79cd\u8bf4\u6cd5, \u4f3c\u4e4e\u662fARC\u51fa\u73b0\u540e\u4e3a\u4e86\u6d88\u9664\u5f15\u7528\u8ba1\u6570\u7684\u89c2\u5ff5\u800c\u91c7\u7528\u7684\u505a\u6cd5. \u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u7528copy, \u7531\u4e8e\u7eafNSString\u662f\u53ea\u8bfb\u7684, \u6240\u4ee5strong\u548ccopy\u7684\u7ed3\u679c\u4e00\u6837,\u636estackOverflow\u4e0a\u7684\u8bf4\u6cd5,\u662f\u4e3a\u4e86\u9632\u6b62mutable string\u88ab\u65e0\u610f\u4e2d\u4fee\u6539, NSMutableString\u662fNSString\u7684\u5b50\u7c7b, \u56e0\u6b64NSString\u6307\u9488\u53ef\u4ee5\u6301\u6709NSMutableString\u5bf9\u8c61 \u8bf4\u7684\u662f\u540c\u4e49,assign \u4fee\u9970\u539f\u59cb\u7c7b\u578b\u53d8\u91cf,weak\u4e0d\u53ef\u4ee5.","title":"NSString\u4e3a\u4f55\u8981\u7528copy\uff1f\u800c\u4e0d\u662fstrong\uff1f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/10.10.4%E5%AF%B9%E9%94%AE%E7%9B%98%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7%E5%8A%A0%E5%BC%BA%E4%BA%86/","text":"10.10.4\u5bf9\u952e\u76d8\u7684\u5b89\u5168\u6027\u52a0\u5f3a\u4e86","title":"10.10.4\u5bf9\u952e\u76d8\u7684\u5b89\u5168\u6027\u52a0\u5f3a\u4e86"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/Homebrew%E7%9B%B8%E5%85%B3/","text":"\u5b89\u88c5\u65f6\u4e0d\u81ea\u52a8\u66f4\u65b0 \u00b6 export HOMEBREW_NO_AUTO_UPDATE = true \u66ff\u6362\u53ca\u91cd\u7f6eHomebrew\u9ed8\u8ba4\u6e90 \u00b6 # \u66ff\u6362brew.git: cd \" $( brew --repo ) \" git remote set-url origin https://mirrors.ustc.edu.cn/brew.git # \u66ff\u6362homebrew-core.git: cd \" $( brew --repo ) /Library/Taps/homebrew/homebrew-core\" git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git # \u91cd\u7f6ebrew.git: cd \" $( brew --repo ) \" git remote set-url origin https://github.com/Homebrew/brew.git # \u91cd\u7f6ehomebrew-core.git: cd \" $( brew --repo ) /Library/Taps/homebrew/homebrew-core\" git remote set-url origin https://github.com/Homebrew/homebrew-core.git","title":"Homebrew\u76f8\u5173"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/Homebrew%E7%9B%B8%E5%85%B3/#_1","text":"export HOMEBREW_NO_AUTO_UPDATE = true","title":"\u5b89\u88c5\u65f6\u4e0d\u81ea\u52a8\u66f4\u65b0"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/Homebrew%E7%9B%B8%E5%85%B3/#homebrew","text":"# \u66ff\u6362brew.git: cd \" $( brew --repo ) \" git remote set-url origin https://mirrors.ustc.edu.cn/brew.git # \u66ff\u6362homebrew-core.git: cd \" $( brew --repo ) /Library/Taps/homebrew/homebrew-core\" git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git # \u91cd\u7f6ebrew.git: cd \" $( brew --repo ) \" git remote set-url origin https://github.com/Homebrew/brew.git # \u91cd\u7f6ehomebrew-core.git: cd \" $( brew --repo ) /Library/Taps/homebrew/homebrew-core\" git remote set-url origin https://github.com/Homebrew/homebrew-core.git","title":"\u66ff\u6362\u53ca\u91cd\u7f6eHomebrew\u9ed8\u8ba4\u6e90"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/Keynote/","text":"\u53d6\u6d88\u62fc\u5199\u68c0\u67e5 \u00b6","title":"Keynote"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/Keynote/#_1","text":"","title":"\u53d6\u6d88\u62fc\u5199\u68c0\u67e5"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/Tmux%E6%8C%87%E5%8D%97/","text":"\u7a97\u683c\u64cd\u4f5c \u00b6 % \u5de6\u53f3\u5e73\u5206\u51fa\u4e24\u4e2a\u7a97\u683c \" \u4e0a\u4e0b\u5e73\u5206\u51fa\u4e24\u4e2a\u7a97\u683c x \u5173\u95ed\u5f53\u524d\u7a97\u683c { \u5f53\u524d\u7a97\u683c\u524d\u79fb } \u5f53\u524d\u7a97\u683c\u540e\u79fb ; \u9009\u62e9\u4e0a\u6b21\u4f7f\u7528\u7684\u7a97\u683c o \u9009\u62e9\u4e0b\u4e00\u4e2a\u7a97\u683c\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u952e\u6765\u9009\u62e9 space \u5207\u6362\u7a97\u683c\u5e03\u5c40\uff0ctmux \u5185\u7f6e\u4e86\u4e94\u79cd\u7a97\u683c\u5e03\u5c40\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u23251 \u81f3 \u23255 \u6765\u5207\u6362 z \u6700\u5927\u5316\u5f53\u524d\u7a97\u683c\uff0c\u518d\u6b21\u6267\u884c\u53ef\u6062\u590d\u539f\u6765\u5927\u5c0f q \u663e\u793a\u6240\u6709\u7a97\u683c\u7684\u5e8f\u53f7\uff0c\u5728\u5e8f\u53f7\u51fa\u73b0\u671f\u95f4\u6309\u4e0b\u5bf9\u5e94\u7684\u6570\u5b57\uff0c\u5373\u53ef\u8df3\u8f6c\u81f3\u5bf9\u5e94\u7684\u7a97\u683c \u7a97\u53e3\u64cd\u4f5c \u00b6 tmux \u9664\u4e86\u7a97\u683c\u4ee5\u5916\uff0c\u8fd8\u6709\u7a97\u53e3\uff08window\uff09 \u7684\u6982\u5ff5\u3002\u4f9d\u6b21\u4f7f\u7528\u4ee5\u4e0b\u5feb\u6377\u952e\u6765\u719f\u6089 tmux \u7684\u7a97\u53e3\u64cd\u4f5c\uff1a c \u65b0\u5efa\u7a97\u53e3\uff0c\u6b64\u65f6\u5f53\u524d\u7a97\u53e3\u4f1a\u5207\u6362\u81f3\u65b0\u7a97\u53e3\uff0c\u4e0d\u5f71\u54cd\u539f\u6709\u7a97\u53e3\u7684\u72b6\u6001 p \u5207\u6362\u81f3\u4e0a\u4e00\u7a97\u53e3 n \u5207\u6362\u81f3\u4e0b\u4e00\u7a97\u53e3 w \u7a97\u53e3\u5217\u8868\u9009\u62e9\uff0c\u6ce8\u610f macOS \u4e0b\u4f7f\u7528 \u2303p \u548c \u2303n \u8fdb\u884c\u4e0a\u4e0b\u9009\u62e9 & \u5173\u95ed\u5f53\u524d\u7a97\u53e3 , \u91cd\u547d\u540d\u7a97\u53e3\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e2d\u6587\uff0c\u91cd\u547d\u540d\u540e\u80fd\u5728 tmux \u72b6\u6001\u680f\u66f4\u5feb\u901f\u7684\u8bc6\u522b\u7a97\u53e3 id 0 \u5207\u6362\u81f3 0 \u53f7\u7a97\u53e3\uff0c\u4f7f\u7528\u5176\u4ed6\u6570\u5b57 id \u5207\u6362\u81f3\u5bf9\u5e94\u7a97\u53e3 f \u6839\u636e\u7a97\u53e3\u540d\u641c\u7d22\u9009\u62e9\u7a97\u53e3\uff0c\u53ef\u6a21\u7cca\u5339\u914d \u4f1a\u8bdd\u64cd\u4f5c \u00b6 \u5982\u679c\u8fd0\u884c\u4e86\u591a\u6b21 tmux \u547d\u4ee4\u5219\u4f1a\u5f00\u542f\u591a\u4e2a tmux \u4f1a\u8bdd\uff08session\uff09\u3002\u5728 tmux \u4f1a\u8bdd\u4e2d\uff0c\u4f7f\u7528\u524d\u7f00\u5feb\u6377\u952e \u2303b \u914d\u5408\u4ee5\u4e0b\u5feb\u6377\u952e\u53ef\u64cd\u4f5c\u4f1a\u8bdd\uff1a $ \u91cd\u547d\u540d\u5f53\u524d\u4f1a\u8bdd s \u9009\u62e9\u4f1a\u8bdd\u5217\u8868 d detach \u5f53\u524d\u4f1a\u8bdd\uff0c\u8fd0\u884c\u540e\u5c06\u4f1a\u9000\u51fa tmux \u8fdb\u7a0b\uff0c\u8fd4\u56de\u81f3 shell \u4e3b\u8fdb\u7a0b \u5728 shell \u4e3b\u8fdb\u7a0b\u4e0b\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u64cd\u4f5c tmux \u4f1a\u8bdd\uff1a tmux new -s foo # \u65b0\u5efa\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd tmux ls # \u5217\u51fa\u6240\u6709 tmux \u4f1a\u8bdd tmux a # \u6062\u590d\u81f3\u4e0a\u4e00\u6b21\u7684\u4f1a\u8bdd tmux a -t foo # \u6062\u590d\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd\uff0c\u4f1a\u8bdd\u9ed8\u8ba4\u540d\u79f0\u4e3a\u6570\u5b57 tmux kill-session -t foo # \u5220\u9664\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd tmux kill-server # \u5220\u9664\u6240\u6709\u7684\u4f1a\u8bdd \u9664\u4ee5\u4e0a\u63d0\u5230\u7684\u5feb\u6377\u952e\u4ee5\u5916\uff0ctmux \u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7684\u5feb\u6377\u952e\u548c\u547d\u4ee4\uff0c\u4f7f\u7528\u524d\u7f00\u5feb\u6377\u952e \u2303b \u52a0 ? \u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7684\u5feb\u6377\u952e\u5217\u8868\uff0c\u8be5\u5217\u8868\u89c6\u56fe\u4e3a tmux copy \u6a21\u5f0f \uff0c\u8be5\u6a21\u5f0f\u4e0b\u53ef\u4f7f\u7528\u4ee5\u4e0b\u5feb\u6377\u952e\uff08\u65e0\u9700\u52a0 \u2303b \u524d\u7f00\uff09\uff1a \u2303v \u4e0b\u4e00\u9875 Meta v \u4e0a\u4e00\u9875 \uff08tmux \u5feb\u6377\u952e\u4e3a Emacs \u98ce\u683c\uff0c\u8fd9\u91cc\u7684 Meta \u952e\u53ef\u7528 Esc \u6a21\u62df\uff09 \u2303s \u5411\u524d\u641c\u7d22 q \u9000\u51fa copy \u6a21\u5f0f","title":"Tmux\u6307\u5357"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/Tmux%E6%8C%87%E5%8D%97/#_1","text":"% \u5de6\u53f3\u5e73\u5206\u51fa\u4e24\u4e2a\u7a97\u683c \" \u4e0a\u4e0b\u5e73\u5206\u51fa\u4e24\u4e2a\u7a97\u683c x \u5173\u95ed\u5f53\u524d\u7a97\u683c { \u5f53\u524d\u7a97\u683c\u524d\u79fb } \u5f53\u524d\u7a97\u683c\u540e\u79fb ; \u9009\u62e9\u4e0a\u6b21\u4f7f\u7528\u7684\u7a97\u683c o \u9009\u62e9\u4e0b\u4e00\u4e2a\u7a97\u683c\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u952e\u6765\u9009\u62e9 space \u5207\u6362\u7a97\u683c\u5e03\u5c40\uff0ctmux \u5185\u7f6e\u4e86\u4e94\u79cd\u7a97\u683c\u5e03\u5c40\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u23251 \u81f3 \u23255 \u6765\u5207\u6362 z \u6700\u5927\u5316\u5f53\u524d\u7a97\u683c\uff0c\u518d\u6b21\u6267\u884c\u53ef\u6062\u590d\u539f\u6765\u5927\u5c0f q \u663e\u793a\u6240\u6709\u7a97\u683c\u7684\u5e8f\u53f7\uff0c\u5728\u5e8f\u53f7\u51fa\u73b0\u671f\u95f4\u6309\u4e0b\u5bf9\u5e94\u7684\u6570\u5b57\uff0c\u5373\u53ef\u8df3\u8f6c\u81f3\u5bf9\u5e94\u7684\u7a97\u683c","title":"\u7a97\u683c\u64cd\u4f5c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/Tmux%E6%8C%87%E5%8D%97/#_2","text":"tmux \u9664\u4e86\u7a97\u683c\u4ee5\u5916\uff0c\u8fd8\u6709\u7a97\u53e3\uff08window\uff09 \u7684\u6982\u5ff5\u3002\u4f9d\u6b21\u4f7f\u7528\u4ee5\u4e0b\u5feb\u6377\u952e\u6765\u719f\u6089 tmux \u7684\u7a97\u53e3\u64cd\u4f5c\uff1a c \u65b0\u5efa\u7a97\u53e3\uff0c\u6b64\u65f6\u5f53\u524d\u7a97\u53e3\u4f1a\u5207\u6362\u81f3\u65b0\u7a97\u53e3\uff0c\u4e0d\u5f71\u54cd\u539f\u6709\u7a97\u53e3\u7684\u72b6\u6001 p \u5207\u6362\u81f3\u4e0a\u4e00\u7a97\u53e3 n \u5207\u6362\u81f3\u4e0b\u4e00\u7a97\u53e3 w \u7a97\u53e3\u5217\u8868\u9009\u62e9\uff0c\u6ce8\u610f macOS \u4e0b\u4f7f\u7528 \u2303p \u548c \u2303n \u8fdb\u884c\u4e0a\u4e0b\u9009\u62e9 & \u5173\u95ed\u5f53\u524d\u7a97\u53e3 , \u91cd\u547d\u540d\u7a97\u53e3\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e2d\u6587\uff0c\u91cd\u547d\u540d\u540e\u80fd\u5728 tmux \u72b6\u6001\u680f\u66f4\u5feb\u901f\u7684\u8bc6\u522b\u7a97\u53e3 id 0 \u5207\u6362\u81f3 0 \u53f7\u7a97\u53e3\uff0c\u4f7f\u7528\u5176\u4ed6\u6570\u5b57 id \u5207\u6362\u81f3\u5bf9\u5e94\u7a97\u53e3 f \u6839\u636e\u7a97\u53e3\u540d\u641c\u7d22\u9009\u62e9\u7a97\u53e3\uff0c\u53ef\u6a21\u7cca\u5339\u914d","title":"\u7a97\u53e3\u64cd\u4f5c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/Tmux%E6%8C%87%E5%8D%97/#_3","text":"\u5982\u679c\u8fd0\u884c\u4e86\u591a\u6b21 tmux \u547d\u4ee4\u5219\u4f1a\u5f00\u542f\u591a\u4e2a tmux \u4f1a\u8bdd\uff08session\uff09\u3002\u5728 tmux \u4f1a\u8bdd\u4e2d\uff0c\u4f7f\u7528\u524d\u7f00\u5feb\u6377\u952e \u2303b \u914d\u5408\u4ee5\u4e0b\u5feb\u6377\u952e\u53ef\u64cd\u4f5c\u4f1a\u8bdd\uff1a $ \u91cd\u547d\u540d\u5f53\u524d\u4f1a\u8bdd s \u9009\u62e9\u4f1a\u8bdd\u5217\u8868 d detach \u5f53\u524d\u4f1a\u8bdd\uff0c\u8fd0\u884c\u540e\u5c06\u4f1a\u9000\u51fa tmux \u8fdb\u7a0b\uff0c\u8fd4\u56de\u81f3 shell \u4e3b\u8fdb\u7a0b \u5728 shell \u4e3b\u8fdb\u7a0b\u4e0b\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u64cd\u4f5c tmux \u4f1a\u8bdd\uff1a tmux new -s foo # \u65b0\u5efa\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd tmux ls # \u5217\u51fa\u6240\u6709 tmux \u4f1a\u8bdd tmux a # \u6062\u590d\u81f3\u4e0a\u4e00\u6b21\u7684\u4f1a\u8bdd tmux a -t foo # \u6062\u590d\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd\uff0c\u4f1a\u8bdd\u9ed8\u8ba4\u540d\u79f0\u4e3a\u6570\u5b57 tmux kill-session -t foo # \u5220\u9664\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd tmux kill-server # \u5220\u9664\u6240\u6709\u7684\u4f1a\u8bdd \u9664\u4ee5\u4e0a\u63d0\u5230\u7684\u5feb\u6377\u952e\u4ee5\u5916\uff0ctmux \u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7684\u5feb\u6377\u952e\u548c\u547d\u4ee4\uff0c\u4f7f\u7528\u524d\u7f00\u5feb\u6377\u952e \u2303b \u52a0 ? \u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7684\u5feb\u6377\u952e\u5217\u8868\uff0c\u8be5\u5217\u8868\u89c6\u56fe\u4e3a tmux copy \u6a21\u5f0f \uff0c\u8be5\u6a21\u5f0f\u4e0b\u53ef\u4f7f\u7528\u4ee5\u4e0b\u5feb\u6377\u952e\uff08\u65e0\u9700\u52a0 \u2303b \u524d\u7f00\uff09\uff1a \u2303v \u4e0b\u4e00\u9875 Meta v \u4e0a\u4e00\u9875 \uff08tmux \u5feb\u6377\u952e\u4e3a Emacs \u98ce\u683c\uff0c\u8fd9\u91cc\u7684 Meta \u952e\u53ef\u7528 Esc \u6a21\u62df\uff09 \u2303s \u5411\u524d\u641c\u7d22 q \u9000\u51fa copy \u6a21\u5f0f","title":"\u4f1a\u8bdd\u64cd\u4f5c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/iTerm2%E7%9A%84%E8%AE%BE%E7%BD%AE/","text":"normal\u548cinsert\u6a21\u5f0f\u4e0b\u8bbe\u7f6e\u4e0d\u540c\u5149\u6807 \u00b6 ~/.vimrc \u589e\u52a0\u4e0b\u9762\u4ee3\u7801 \" Change cursor shape between insert and normal mode in iTerm2.app if $TERM_PROGRAM =~ \" iTerm \" let &t_SI = \" \\< Esc> ] 50 ; CursorShape = 1 \\x 7 \" \" Vertical bar in insert mode let & t_EI = \"\\<Esc>]50;CursorShape=0\\x7\" \" Block in normal mode endif \u5149\u6807\u6309\u7167\u5355\u8bcd\u5feb\u901f\u79fb\u52a8\u8bbe\u7f6e \u00b6 iTerm2 \u5907\u5fd8\u547d\u4ee4\u884c\u5feb\u6377\u952e \u00b6 \u5feb\u6377\u952e \u4f5c\u7528\u8bf4\u660e command + f \u641c\u7d22&\u67e5\u627e \uff0c\u5982\u679c\u8f93\u5165\u641c\u7d22\u5185\u5bb9\u540e\uff0c\u6309\u4e0b tab \u952e\uff0c\u5c31\u4f1a iTerm \u81ea\u52a8\u5e2e\u9009\u4e2d\u641c\u7d22\u5173\u952e\u8bcd\uff0c\u5e76\u4e14\u81ea\u52a8\u7684\u5e2e\u6211\u4eec\u590d\u5236\u5230\u4e86\u526a\u8d34\u677f\u4e2d\u3002\u5982\u679c\u8f93\u5165\u7684\u662f shift+tab\uff0c\u5219\u81ea\u52a8\u5c06\u67e5\u627e\u5185\u5bb9\u7684\u5de6\u8fb9\u9009\u4e2d\u5e76\u590d\u5236\u3002\u6309 esc \u9000\u51fa\u641c\u7d22\u3002 command + k \u6e05\u7a7a\u5c4f\u5e55 command + d \u5782\u76f4\u5206\u5c4f command + shift + d \u6c34\u5e73\u5206\u5c4f command + ; \u67e5\u770b\u5386\u53f2\u547d\u4ee4 command + shift + h \u67e5\u770b\u526a\u8d34\u677f\u5386\u53f2\uff0c\u4f1a\u81ea\u52a8\u5217\u51fa\u8f93\u5165\u8fc7\u7684\u547d\u4ee4 command + number tab \u6807\u7b7e\u7a97\u53e3\u6765\u56de\u5207\u6362 command + option + \u2190/\u2192 \u6216 command + [ / ] \u5207\u6362\u5c4f\u5e55 ctrl + x \u7b2c\u4e00\u6b21\u6309\u65f6\uff0c\u79fb\u52a8\u5149\u6807\u81f3\u884c\u9996\uff1b\u518d\u6b21\u6309\u65f6\uff0c\u56de\u5230\u539f\u6709\u4f4d\u7f6e ctrl + a \u5230\u884c\u9996\uff08Ahead of line\uff09 ctrl + e \u5230\u884c\u5c3e\uff08End of line\uff09 ctrl + f/b \u524d\u8fdb\u540e\u9000(\u76f8\u5f53\u4e8e\u5de6\u53f3\u65b9\u5411\u952e) ctrl + u \u6e05\u9664\u5f53\u524d\u884c\uff08\u65e0\u8bba\u5149\u6807\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff09 ctrl + d \u5220\u9664\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u7684**\u5b57\u7b26** ctrl + h \u5220\u9664\u5149\u6807\u4e4b\u524d\u7684**\u5b57\u7b26** ctrl + w \u5220\u9664\u5149\u6807\u4e4b\u524d\u7684**\u5355\u8bcd** ctrl + k \u5220\u9664\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u5230\u6587\u672c\u672b\u5c3e\u7684**\u6240\u6709\u5b57\u7b26** ctrl + t \u4ea4\u6362\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u7684\u5b57\u7b26\u4e0e\u524d\u4e00\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e ctrl + c \u6216 ctrl + j \u6216 ctrl + o \u53d6\u6d88\u5f53\u524d\u884c\u8f93\u5165\u7684\u547d\u4ee4\uff08\u4e2d\u65ad\u64cd\u4f5c\uff09\u3002\u91cd\u65b0\u8d77\u4e00\u884c\u3002 ctrl + y \u7c98\u8d34\u4e4b\u524d\uff08ctrl +u/k/w\uff09\u5220\u9664\u7684\u5185\u5bb9 ctrl + p \u4e0a\u4e00\u6761\u547d\u4ee4\u3002\u8c03\u51fa\u547d\u4ee4\u5386\u53f2\u4e2d\u7684\u524d\u4e00\u6761\uff08Previous\uff09\u547d\u4ee4\uff0c\u76f8\u5f53\u4e8e\u901a\u5e38\u7684\u4e0a\u7bad\u5934 ctrl + n \u4e0b\u4e00\u6761\u547d\u4ee4\u3002\u8c03\u51fa\u547d\u4ee4\u5386\u53f2\u4e2d\u7684\u4e0b\u4e00\u6761\uff08Next\uff09\u547d\u4ee4\uff0c\u76f8\u5f53\u4e8e\u901a\u5e38\u7684\u4e0a\u7bad\u5934 ctrl + s \u51bb\u7ed3\u7ec8\u7aef\u64cd\u4f5c\uff08\u6682\u505c\u811a\u672c\uff09 ctrl + q \u6062\u590d\u51bb\u7ed3\uff08\u7ee7\u7eed\u6267\u884c\u811a\u672c\uff09 ctrl + r \u641c\u7d22\u547d\u4ee4\u5386\u53f2\u3002\u6839\u636e\u7528\u6237\u8f93\u5165\u67e5\u627e\u76f8\u5173\u5386\u53f2\u547d\u4ee4\uff08reverse-i-search\uff09 ctrl + l \u6216 command + r \u6216 clear \u6362\u5230\u65b0\u4e00\u5c4f\uff0c\u521b\u5efa\u4e00\u4e2a\u7a7a\u5c4f ctrl + i \u6216 tab \u6a2a\u884c\u5236\u8868\u7b26\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u8865\u9f50\u6307\u4ee4 !word \u91cd\u590d\u8fd0\u884c\u6700\u8fd1\u4e00\u6761\u4ee5\u201cword\u201d\u5f00\u5934\u7684\u6307\u4ee4\uff0c\u5982!ls \u6216 !l !$ \u8c03\u7528\u4e0a\u4e00\u6761\u6307\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a\u5f53\u524d\u6307\u4ee4\u5bf9\u8c61,\u5982\uff0c\u5047\u8bbe\u4e0a\u4e00\u6761\u6307\u4ee4\u4e3a\uff1a ls abc.txt bbc.txt \u90a3\u4e48\uff0c vi !$ \u76f8\u5f53\u4e8e\uff1a vi bbc.txt !number \u8c03\u7528\u6267\u884c\u6307\u5b9a\u7f16\u53f7\u7684\u5386\u53f2\u8bb0\u5f55\u6307\u4ee4,\u5982!2, !11","title":"iTerm2\u7684\u8bbe\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/iTerm2%E7%9A%84%E8%AE%BE%E7%BD%AE/#normalinsert","text":"~/.vimrc \u589e\u52a0\u4e0b\u9762\u4ee3\u7801 \" Change cursor shape between insert and normal mode in iTerm2.app if $TERM_PROGRAM =~ \" iTerm \" let &t_SI = \" \\< Esc> ] 50 ; CursorShape = 1 \\x 7 \" \" Vertical bar in insert mode let & t_EI = \"\\<Esc>]50;CursorShape=0\\x7\" \" Block in normal mode endif","title":"normal\u548cinsert\u6a21\u5f0f\u4e0b\u8bbe\u7f6e\u4e0d\u540c\u5149\u6807"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/iTerm2%E7%9A%84%E8%AE%BE%E7%BD%AE/#_1","text":"","title":"\u5149\u6807\u6309\u7167\u5355\u8bcd\u5feb\u901f\u79fb\u52a8\u8bbe\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/iTerm2%E7%9A%84%E8%AE%BE%E7%BD%AE/#iterm2","text":"\u5feb\u6377\u952e \u4f5c\u7528\u8bf4\u660e command + f \u641c\u7d22&\u67e5\u627e \uff0c\u5982\u679c\u8f93\u5165\u641c\u7d22\u5185\u5bb9\u540e\uff0c\u6309\u4e0b tab \u952e\uff0c\u5c31\u4f1a iTerm \u81ea\u52a8\u5e2e\u9009\u4e2d\u641c\u7d22\u5173\u952e\u8bcd\uff0c\u5e76\u4e14\u81ea\u52a8\u7684\u5e2e\u6211\u4eec\u590d\u5236\u5230\u4e86\u526a\u8d34\u677f\u4e2d\u3002\u5982\u679c\u8f93\u5165\u7684\u662f shift+tab\uff0c\u5219\u81ea\u52a8\u5c06\u67e5\u627e\u5185\u5bb9\u7684\u5de6\u8fb9\u9009\u4e2d\u5e76\u590d\u5236\u3002\u6309 esc \u9000\u51fa\u641c\u7d22\u3002 command + k \u6e05\u7a7a\u5c4f\u5e55 command + d \u5782\u76f4\u5206\u5c4f command + shift + d \u6c34\u5e73\u5206\u5c4f command + ; \u67e5\u770b\u5386\u53f2\u547d\u4ee4 command + shift + h \u67e5\u770b\u526a\u8d34\u677f\u5386\u53f2\uff0c\u4f1a\u81ea\u52a8\u5217\u51fa\u8f93\u5165\u8fc7\u7684\u547d\u4ee4 command + number tab \u6807\u7b7e\u7a97\u53e3\u6765\u56de\u5207\u6362 command + option + \u2190/\u2192 \u6216 command + [ / ] \u5207\u6362\u5c4f\u5e55 ctrl + x \u7b2c\u4e00\u6b21\u6309\u65f6\uff0c\u79fb\u52a8\u5149\u6807\u81f3\u884c\u9996\uff1b\u518d\u6b21\u6309\u65f6\uff0c\u56de\u5230\u539f\u6709\u4f4d\u7f6e ctrl + a \u5230\u884c\u9996\uff08Ahead of line\uff09 ctrl + e \u5230\u884c\u5c3e\uff08End of line\uff09 ctrl + f/b \u524d\u8fdb\u540e\u9000(\u76f8\u5f53\u4e8e\u5de6\u53f3\u65b9\u5411\u952e) ctrl + u \u6e05\u9664\u5f53\u524d\u884c\uff08\u65e0\u8bba\u5149\u6807\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff09 ctrl + d \u5220\u9664\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u7684**\u5b57\u7b26** ctrl + h \u5220\u9664\u5149\u6807\u4e4b\u524d\u7684**\u5b57\u7b26** ctrl + w \u5220\u9664\u5149\u6807\u4e4b\u524d\u7684**\u5355\u8bcd** ctrl + k \u5220\u9664\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u5230\u6587\u672c\u672b\u5c3e\u7684**\u6240\u6709\u5b57\u7b26** ctrl + t \u4ea4\u6362\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u7684\u5b57\u7b26\u4e0e\u524d\u4e00\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e ctrl + c \u6216 ctrl + j \u6216 ctrl + o \u53d6\u6d88\u5f53\u524d\u884c\u8f93\u5165\u7684\u547d\u4ee4\uff08\u4e2d\u65ad\u64cd\u4f5c\uff09\u3002\u91cd\u65b0\u8d77\u4e00\u884c\u3002 ctrl + y \u7c98\u8d34\u4e4b\u524d\uff08ctrl +u/k/w\uff09\u5220\u9664\u7684\u5185\u5bb9 ctrl + p \u4e0a\u4e00\u6761\u547d\u4ee4\u3002\u8c03\u51fa\u547d\u4ee4\u5386\u53f2\u4e2d\u7684\u524d\u4e00\u6761\uff08Previous\uff09\u547d\u4ee4\uff0c\u76f8\u5f53\u4e8e\u901a\u5e38\u7684\u4e0a\u7bad\u5934 ctrl + n \u4e0b\u4e00\u6761\u547d\u4ee4\u3002\u8c03\u51fa\u547d\u4ee4\u5386\u53f2\u4e2d\u7684\u4e0b\u4e00\u6761\uff08Next\uff09\u547d\u4ee4\uff0c\u76f8\u5f53\u4e8e\u901a\u5e38\u7684\u4e0a\u7bad\u5934 ctrl + s \u51bb\u7ed3\u7ec8\u7aef\u64cd\u4f5c\uff08\u6682\u505c\u811a\u672c\uff09 ctrl + q \u6062\u590d\u51bb\u7ed3\uff08\u7ee7\u7eed\u6267\u884c\u811a\u672c\uff09 ctrl + r \u641c\u7d22\u547d\u4ee4\u5386\u53f2\u3002\u6839\u636e\u7528\u6237\u8f93\u5165\u67e5\u627e\u76f8\u5173\u5386\u53f2\u547d\u4ee4\uff08reverse-i-search\uff09 ctrl + l \u6216 command + r \u6216 clear \u6362\u5230\u65b0\u4e00\u5c4f\uff0c\u521b\u5efa\u4e00\u4e2a\u7a7a\u5c4f ctrl + i \u6216 tab \u6a2a\u884c\u5236\u8868\u7b26\uff0c\u5728\u547d\u4ee4\u884c\u4e2d\u8865\u9f50\u6307\u4ee4 !word \u91cd\u590d\u8fd0\u884c\u6700\u8fd1\u4e00\u6761\u4ee5\u201cword\u201d\u5f00\u5934\u7684\u6307\u4ee4\uff0c\u5982!ls \u6216 !l !$ \u8c03\u7528\u4e0a\u4e00\u6761\u6307\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3a\u5f53\u524d\u6307\u4ee4\u5bf9\u8c61,\u5982\uff0c\u5047\u8bbe\u4e0a\u4e00\u6761\u6307\u4ee4\u4e3a\uff1a ls abc.txt bbc.txt \u90a3\u4e48\uff0c vi !$ \u76f8\u5f53\u4e8e\uff1a vi bbc.txt !number \u8c03\u7528\u6267\u884c\u6307\u5b9a\u7f16\u53f7\u7684\u5386\u53f2\u8bb0\u5f55\u6307\u4ee4,\u5982!2, !11","title":"iTerm2 \u5907\u5fd8\u547d\u4ee4\u884c\u5feb\u6377\u952e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/mac%E8%BD%AF%E4%BB%B6/mailto%E5%8D%8F%E8%AE%AE%E7%9A%84%E9%BB%98%E8%AE%A4%E5%BA%94%E7%94%A8%E8%AE%BE%E7%BD%AE/","text":"mailto\u534f\u8bae\u7684\u9ed8\u8ba4\u5e94\u7528\u8bbe\u7f6e","title":"Mailto\u534f\u8bae\u7684\u9ed8\u8ba4\u5e94\u7528\u8bbe\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/python/mkdocs%E5%AF%BC%E5%87%BApdf/","text":"mkdocs\u5bfc\u51fapdf \u00b6 \u5b89\u88c5mkpdfs\u63d2\u4ef6 pip install mkpdfs mkdocs\u4e2dplugint\u914d\u7f6e plugins : - search - mkpdfs mkdocs build \u6216\u8005 mkdocs serve pdf\u6587\u4ef6\u4f4d\u4e8e site/pdf/ \u4e0b \u9047\u5230\u7684\u95ee\u9898: \u00b6 \u6700\u7ec8\u901a\u8fc7\u964d\u7ea7\u5b89\u88c5\u89e3\u51b3 \u9996\u5148\u9047\u5230\u7684\u5c31\u662f Unable to revert mtime: /Library/Fonts \u5b89\u88c5 brew install libmagic \u540e\u4e0d\u518d\u51fa\u73b0 \u279c mkdocs git: ( master ) \u2717 mkdocs build Unable to revert mtime: /Library/Fonts Traceback ( most recent call last ) : File \"/Users/bob/.pyenv/versions/3.7.7/bin/mkdocs\" , line 8 , in <module> sys.exit ( cli ()) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 829 , in __call__ return self.main ( *args, **kwargs ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 782 , in main rv = self.invoke ( ctx ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 1259 , in invoke return _process_result ( sub_ctx.command.invoke ( sub_ctx )) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 1066 , in invoke return ctx.invoke ( self.callback, **ctx.params ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 610 , in invoke return callback ( *args, **kwargs ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/__main__.py\" , line 152 , in build_command build.build ( config.load_config ( **kwargs ) , dirty = not clean ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 197 , in load_config errors, warnings = cfg.validate () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 107 , in validate run_failed, run_warnings = self._validate () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 62 , in _validate self [ key ] = config_option.validate ( value ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 131 , in validate return self.run_validation ( value ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 609 , in run_validation plgins [ item ] = self.load_plugin ( item, cfg ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 617 , in load_plugin Plugin = self.installed_plugins [ name ] .load () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/pkg_resources/__init__.py\" , line 2443 , in load return self.resolve () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/pkg_resources/__init__.py\" , line 2449 , in resolve module = __import__ ( self.module_name, fromlist =[ '__name__' ] , level = 0 ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/__init__.py\" , line 1 , in <module> from .mkpdfs import Mkpdfs File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/mkpdfs.py\" , line 17 , in <module> class Mkpdfs ( BasePlugin ) : File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/mkpdfs.py\" , line 20 , in Mkpdfs ( 'design' , config_options.Type ( utils.string_types, default = None )) , AttributeError: module 'mkdocs.utils' has no attribute 'string_types' \u540e\u9762\u9047\u5230 AttributeError: module 'mkdocs.utils' has no attribute 'string_types' \u279c mkdocs git: ( master ) \u2717 mkdocs build Traceback ( most recent call last ) : File \"/Users/bob/.pyenv/versions/3.7.7/bin/mkdocs\" , line 8 , in <module> sys.exit ( cli ()) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 829 , in __call__ return self.main ( *args, **kwargs ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 782 , in main rv = self.invoke ( ctx ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 1259 , in invoke return _process_result ( sub_ctx.command.invoke ( sub_ctx )) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 1066 , in invoke return ctx.invoke ( self.callback, **ctx.params ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 610 , in invoke return callback ( *args, **kwargs ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/__main__.py\" , line 152 , in build_command build.build ( config.load_config ( **kwargs ) , dirty = not clean ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 197 , in load_config errors, warnings = cfg.validate () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 107 , in validate run_failed, run_warnings = self._validate () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 62 , in _validate self [ key ] = config_option.validate ( value ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 131 , in validate return self.run_validation ( value ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 609 , in run_validation plgins [ item ] = self.load_plugin ( item, cfg ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 617 , in load_plugin Plugin = self.installed_plugins [ name ] .load () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/pkg_resources/__init__.py\" , line 2443 , in load return self.resolve () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/pkg_resources/__init__.py\" , line 2449 , in resolve module = __import__ ( self.module_name, fromlist =[ '__name__' ] , level = 0 ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/__init__.py\" , line 1 , in <module> from .mkpdfs import Mkpdfs File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/mkpdfs.py\" , line 17 , in <module> class Mkpdfs ( BasePlugin ) : File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/mkpdfs.py\" , line 20 , in Mkpdfs ( 'design' , config_options.Type ( utils.string_types, default = None )) , AttributeError: module 'mkdocs.utils' has no attribute 'string_types' \u8fd9\u4e2a\u95ee\u9898\u5728\u8fd9\u91cc\u4e5f\u6709\u4eba\u9047\u5230 https://github.com/zhaoterryy/mkdocs-pdf-export-plugin/issues/76 \u6709\u4eba\u5efa\u8bae\u964d\u7ea7\u5b89\u88c5 mkdocs pip install --upgrade mkdocs==1.0.4 \u964d\u7ea7\u5b89\u88c5\u540e,\u6210\u529f\u8fd0\u884c.","title":"Mkdocs\u5bfc\u51fapdf"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/python/mkdocs%E5%AF%BC%E5%87%BApdf/#mkdocspdf","text":"\u5b89\u88c5mkpdfs\u63d2\u4ef6 pip install mkpdfs mkdocs\u4e2dplugint\u914d\u7f6e plugins : - search - mkpdfs mkdocs build \u6216\u8005 mkdocs serve pdf\u6587\u4ef6\u4f4d\u4e8e site/pdf/ \u4e0b","title":"mkdocs\u5bfc\u51fapdf"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/python/mkdocs%E5%AF%BC%E5%87%BApdf/#_1","text":"\u6700\u7ec8\u901a\u8fc7\u964d\u7ea7\u5b89\u88c5\u89e3\u51b3 \u9996\u5148\u9047\u5230\u7684\u5c31\u662f Unable to revert mtime: /Library/Fonts \u5b89\u88c5 brew install libmagic \u540e\u4e0d\u518d\u51fa\u73b0 \u279c mkdocs git: ( master ) \u2717 mkdocs build Unable to revert mtime: /Library/Fonts Traceback ( most recent call last ) : File \"/Users/bob/.pyenv/versions/3.7.7/bin/mkdocs\" , line 8 , in <module> sys.exit ( cli ()) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 829 , in __call__ return self.main ( *args, **kwargs ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 782 , in main rv = self.invoke ( ctx ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 1259 , in invoke return _process_result ( sub_ctx.command.invoke ( sub_ctx )) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 1066 , in invoke return ctx.invoke ( self.callback, **ctx.params ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 610 , in invoke return callback ( *args, **kwargs ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/__main__.py\" , line 152 , in build_command build.build ( config.load_config ( **kwargs ) , dirty = not clean ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 197 , in load_config errors, warnings = cfg.validate () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 107 , in validate run_failed, run_warnings = self._validate () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 62 , in _validate self [ key ] = config_option.validate ( value ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 131 , in validate return self.run_validation ( value ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 609 , in run_validation plgins [ item ] = self.load_plugin ( item, cfg ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 617 , in load_plugin Plugin = self.installed_plugins [ name ] .load () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/pkg_resources/__init__.py\" , line 2443 , in load return self.resolve () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/pkg_resources/__init__.py\" , line 2449 , in resolve module = __import__ ( self.module_name, fromlist =[ '__name__' ] , level = 0 ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/__init__.py\" , line 1 , in <module> from .mkpdfs import Mkpdfs File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/mkpdfs.py\" , line 17 , in <module> class Mkpdfs ( BasePlugin ) : File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/mkpdfs.py\" , line 20 , in Mkpdfs ( 'design' , config_options.Type ( utils.string_types, default = None )) , AttributeError: module 'mkdocs.utils' has no attribute 'string_types' \u540e\u9762\u9047\u5230 AttributeError: module 'mkdocs.utils' has no attribute 'string_types' \u279c mkdocs git: ( master ) \u2717 mkdocs build Traceback ( most recent call last ) : File \"/Users/bob/.pyenv/versions/3.7.7/bin/mkdocs\" , line 8 , in <module> sys.exit ( cli ()) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 829 , in __call__ return self.main ( *args, **kwargs ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 782 , in main rv = self.invoke ( ctx ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 1259 , in invoke return _process_result ( sub_ctx.command.invoke ( sub_ctx )) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 1066 , in invoke return ctx.invoke ( self.callback, **ctx.params ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/click/core.py\" , line 610 , in invoke return callback ( *args, **kwargs ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/__main__.py\" , line 152 , in build_command build.build ( config.load_config ( **kwargs ) , dirty = not clean ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 197 , in load_config errors, warnings = cfg.validate () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 107 , in validate run_failed, run_warnings = self._validate () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/base.py\" , line 62 , in _validate self [ key ] = config_option.validate ( value ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 131 , in validate return self.run_validation ( value ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 609 , in run_validation plgins [ item ] = self.load_plugin ( item, cfg ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/config/config_options.py\" , line 617 , in load_plugin Plugin = self.installed_plugins [ name ] .load () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/pkg_resources/__init__.py\" , line 2443 , in load return self.resolve () File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/pkg_resources/__init__.py\" , line 2449 , in resolve module = __import__ ( self.module_name, fromlist =[ '__name__' ] , level = 0 ) File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/__init__.py\" , line 1 , in <module> from .mkpdfs import Mkpdfs File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/mkpdfs.py\" , line 17 , in <module> class Mkpdfs ( BasePlugin ) : File \"/Users/bob/.pyenv/versions/3.7.7/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkpdfs_mkdocs/mkpdfs.py\" , line 20 , in Mkpdfs ( 'design' , config_options.Type ( utils.string_types, default = None )) , AttributeError: module 'mkdocs.utils' has no attribute 'string_types' \u8fd9\u4e2a\u95ee\u9898\u5728\u8fd9\u91cc\u4e5f\u6709\u4eba\u9047\u5230 https://github.com/zhaoterryy/mkdocs-pdf-export-plugin/issues/76 \u6709\u4eba\u5efa\u8bae\u964d\u7ea7\u5b89\u88c5 mkdocs pip install --upgrade mkdocs==1.0.4 \u964d\u7ea7\u5b89\u88c5\u540e,\u6210\u529f\u8fd0\u884c.","title":"\u9047\u5230\u7684\u95ee\u9898:"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/python/pip%E5%B8%B8%E7%94%A8%E5%8F%82%E8%80%83/","text":"pip\u955c\u50cf \u00b6 \u6e05\u534e\uff1a https://pypi.tuna.tsinghua.edu.cn/simple \u963f\u91cc\u4e91\uff1a http://mirrors.aliyun.com/pypi/simple/ \u4e2d\u56fd\u79d1\u6280\u5927\u5b66 https://pypi.mirrors.ustc.edu.cn/simple/ \u534e\u4e2d\u7406\u5de5\u5927\u5b66\uff1a http://pypi.hustunique.com/ \u5c71\u4e1c\u7406\u5de5\u5927\u5b66\uff1a http://pypi.sdutlinux.org/ \u8c46\u74e3\uff1a http://pypi.douban.com/simple/ \u4e34\u65f6\u4f7f\u7528\uff1a \u53ef\u4ee5\u5728\u4f7f\u7528pip\u7684\u65f6\u5019\u52a0\u53c2\u6570 -i https://pypi.tuna.tsinghua.edu.cn/simple \u4f8b\u5982\uff1a pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pyspider \uff0c\u8fd9\u6837\u5c31\u4f1a\u4ece\u6e05\u534e\u8fd9\u8fb9\u7684\u955c\u50cf\u53bb\u5b89\u88c5pyspider\u5e93\u3002 \u5e38\u7528 \u00b6 \u67e5\u627e\u5305\u7684\u53ef\u7528\u7248\u672c pip install packagename== \u5b89\u88c5\u6307\u5b9a\u7248\u672c pip install packagename==\u7248\u672c\u53f7 \u5347\u7ea7\u6307\u5b9a\u7248\u672c pip upgrade packagename==\u7248\u672c\u53f7","title":"Pip\u5e38\u7528\u53c2\u8003"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/python/pip%E5%B8%B8%E7%94%A8%E5%8F%82%E8%80%83/#pip","text":"\u6e05\u534e\uff1a https://pypi.tuna.tsinghua.edu.cn/simple \u963f\u91cc\u4e91\uff1a http://mirrors.aliyun.com/pypi/simple/ \u4e2d\u56fd\u79d1\u6280\u5927\u5b66 https://pypi.mirrors.ustc.edu.cn/simple/ \u534e\u4e2d\u7406\u5de5\u5927\u5b66\uff1a http://pypi.hustunique.com/ \u5c71\u4e1c\u7406\u5de5\u5927\u5b66\uff1a http://pypi.sdutlinux.org/ \u8c46\u74e3\uff1a http://pypi.douban.com/simple/ \u4e34\u65f6\u4f7f\u7528\uff1a \u53ef\u4ee5\u5728\u4f7f\u7528pip\u7684\u65f6\u5019\u52a0\u53c2\u6570 -i https://pypi.tuna.tsinghua.edu.cn/simple \u4f8b\u5982\uff1a pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pyspider \uff0c\u8fd9\u6837\u5c31\u4f1a\u4ece\u6e05\u534e\u8fd9\u8fb9\u7684\u955c\u50cf\u53bb\u5b89\u88c5pyspider\u5e93\u3002","title":"pip\u955c\u50cf"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/python/pip%E5%B8%B8%E7%94%A8%E5%8F%82%E8%80%83/#_1","text":"\u67e5\u627e\u5305\u7684\u53ef\u7528\u7248\u672c pip install packagename== \u5b89\u88c5\u6307\u5b9a\u7248\u672c pip install packagename==\u7248\u672c\u53f7 \u5347\u7ea7\u6307\u5b9a\u7248\u672c pip upgrade packagename==\u7248\u672c\u53f7","title":"\u5e38\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/python/pip%E9%94%99%E8%AF%AF%20missing%20dependencies%20for%20SOCKS%20support/","text":"pip\u9519\u8bef missing dependencies for SOCKS support pip install \u65f6\u62a5\u4ee5\u4e0b\u9519\u8bef ERROR: Could not install packages due to an EnvironmentError: Missing dependencies for SOCKS support. \u89e3\u51b3 unset all_proxy unset ALL_PROXY pip install pysocks","title":"pip\u9519\u8bef missing dependencies for SOCKS support"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/python/pyenv%E7%9A%84%E5%AE%89%E8%A3%85%E4%BF%A1%E6%81%AF/","text":"pyenv\u52a0\u901f \u00b6 pyenv\u6dd8\u5b9d\u955c\u50cf\u6e90\u52a0\u901f\uff1a https://npm.taobao.org/mirrors/python/ \u4e0b\u8f7d\u9700\u8981\u7684\u7248\u672c\u653e\u5230 ~/.pyenv/cache \u6587\u4ef6\u5939\u4e0b\u9762 \u7136\u540e\u6267\u884c pyenv install \u7248\u672c\u53f7 \u5b89\u88c5\u5bf9\u5e94\u7684python\u7248\u672c \u50bb\u74dc\u5f0f\u811a\u672c\u5982\u4e0b\uff0c\u5176\u4e2dv\u8868\u793a\u8981\u4e0b\u8f7d\u7684\u7248\u672c\u53f7 v = 3 .7.3 ; wget https://npm.taobao.org/mirrors/python/v/Python-v.tar.xz -P ~/.pyenv/cache/ ; pyenv install $v pyenv\u5728Catalina\u4e0a\u7684\u5b89\u88c5\u63d0\u793a\u4fe1\u606f \u00b6 == > openssl@1.1 A CA file has been bootstrapped using certificates from the system keychain. To add additional certificates, place .pem files in /usr/local/etc/openssl@1.1/certs and run /usr/local/opt/openssl@1.1/bin/c_rehash openssl@1.1 is keg-only, which means it was not symlinked into /usr/local, because openssl/libressl is provided by macOS so don 't link an incompatible version. If you need to have openssl@1.1 first in your PATH run: echo ' export PATH = \"/usr/local/opt/openssl@1.1/bin: $PATH \" ' >> ~/.zshrc For compilers to find openssl@1.1 you may need to set: export LDFLAGS = \"-L/usr/local/opt/openssl@1.1/lib\" export CPPFLAGS = \"-I/usr/local/opt/openssl@1.1/include\" For pkg-config to find openssl@1.1 you may need to set: export PKG_CONFIG_PATH = \"/usr/local/opt/openssl@1.1/lib/pkgconfig\" == > readline readline is keg-only, which means it was not symlinked into /usr/local, because macOS provides the BSD libedit library, which shadows libreadline. In order to prevent conflicts when programs look for libreadline we are defaulting this GNU Readline installation to keg-only. For compilers to find readline you may need to set: export LDFLAGS = \"-L/usr/local/opt/readline/lib\" export CPPFLAGS = \"-I/usr/local/opt/readline/include\" For pkg-config to find readline you may need to set: export PKG_CONFIG_PATH = \"/usr/local/opt/readline/lib/pkgconfig\"","title":"Pyenv\u7684\u5b89\u88c5\u4fe1\u606f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/python/pyenv%E7%9A%84%E5%AE%89%E8%A3%85%E4%BF%A1%E6%81%AF/#pyenv","text":"pyenv\u6dd8\u5b9d\u955c\u50cf\u6e90\u52a0\u901f\uff1a https://npm.taobao.org/mirrors/python/ \u4e0b\u8f7d\u9700\u8981\u7684\u7248\u672c\u653e\u5230 ~/.pyenv/cache \u6587\u4ef6\u5939\u4e0b\u9762 \u7136\u540e\u6267\u884c pyenv install \u7248\u672c\u53f7 \u5b89\u88c5\u5bf9\u5e94\u7684python\u7248\u672c \u50bb\u74dc\u5f0f\u811a\u672c\u5982\u4e0b\uff0c\u5176\u4e2dv\u8868\u793a\u8981\u4e0b\u8f7d\u7684\u7248\u672c\u53f7 v = 3 .7.3 ; wget https://npm.taobao.org/mirrors/python/v/Python-v.tar.xz -P ~/.pyenv/cache/ ; pyenv install $v","title":"pyenv\u52a0\u901f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/python/pyenv%E7%9A%84%E5%AE%89%E8%A3%85%E4%BF%A1%E6%81%AF/#pyenvcatalina","text":"== > openssl@1.1 A CA file has been bootstrapped using certificates from the system keychain. To add additional certificates, place .pem files in /usr/local/etc/openssl@1.1/certs and run /usr/local/opt/openssl@1.1/bin/c_rehash openssl@1.1 is keg-only, which means it was not symlinked into /usr/local, because openssl/libressl is provided by macOS so don 't link an incompatible version. If you need to have openssl@1.1 first in your PATH run: echo ' export PATH = \"/usr/local/opt/openssl@1.1/bin: $PATH \" ' >> ~/.zshrc For compilers to find openssl@1.1 you may need to set: export LDFLAGS = \"-L/usr/local/opt/openssl@1.1/lib\" export CPPFLAGS = \"-I/usr/local/opt/openssl@1.1/include\" For pkg-config to find openssl@1.1 you may need to set: export PKG_CONFIG_PATH = \"/usr/local/opt/openssl@1.1/lib/pkgconfig\" == > readline readline is keg-only, which means it was not symlinked into /usr/local, because macOS provides the BSD libedit library, which shadows libreadline. In order to prevent conflicts when programs look for libreadline we are defaulting this GNU Readline installation to keg-only. For compilers to find readline you may need to set: export LDFLAGS = \"-L/usr/local/opt/readline/lib\" export CPPFLAGS = \"-I/usr/local/opt/readline/include\" For pkg-config to find readline you may need to set: export PKG_CONFIG_PATH = \"/usr/local/opt/readline/lib/pkgconfig\"","title":"pyenv\u5728Catalina\u4e0a\u7684\u5b89\u88c5\u63d0\u793a\u4fe1\u606f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/python/pyinstaller%E5%AE%89%E8%A3%85/","text":"pyinstaller \u5728macOS\u4f7f\u7528\u65f6\u9700\u8981python\u4f7f\u7528\u5982\u4e0b\u53c2\u6570\u8fdb\u884c\u7f16\u8bd1 Some of 3rd party tool like PyInstaller might require CPython installation built with \u2013enable-framework. You can build CPython with shared library as follows. $ env PYTHON_CONFIGURE_OPTS = \u201d\u2013enable-framework\u201d pyenv install 3 .5.0","title":"Pyinstaller\u5b89\u88c5"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/","text":"Bash \u901f\u67e5\u8868 (CheatSheet) \u00b6 ############################################################################## # BASH CHEATSHEET (\u4e2d\u6587\u901f\u67e5\u8868) - by skywind (created on 2018/02/14) # Version: 43, Last Modified: 2018/04/02 17:00 # https://github.com/skywind3000/awesome-cheatsheets ############################################################################## \u5e38\u7528\u5feb\u6377\u952e \u00b6 ############################################################################## # \u5e38\u7528\u5feb\u6377\u952e\uff08\u9ed8\u8ba4\u4f7f\u7528 Emacs \u952e\u4f4d\uff09 ############################################################################## CTRL+A # \u79fb\u52a8\u5230\u884c\u9996\uff0c\u540c <Home> CTRL+B # \u5411\u540e\u79fb\u52a8\uff0c\u540c <Left> CTRL+C # \u7ed3\u675f\u5f53\u524d\u547d\u4ee4 CTRL+D # \u5220\u9664\u5149\u6807\u524d\u7684\u5b57\u7b26\uff0c\u540c <Delete> \uff0c\u6216\u8005\u6ca1\u6709\u5185\u5bb9\u65f6\uff0c\u9000\u51fa\u4f1a\u8bdd CTRL+E # \u79fb\u52a8\u5230\u884c\u672b\uff0c\u540c <End> CTRL+F # \u5411\u524d\u79fb\u52a8\uff0c\u540c <Right> CTRL+G # \u9000\u51fa\u5f53\u524d\u7f16\u8f91\uff08\u6bd4\u5982\u6b63\u5728 CTRL+R \u641c\u7d22\u5386\u53f2\u65f6\uff09 CTRL+H # \u5220\u9664\u5149\u6807\u5de6\u8fb9\u7684\u5b57\u7b26\uff0c\u540c <Backspace> CTRL+K # \u5220\u9664\u5149\u6807\u4f4d\u7f6e\u5230\u884c\u672b\u7684\u5185\u5bb9 CTRL+L # \u6e05\u5c4f\u5e76\u91cd\u65b0\u663e\u793a CTRL+N # \u79fb\u52a8\u5230\u547d\u4ee4\u5386\u53f2\u7684\u4e0b\u4e00\u884c\uff0c\u540c <Down> CTRL+O # \u7c7b\u4f3c\u56de\u8f66\uff0c\u4f46\u662f\u4f1a\u663e\u793a\u4e0b\u4e00\u884c\u5386\u53f2 CTRL+P # \u79fb\u52a8\u5230\u547d\u4ee4\u5386\u53f2\u7684\u4e0a\u4e00\u884c\uff0c\u540c <Up> CTRL+R # \u5386\u53f2\u547d\u4ee4\u53cd\u5411\u641c\u7d22\uff0c\u4f7f\u7528 CTRL+G \u9000\u51fa\u641c\u7d22 CTRL+S # \u5386\u53f2\u547d\u4ee4\u6b63\u5411\u641c\u7d22\uff0c\u4f7f\u7528 CTRL+G \u9000\u51fa\u641c\u7d22 CTRL+T # \u4ea4\u6362\u524d\u540e\u4e24\u4e2a\u5b57\u7b26 CTRL+U # \u5220\u9664\u5b57\u7b26\u5230\u884c\u9996 CTRL+V # \u8f93\u5165\u5b57\u7b26\u5b57\u9762\u91cf\uff0c\u5148\u6309 CTRL+V \u518d\u6309\u4efb\u610f\u952e CTRL+W # \u5220\u9664\u5149\u6807\u5de6\u8fb9\u7684\u4e00\u4e2a\u5355\u8bcd CTRL+X # \u5217\u51fa\u53ef\u80fd\u7684\u8865\u5168 CTRL+Y # \u7c98\u8d34\u524d\u9762 CTRL+u/k/w \u5220\u9664\u8fc7\u7684\u5185\u5bb9 CTRL+Z # \u6682\u505c\u524d\u53f0\u8fdb\u7a0b\u8fd4\u56de bash\uff0c\u9700\u8981\u65f6\u53ef\u7528 fg \u5c06\u5176\u5207\u6362\u56de\u524d\u53f0 CTRL+_ # \u64a4\u9500\uff08undo\uff09\uff0c\u6709\u7684\u7ec8\u7aef\u5c06 CTRL+_ \u6620\u5c04\u4e3a CTRL+/ \u6216 CTRL+7 ALT+b # \u5411\u540e\uff08\u5de6\u8fb9\uff09\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd ALT+d # \u5220\u9664\u5149\u6807\u540e\uff08\u53f3\u8fb9\uff09\u4e00\u4e2a\u5355\u8bcd ALT+f # \u5411\u524d\uff08\u53f3\u8fb9\uff09\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd ALT+t # \u4ea4\u6362\u5b57\u7b26 ALT+BACKSPACE # \u5220\u9664\u5149\u6807\u524d\u9762\u4e00\u4e2a\u5355\u8bcd\uff0c\u7c7b\u4f3c CTRL+W\uff0c\u4f46\u4e0d\u5f71\u54cd\u526a\u8d34\u677f CTRL+X CTRL+X # \u8fde\u7eed\u6309\u4e24\u6b21 CTRL+X\uff0c\u5149\u6807\u5728\u5f53\u524d\u4f4d\u7f6e\u548c\u884c\u9996\u6765\u56de\u8df3\u8f6c CTRL+X CTRL+E # \u7528\u4f60\u6307\u5b9a\u7684\u7f16\u8f91\u5668\uff0c\u7f16\u8f91\u5f53\u524d\u547d\u4ee4 BASH \u57fa\u672c\u64cd\u4f5c \u00b6 ############################################################################## # BASH \u57fa\u672c\u64cd\u4f5c ############################################################################## exit # \u9000\u51fa\u5f53\u524d\u767b\u9646 env # \u663e\u793a\u73af\u5883\u53d8\u91cf echo $SHELL # \u663e\u793a\u4f60\u5728\u4f7f\u7528\u4ec0\u4e48 SHELL bash # \u4f7f\u7528 bash\uff0c\u7528 exit \u8fd4\u56de which bash # \u641c\u7d22 $PATH\uff0c\u67e5\u627e\u54ea\u4e2a\u7a0b\u5e8f\u5bf9\u5e94\u547d\u4ee4 bash whereis bash # \u641c\u7d22\u53ef\u6267\u884c\uff0c\u5934\u6587\u4ef6\u548c\u5e2e\u52a9\u4fe1\u606f\u7684\u4f4d\u7f6e\uff0c\u4f7f\u7528\u7cfb\u7edf\u5185\u5efa\u6570\u636e\u5e93 whatis bash # \u67e5\u770b\u67d0\u4e2a\u547d\u4ee4\u7684\u89e3\u91ca\uff0c\u4e00\u53e5\u8bdd\u544a\u8bc9\u4f60\u8fd9\u662f\u5e72\u4ec0\u4e48\u7684 clear # \u6e05\u521d\u5c4f\u5e55\u5185\u5bb9 reset # \u91cd\u7f6e\u7ec8\u7aef\uff08\u5f53\u4f60\u4e0d\u5c0f\u5fc3 cat \u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\uff0c\u7ec8\u7aef\u72b6\u6001\u4e71\u6389\u65f6\u4f7f\u7528\uff09 \u76ee\u5f55\u64cd\u4f5c \u00b6 ############################################################################## # \u76ee\u5f55\u64cd\u4f5c ############################################################################## cd # \u8fd4\u56de\u81ea\u5df1 $HOME \u76ee\u5f55 cd { dirname } # \u8fdb\u5165\u76ee\u5f55 pwd # \u663e\u793a\u5f53\u524d\u6240\u5728\u76ee\u5f55 mkdir { dirname } # \u521b\u5efa\u76ee\u5f55 mkdir -p { dirname } # \u9012\u5f52\u521b\u5efa\u76ee\u5f55 pushd { dirname } # \u76ee\u5f55\u538b\u6808\u5e76\u8fdb\u5165\u65b0\u76ee\u5f55 popd # \u5f39\u51fa\u5e76\u8fdb\u5165\u6808\u9876\u7684\u76ee\u5f55 dirs -v # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u6808 cd - # \u56de\u5230\u4e4b\u524d\u7684\u76ee\u5f55 cd - { N } # \u5207\u6362\u5230\u76ee\u5f55\u6808\u4e2d\u7684\u7b2c N\u4e2a\u76ee\u5f55\uff0c\u6bd4\u5982 cd -2 \u5c06\u5207\u6362\u5230\u7b2c\u4e8c\u4e2a \u6587\u4ef6\u64cd\u4f5c \u00b6 ############################################################################## # \u6587\u4ef6\u64cd\u4f5c ############################################################################## ls # \u663e\u793a\u5f53\u524d\u76ee\u5f55\u5185\u5bb9\uff0c\u540e\u9762\u53ef\u63a5\u76ee\u5f55\u540d\uff1als {dir} \u663e\u793a\u6307\u5b9a\u76ee\u5f55 ls -l # \u5217\u8868\u65b9\u5f0f\u663e\u793a\u76ee\u5f55\u5185\u5bb9\uff0c\u5305\u62ec\u6587\u4ef6\u65e5\u671f\uff0c\u5927\u5c0f\uff0c\u6743\u9650\u7b49\u4fe1\u606f ls -a # \u663e\u793a\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff08.\u5f00\u5934\u7684\u6587\u4ef6/\u76ee\u5f55\u540d\uff09 ln -s { fn } { link } # \u7ed9\u6307\u5b9a\u6587\u4ef6\u521b\u5efa\u4e00\u4e2a\u8f6f\u94fe\u63a5 cp { src } { dest } # \u62f7\u8d1d\u6587\u4ef6\uff0ccp -r dir1 dir2 \u53ef\u4ee5\u9012\u5f52\u62f7\u8d1d\uff08\u76ee\u5f55\uff09 rm { fn } # \u5220\u9664\u6587\u4ef6\uff0crm -r \u9012\u5f52\u5220\u9664\u76ee\u5f55\uff0crm -f \u5f3a\u5236\u5220\u9664 mv { src } { dest } # \u79fb\u52a8\u6587\u4ef6\uff0c\u5982\u679c dest \u662f\u76ee\u5f55\uff0c\u5219\u79fb\u52a8\uff0c\u662f\u6587\u4ef6\u540d\u5219\u8986\u76d6 touch { fn } # \u521b\u5efa\u6216\u8005\u66f4\u65b0\u4e00\u4e0b\u5236\u5b9a\u6587\u4ef6 cat { fn } # \u8f93\u51fa\u6587\u4ef6\u539f\u59cb\u5185\u5bb9 any_cmd > { fn } # \u6267\u884c\u4efb\u610f\u547d\u4ee4\u5e76\u5c06\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6307\u5b9a\u6587\u4ef6 more { fn } # \u9010\u5c4f\u663e\u793a\u67d0\u6587\u4ef6\u5185\u5bb9\uff0c\u7a7a\u683c\u7ffb\u9875\uff0cq \u9000\u51fa less { fn } # \u66f4\u9ad8\u7ea7\u70b9\u7684 more\uff0c\u66f4\u591a\u64cd\u4f5c\uff0cq \u9000\u51fa head { fn } # \u663e\u793a\u6587\u4ef6\u5934\u90e8\u6570\u884c\uff0c\u53ef\u7528 head -3 abc.txt \u663e\u793a\u5934\u4e09\u884c tail { fn } # \u663e\u793a\u6587\u4ef6\u5c3e\u90e8\u6570\u884c\uff0c\u53ef\u7528 tail -3 abc.txt \u663e\u793a\u5c3e\u90e8\u4e09\u884c tail -f { fn } # \u6301\u7eed\u663e\u793a\u6587\u4ef6\u5c3e\u90e8\u6570\u636e\uff0c\u53ef\u7528\u4e8e\u76d1\u63a7\u65e5\u5fd7 nano { fn } # \u4f7f\u7528 nano \u7f16\u8f91\u5668\u7f16\u8f91\u6587\u4ef6 vim { fn } # \u4f7f\u7528 vim \u7f16\u8f91\u6587\u4ef6 diff { f1 } { f2 } # \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 wc { fn } # \u7edf\u8ba1\u6587\u4ef6\u6709\u591a\u5c11\u884c\uff0c\u591a\u5c11\u4e2a\u5355\u8bcd chmod 644 { fn } # \u4fee\u6539\u6587\u4ef6\u6743\u9650\u4e3a 644\uff0c\u53ef\u4ee5\u63a5 -R \u5bf9\u76ee\u5f55\u5faa\u73af\u6539\u6743\u9650 chgrp group { fn } # \u4fee\u6539\u6587\u4ef6\u6240\u5c5e\u7684\u7528\u6237\u7ec4 chown user1 { fn } # \u4fee\u6539\u6587\u4ef6\u6240\u6709\u4eba\u4e3a user1, chown user1:group1 fn \u53ef\u4ee5\u4fee\u6539\u7ec4 file { fn } # \u68c0\u6d4b\u6587\u4ef6\u7684\u7c7b\u578b\u548c\u7f16\u7801 basename { fn } # \u67e5\u770b\u6587\u4ef6\u7684\u540d\u5b57\uff08\u4e0d\u5305\u62ec\u8def\u5f84\uff09 dirname { fn } # \u67e5\u770b\u6587\u4ef6\u7684\u8def\u5f84\uff08\u4e0d\u5305\u62ec\u540d\u5b57\uff09 grep { pat } { fn } # \u5728\u6587\u4ef6\u4e2d\u67e5\u627e\u51fa\u73b0\u8fc7 pat \u7684\u5185\u5bb9 grep -r { pat } . # \u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u9012\u5f52\u67e5\u627e\u6240\u6709\u51fa\u73b0\u8fc7 pat \u7684\u6587\u4ef6\u5185\u5bb9 stat { fn } # \u663e\u793a\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f \u7528\u6237\u7ba1\u7406 \u00b6 ############################################################################## # \u7528\u6237\u7ba1\u7406 ############################################################################## whoami # \u663e\u793a\u6211\u7684\u7528\u6237\u540d who # \u663e\u793a\u5df2\u767b\u9646\u7528\u6237\u4fe1\u606f\uff0cw / who / users \u5185\u5bb9\u7565\u6709\u4e0d\u540c w # \u663e\u793a\u5df2\u767b\u9646\u7528\u6237\u4fe1\u606f\uff0cw / who / users \u5185\u5bb9\u7565\u6709\u4e0d\u540c users # \u663e\u793a\u5df2\u767b\u9646\u7528\u6237\u4fe1\u606f\uff0cw / who / users \u5185\u5bb9\u7565\u6709\u4e0d\u540c passwd # \u4fee\u6539\u5bc6\u7801\uff0cpasswd {user} \u53ef\u4ee5\u7528\u4e8e root \u4fee\u6539\u522b\u4eba\u5bc6\u7801 finger { user } # \u663e\u793a\u67d0\u7528\u6237\u4fe1\u606f\uff0c\u5305\u62ec id, \u540d\u5b57, \u767b\u9646\u72b6\u6001\u7b49 adduser { user } # \u6dfb\u52a0\u7528\u6237 deluser { user } # \u5220\u9664\u7528\u6237 w # \u67e5\u770b\u8c01\u5728\u7ebf su # \u5207\u6362\u5230 root \u7528\u6237 su - # \u5207\u6362\u5230 root \u7528\u6237\u5e76\u767b\u9646\uff08\u6267\u884c\u767b\u9646\u811a\u672c\uff09 su { user } # \u5207\u6362\u5230\u67d0\u7528\u6237 su - { user } # \u5207\u6362\u5230\u67d0\u7528\u6237\u5e76\u767b\u9646\uff08\u6267\u884c\u767b\u9646\u811a\u672c\uff09 id { user } # \u67e5\u770b\u7528\u6237\u7684 uid\uff0cgid \u4ee5\u53ca\u6240\u5c5e\u5176\u4ed6\u7528\u6237\u7ec4 id -u { user } # \u6253\u5370\u7528\u6237 uid id -g { user } # \u6253\u5370\u7528\u6237 gid write { user } # \u5411\u67d0\u7528\u6237\u53d1\u9001\u4e00\u53e5\u6d88\u606f last # \u663e\u793a\u6700\u8fd1\u7528\u6237\u767b\u9646\u5217\u8868 last { user } # \u663e\u793a\u767b\u9646\u8bb0\u5f55 lastb # \u663e\u793a\u5931\u8d25\u767b\u9646\u8bb0\u5f55 lastlog # \u663e\u793a\u6240\u6709\u7528\u6237\u7684\u6700\u8fd1\u767b\u9646\u8bb0\u5f55 sudo { command } # \u4ee5 root \u6743\u9650\u6267\u884c\u67d0\u547d\u4ee4 \u8fdb\u7a0b\u7ba1\u7406 \u00b6 ############################################################################## # \u8fdb\u7a0b\u7ba1\u7406 ############################################################################## ps # \u67e5\u770b\u5f53\u524d\u4f1a\u8bdd\u8fdb\u7a0b ps ax # \u67e5\u770b\u6240\u6709\u8fdb\u7a0b\uff0c\u7c7b\u4f3c ps -e ps aux # \u67e5\u770b\u6240\u6709\u8fdb\u7a0b\u8be6\u7ec6\u4fe1\u606f\uff0c\u7c7b\u4f3c ps -ef ps auxww # \u67e5\u770b\u6240\u6709\u8fdb\u7a0b\uff0c\u5e76\u4e14\u663e\u793a\u8fdb\u7a0b\u7684\u5b8c\u6574\u542f\u52a8\u547d\u4ee4 ps -u { user } # \u67e5\u770b\u67d0\u7528\u6237\u8fdb\u7a0b ps axjf # \u5217\u51fa\u8fdb\u7a0b\u6811 ps xjf -u { user } # \u5217\u51fa\u67d0\u7528\u6237\u7684\u8fdb\u7a0b\u6811 ps -eo pid,user,command # \u6309\u7528\u6237\u6307\u5b9a\u7684\u683c\u5f0f\u67e5\u770b\u8fdb\u7a0b ps aux | grep httpd # \u67e5\u770b\u540d\u4e3a httpd \u7684\u6240\u6709\u8fdb\u7a0b ps --ppid { pid } # \u67e5\u770b\u7236\u8fdb\u7a0b\u4e3a pid \u7684\u6240\u6709\u8fdb\u7a0b pstree # \u6811\u5f62\u5217\u51fa\u6240\u6709\u8fdb\u7a0b\uff0cpstree \u9ed8\u8ba4\u4e00\u822c\u4e0d\u5e26\uff0c\u9700\u5b89\u88c5 pstree { user } # \u8fdb\u7a0b\u6811\u5217\u51fa\u67d0\u7528\u6237\u7684\u8fdb\u7a0b pstree -u # \u6811\u5f62\u5217\u51fa\u6240\u6709\u8fdb\u7a0b\u4ee5\u53ca\u6240\u5c5e\u7528\u6237 pgrep { procname } # \u641c\u7d22\u540d\u5b57\u5339\u914d\u7684\u8fdb\u7a0b\u7684 pid\uff0c\u6bd4\u5982 pgrep apache2 kill { pid } # \u7ed3\u675f\u8fdb\u7a0b kill -9 { pid } # \u5f3a\u5236\u7ed3\u675f\u8fdb\u7a0b\uff0c9/SIGKILL \u662f\u5f3a\u5236\u4e0d\u53ef\u6355\u83b7\u7ed3\u675f\u4fe1\u53f7 kill -KILL { pid } # \u5f3a\u5236\u6267\u884c\u8fdb\u7a0b\uff0ckill -9 \u7684\u53e6\u5916\u4e00\u79cd\u5199\u6cd5 kill -l # \u67e5\u770b\u6240\u6709\u4fe1\u53f7 kill -l TERM # \u67e5\u770b TERM \u4fe1\u53f7\u7684\u7f16\u53f7 killall { procname } # \u6309\u540d\u79f0\u7ed3\u675f\u6240\u6709\u8fdb\u7a0b pkill { procname } # \u6309\u540d\u79f0\u7ed3\u675f\u8fdb\u7a0b\uff0c\u9664\u540d\u79f0\u5916\u8fd8\u53ef\u4ee5\u6709\u5176\u4ed6\u53c2\u6570 top # \u67e5\u770b\u6700\u6d3b\u8dc3\u7684\u8fdb\u7a0b top -u { user } # \u67e5\u770b\u67d0\u7528\u6237\u6700\u6d3b\u8dc3\u7684\u8fdb\u7a0b any_command & # \u5728\u540e\u53f0\u8fd0\u884c\u67d0\u547d\u4ee4\uff0c\u4e5f\u53ef\u7528 CTRL+Z \u5c06\u5f53\u524d\u8fdb\u7a0b\u6302\u5230\u540e\u53f0 jobs # \u67e5\u770b\u6240\u6709\u540e\u53f0\u8fdb\u7a0b\uff08jobs\uff09 bg # \u67e5\u770b\u540e\u53f0\u8fdb\u7a0b\uff0c\u5e76\u5207\u6362\u8fc7\u53bb fg # \u5207\u6362\u540e\u53f0\u8fdb\u7a0b\u5230\u524d\u53f0 fg { job } # \u5207\u6362\u7279\u5b9a\u540e\u53f0\u8fdb\u7a0b\u5230\u524d\u53f0 trap cmd sig1 sig2 # \u5728\u811a\u672c\u4e2d\u8bbe\u7f6e\u4fe1\u53f7\u5904\u7406\u547d\u4ee4 trap \"\" sig1 sig2 # \u5728\u811a\u672c\u4e2d\u5c4f\u853d\u67d0\u4fe1\u53f7 trap - sig1 sig2 # \u6062\u590d\u9ed8\u8ba4\u4fe1\u53f7\u5904\u7406\u884c\u4e3a nohup { command } # \u957f\u671f\u8fd0\u884c\u67d0\u7a0b\u5e8f\uff0c\u5728\u4f60\u9000\u51fa\u767b\u9646\u90fd\u4fdd\u6301\u5b83\u8fd0\u884c nohup { command } & # \u5728\u540e\u53f0\u957f\u671f\u8fd0\u884c\u67d0\u7a0b\u5e8f disown { PID | JID } # \u5c06\u8fdb\u7a0b\u4ece\u540e\u53f0\u4efb\u52a1\u5217\u8868\uff08jobs\uff09\u79fb\u9664 wait # \u7b49\u5f85\u6240\u6709\u540e\u53f0\u8fdb\u7a0b\u4efb\u52a1\u7ed3\u675f \u5e38\u7528\u547d\u4ee4\uff1aSSH / \u7cfb\u7edf\u4fe1\u606f / \u7f51\u7edc \u00b6 ############################################################################## # \u5e38\u7528\u547d\u4ee4\uff1aSSH / \u7cfb\u7edf\u4fe1\u606f / \u7f51\u7edc ############################################################################## ssh user@host # \u4ee5\u7528\u6237 user \u767b\u9646\u5230\u8fdc\u7a0b\u4e3b\u673a host ssh -p { port } user@host # \u6307\u5b9a\u7aef\u53e3\u767b\u9646\u4e3b\u673a ssh-copy-id user@host # \u62f7\u8d1d\u4f60\u7684 ssh key \u5230\u8fdc\u7a0b\u4e3b\u673a\uff0c\u907f\u514d\u91cd\u590d\u8f93\u5165\u5bc6\u7801 scp { fn } user@host:path # \u62f7\u8d1d\u6587\u4ef6\u5230\u8fdc\u7a0b\u4e3b\u673a scp user@host:path dest # \u4ece\u8fdc\u7a0b\u4e3b\u673a\u62f7\u8d1d\u6587\u4ef6\u56de\u6765 scp -P { port } ... # \u6307\u5b9a\u7aef\u53e3\u8fdc\u7a0b\u62f7\u8d1d\u6587\u4ef6 uname -a # \u67e5\u770b\u5185\u6838\u7248\u672c\u7b49\u4fe1\u606f man { help } # \u67e5\u770b\u5e2e\u52a9 man -k { keyword } # \u67e5\u770b\u54ea\u4e9b\u5e2e\u52a9\u6587\u6863\u91cc\u5305\u542b\u4e86\u8be5\u5173\u952e\u5b57 info { help } # \u67e5\u770b info pages\uff0c\u6bd4 man \u66f4\u5f3a\u7684\u5e2e\u52a9\u7cfb\u7edf uptime # \u67e5\u770b\u7cfb\u7edf\u542f\u52a8\u65f6\u95f4 date # \u663e\u793a\u65e5\u671f cal # \u663e\u793a\u65e5\u5386 vmstat # \u663e\u793a\u5185\u5b58\u548c CPU \u4f7f\u7528\u60c5\u51b5 vmstat 10 # \u6bcf 10 \u79d2\u6253\u5370\u4e00\u884c\u5185\u5b58\u548c CPU\u60c5\u51b5\uff0cCTRL+C \u9000\u51fa free # \u663e\u793a\u5185\u5b58\u548c\u4ea4\u6362\u533a\u4f7f\u7528\u60c5\u51b5 df # \u663e\u793a\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5 du # \u663e\u793a\u5f53\u524d\u76ee\u5f55\u5360\u7528\uff0cdu . --max-depth=2 \u53ef\u4ee5\u6307\u5b9a\u6df1\u5ea6 uname # \u663e\u793a\u7cfb\u7edf\u7248\u672c\u53f7 hostname # \u663e\u793a\u4e3b\u673a\u540d\u79f0 showkey -a # \u67e5\u770b\u7ec8\u7aef\u53d1\u9001\u7684\u6309\u952e\u7f16\u7801 ping { host } # ping \u8fdc\u7a0b\u4e3b\u673a\u5e76\u663e\u793a\u7ed3\u679c\uff0cCTRL+C \u9000\u51fa ping -c N { host } # ping \u8fdc\u7a0b\u4e3b\u673a N \u6b21 traceroute { host } # \u4fa6\u6d4b\u8def\u7531\u8fde\u901a\u60c5\u51b5 mtr { host } # \u9ad8\u7ea7\u7248\u672c traceroute host { domain } # DNS \u67e5\u8be2\uff0c{domain} \u524d\u9762\u53ef\u52a0 -a \u67e5\u770b\u8be6\u7ec6\u4fe1\u606f whois { domain } # \u53d6\u5f97\u57df\u540d whois \u4fe1\u606f dig { domain } # \u53d6\u5f97\u57df\u540d dns \u4fe1\u606f route -n # \u67e5\u770b\u8def\u7531\u8868 netstat -a # \u5217\u51fa\u6240\u6709\u7aef\u53e3 netstat -an # \u67e5\u770b\u6240\u6709\u8fde\u63a5\u4fe1\u606f\uff0c\u4e0d\u89e3\u6790\u57df\u540d netstat -anp # \u67e5\u770b\u6240\u6709\u8fde\u63a5\u4fe1\u606f\uff0c\u5305\u542b\u8fdb\u7a0b\u4fe1\u606f\uff08\u9700\u8981 sudo\uff09 netstat -l # \u67e5\u770b\u6240\u6709\u76d1\u542c\u7684\u7aef\u53e3 netstat -t # \u67e5\u770b\u6240\u6709 TCP \u94fe\u63a5 netstat -lntu # \u663e\u793a\u6240\u6709\u6b63\u5728\u76d1\u542c\u7684 TCP \u548c UDP \u4fe1\u606f netstat -lntup # \u663e\u793a\u6240\u6709\u6b63\u5728\u76d1\u542c\u7684 socket \u53ca\u8fdb\u7a0b\u4fe1\u606f netstat -i # \u663e\u793a\u7f51\u5361\u4fe1\u606f netstat -rn # \u663e\u793a\u5f53\u524d\u7cfb\u7edf\u8def\u7531\u8868\uff0c\u540c route -n ss -an # \u6bd4 netstat -an \u66f4\u5feb\u901f\u66f4\u8be6\u7ec6 ss -s # \u7edf\u8ba1 TCP \u7684 established, wait \u7b49 wget { url } # \u4e0b\u8f7d\u6587\u4ef6\uff0c\u53ef\u52a0 --no-check-certificate \u5ffd\u7565 ssl \u9a8c\u8bc1 wget -qO- { url } # \u4e0b\u8f7d\u6587\u4ef6\u5e76\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\uff08\u4e0d\u4fdd\u5b58\uff09 curl -sL { url } # \u540c wget -qO- {url} \u6ca1\u6709 wget \u7684\u65f6\u5019\u4f7f\u7528 sz { file } # \u53d1\u9001\u6587\u4ef6\u5230\u7ec8\u7aef\uff0czmodem \u534f\u8bae rz # \u63a5\u6536\u7ec8\u7aef\u53d1\u9001\u8fc7\u6765\u7684\u6587\u4ef6 \u53d8\u91cf\u64cd\u4f5c \u00b6 ############################################################################## # \u53d8\u91cf\u64cd\u4f5c ############################################################################## varname = value # \u5b9a\u4e49\u53d8\u91cf varname = value command # \u5b9a\u4e49\u5b50\u8fdb\u7a0b\u53d8\u91cf\u5e76\u6267\u884c\u5b50\u8fdb\u7a0b echo $varname # \u67e5\u770b\u53d8\u91cf\u5185\u5bb9 echo $$ # \u67e5\u770b\u5f53\u524d shell \u7684\u8fdb\u7a0b\u53f7 echo $! # \u67e5\u770b\u6700\u8fd1\u8c03\u7528\u7684\u540e\u53f0\u4efb\u52a1\u8fdb\u7a0b\u53f7 echo $? # \u67e5\u770b\u6700\u8fd1\u4e00\u6761\u547d\u4ee4\u7684\u8fd4\u56de\u7801 export VARNAME = value # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff08\u5c06\u4f1a\u5f71\u54cd\u5230\u5b50\u8fdb\u7a0b\uff09 array [ 0 ]= valA # \u5b9a\u4e49\u6570\u7ec4 array [ 1 ]= valB array [ 2 ]= valC array =([ 0 ]= valA [ 1 ]= valB [ 2 ]= valC ) # \u53e6\u4e00\u79cd\u65b9\u5f0f array =( valA valB valC ) # \u53e6\u4e00\u79cd\u65b9\u5f0f ${ array [i] } # \u53d6\u5f97\u6570\u7ec4\u4e2d\u7684\u5143\u7d20 ${# array [@] } # \u53d6\u5f97\u6570\u7ec4\u7684\u957f\u5ea6 ${# array [i] } # \u53d6\u5f97\u6570\u7ec4\u4e2d\u67d0\u4e2a\u53d8\u91cf\u7684\u957f\u5ea6 declare -a # \u67e5\u770b\u6240\u6709\u6570\u7ec4 declare -f # \u67e5\u770b\u6240\u6709\u51fd\u6570 declare -F # \u67e5\u770b\u6240\u6709\u51fd\u6570\uff0c\u4ec5\u663e\u793a\u51fd\u6570\u540d declare -i # \u67e5\u770b\u6240\u6709\u6574\u6570 declare -r # \u67e5\u770b\u6240\u6709\u53ea\u8bfb\u53d8\u91cf declare -x # \u67e5\u770b\u6240\u6709\u88ab\u5bfc\u51fa\u6210\u73af\u5883\u53d8\u91cf\u7684\u4e1c\u897f declare -p varname # \u8f93\u51fa\u53d8\u91cf\u662f\u600e\u4e48\u5b9a\u4e49\u7684\uff08\u7c7b\u578b+\u503c\uff09 ${ varname :- word } # \u5982\u679c\u53d8\u91cf\u4e0d\u4e3a\u7a7a\u5219\u8fd4\u56de\u53d8\u91cf\uff0c\u5426\u5219\u8fd4\u56de word ${ varname :=word } # \u5982\u679c\u53d8\u91cf\u4e0d\u4e3a\u7a7a\u5219\u8fd4\u56de\u53d8\u91cf\uff0c\u5426\u5219\u8d4b\u503c\u6210 word \u5e76\u8fd4\u56de ${ varname :?message } # \u5982\u679c\u53d8\u91cf\u4e0d\u4e3a\u7a7a\u5219\u8fd4\u56de\u53d8\u91cf\uff0c\u5426\u5219\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u9000\u51fa ${ varname :+word } # \u5982\u679c\u53d8\u91cf\u4e0d\u4e3a\u7a7a\u5219\u8fd4\u56de word\uff0c\u5426\u5219\u8fd4\u56de null ${ varname : offset : len } # \u53d6\u5f97\u5b57\u7b26\u4e32\u7684\u5b50\u5b57\u7b26\u4e32 ${ variable #pattern } # \u5982\u679c\u53d8\u91cf\u5934\u90e8\u5339\u914d pattern\uff0c\u5219\u5220\u9664\u6700\u5c0f\u5339\u914d\u90e8\u5206\u8fd4\u56de\u5269\u4e0b\u7684 ${ variable ##pattern } # \u5982\u679c\u53d8\u91cf\u5934\u90e8\u5339\u914d pattern\uff0c\u5219\u5220\u9664\u6700\u5927\u5339\u914d\u90e8\u5206\u8fd4\u56de\u5269\u4e0b\u7684 ${ variable %pattern } # \u5982\u679c\u53d8\u91cf\u5c3e\u90e8\u5339\u914d pattern\uff0c\u5219\u5220\u9664\u6700\u5c0f\u5339\u914d\u90e8\u5206\u8fd4\u56de\u5269\u4e0b\u7684 ${ variable %%pattern } # \u5982\u679c\u53d8\u91cf\u5c3e\u90e8\u5339\u914d pattern\uff0c\u5219\u5220\u9664\u6700\u5927\u5339\u914d\u90e8\u5206\u8fd4\u56de\u5269\u4e0b\u7684 ${ variable /pattern/str } # \u5c06\u53d8\u91cf\u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d pattern \u7684\u66ff\u6362\u6210 str\uff0c\u5e76\u8fd4\u56de ${ variable //pattern/str } # \u5c06\u53d8\u91cf\u4e2d\u6240\u6709\u5339\u914d pattern \u7684\u5730\u65b9\u66ff\u6362\u6210 str \u5e76\u8fd4\u56de ${# varname } # \u8fd4\u56de\u5b57\u7b26\u4e32\u957f\u5ea6 * ( patternlist ) # \u96f6\u6b21\u6216\u8005\u591a\u6b21\u5339\u914d + ( patternlist ) # \u4e00\u6b21\u6216\u8005\u591a\u6b21\u5339\u914d ? ( patternlist ) # \u96f6\u6b21\u6216\u8005\u4e00\u6b21\u5339\u914d @ ( patternlist ) # \u5355\u8bcd\u5339\u914d ! ( patternlist ) # \u4e0d\u5339\u914d array =( $text ) # \u6309\u7a7a\u683c\u5206\u9694 text \u6210\u6570\u7ec4\uff0c\u5e76\u8d4b\u503c\u7ed9\u53d8\u91cf IFS = \"/\" array =( $text ) # \u6309\u659c\u6746\u5206\u9694\u5b57\u7b26\u4e32 text \u6210\u6570\u7ec4\uff0c\u5e76\u8d4b\u503c\u7ed9\u53d8\u91cf text = \" ${ array [*] } \" # \u7528\u7a7a\u683c\u94fe\u63a5\u6570\u7ec4\u5e76\u8d4b\u503c\u7ed9\u53d8\u91cf text = $( IFS = / ; echo \" ${ array [*] } \" ) # \u7528\u659c\u6760\u94fe\u63a5\u6570\u7ec4\u5e76\u8d4b\u503c\u7ed9\u53d8\u91cf $( UNIX command ) # \u8fd0\u884c\u547d\u4ee4\uff0c\u5e76\u5c06\u6807\u51c6\u8f93\u51fa\u5185\u5bb9\u6355\u83b7\u5e76\u8fd4\u56de varname = $( id -u user ) # \u5c06\u7528\u6237\u540d\u4e3a user \u7684 uid \u8d4b\u503c\u7ed9 varname \u53d8\u91cf num = $( expr 1 + 2 ) # \u517c\u5bb9 posix sh \u7684\u8ba1\u7b97\uff0c\u4f7f\u7528 expr \u547d\u4ee4\u8ba1\u7b97\u7ed3\u679c num = $( expr $num + 1 ) # \u6570\u5b57\u81ea\u589e expr 2 \\* \\( 2 + 3 \\) # \u517c\u5bb9 posix sh \u7684\u590d\u6742\u8ba1\u7b97\uff0c\u8f93\u51fa 10 num = $(( 1 + 2 )) # \u8ba1\u7b97 1+2 \u8d4b\u503c\u7ed9 num\uff0c\u4f7f\u7528 bash \u72ec\u6709\u7684 $((..)) \u8ba1\u7b97 num = $(( $num + 1 )) # \u53d8\u91cf\u9012\u589e num = $(( num + 1 )) # \u53d8\u91cf\u9012\u589e\uff0c\u53cc\u62ec\u53f7\u5185\u7684 $ \u53ef\u4ee5\u7701\u7565 num = $(( 1 + ( 2 + 3 ) * 2 )) # \u590d\u6742\u8ba1\u7b97 \u4e8b\u4ef6\u6307\u793a\u7b26 \u00b6 ############################################################################## # \u4e8b\u4ef6\u6307\u793a\u7b26 ############################################################################## !! # \u4e0a\u4e00\u6761\u547d\u4ee4 !^ # \u4e0a\u4e00\u6761\u547d\u4ee4\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd !$ # \u4e0a\u4e00\u6761\u547d\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u5355\u8bcd !string # \u6700\u8fd1\u4e00\u6761\u5305\u542bstring\u7684\u547d\u4ee4 !^string1^string2 # \u6700\u8fd1\u4e00\u6761\u5305\u542bstring1\u7684\u547d\u4ee4, \u5feb\u901f\u66ff\u6362\u4e3astring2, \u76f8\u5f53\u4e8e!!:s/string1/string2/ !# # \u672c\u6761\u547d\u4ee4\u4e4b\u524d\u6240\u6709\u7684\u8f93\u5165\u5185\u5bb9 \u51fd\u6570 \u00b6 ############################################################################## # \u51fd\u6570 ############################################################################## # \u5b9a\u4e49\u4e00\u4e2a\u65b0\u51fd\u6570 function myfunc () { # $1 \u4ee3\u8868\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c$N \u4ee3\u8868\u7b2c N \u4e2a\u53c2\u6570 # $# \u4ee3\u8868\u53c2\u6570\u4e2a\u6570 # $0 \u4ee3\u8868\u88ab\u8c03\u7528\u8005\u81ea\u8eab\u7684\u540d\u5b57 # $@ \u4ee3\u8868\u6240\u6709\u53c2\u6570\uff0c\u7c7b\u578b\u662f\u4e2a\u6570\u7ec4\uff0c\u60f3\u4f20\u9012\u6240\u6709\u53c2\u6570\u7ed9\u5176\u4ed6\u547d\u4ee4\u7528 cmd \"$@\" # $* \u7a7a\u683c\u94fe\u63a5\u8d77\u6765\u7684\u6240\u6709\u53c2\u6570\uff0c\u7c7b\u578b\u662f\u5b57\u7b26\u4e32 { shell commands ... } } myfunc # \u8c03\u7528\u51fd\u6570 myfunc myfunc arg1 arg2 arg3 # \u5e26\u53c2\u6570\u7684\u51fd\u6570\u8c03\u7528 myfunc \" $@ \" # \u5c06\u6240\u6709\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570 shift # \u53c2\u6570\u5de6\u79fb unset -f myfunc # \u5220\u9664\u51fd\u6570 declare -f # \u5217\u51fa\u51fd\u6570\u5b9a\u4e49 \u6761\u4ef6\u5224\u65ad\uff08\u517c\u5bb9 posix sh \u7684\u6761\u4ef6\u5224\u65ad\uff09\uff1aman test \u00b6 ############################################################################## # \u6761\u4ef6\u5224\u65ad\uff08\u517c\u5bb9 posix sh \u7684\u6761\u4ef6\u5224\u65ad\uff09\uff1aman test ############################################################################## statement1 && statement2 # and \u64cd\u4f5c\u7b26 statement1 || statement2 # or \u64cd\u4f5c\u7b26 exp1 -a exp2 # exp1 \u548c exp2 \u540c\u65f6\u4e3a\u771f\u65f6\u8fd4\u56de\u771f\uff08POSIX XSI\u6269\u5c55\uff09 exp1 -o exp2 # exp1 \u548c exp2 \u6709\u4e00\u4e2a\u4e3a\u771f\u5c31\u8fd4\u56de\u771f\uff08POSIX XSI\u6269\u5c55\uff09 ( expression ) # \u5982\u679c expression \u4e3a\u771f\u65f6\u8fd4\u56de\u771f\uff0c\u8f93\u5165\u6ce8\u610f\u62ec\u53f7\u524d\u53cd\u659c\u6746 ! expression # \u5982\u679c expression \u4e3a\u5047\u90a3\u8fd4\u56de\u771f str1 = str2 # \u5224\u65ad\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u5982 [ \"$x\" = \"$y\" ] && echo yes str1 ! = str2 # \u5224\u65ad\u5b57\u7b26\u4e32\u4e0d\u7b49\uff0c\u5982 [ \"$x\" != \"$y\" ] && echo yes str1 < str2 # \u5b57\u7b26\u4e32\u5c0f\u4e8e\uff0c\u5982 [ \"$x\" \\< \"$y\" ] && echo yes str2 > str2 # \u5b57\u7b26\u4e32\u5927\u4e8e\uff0c\u6ce8\u610f < \u6216 > \u662f\u5b57\u9762\u91cf\uff0c\u8f93\u5165\u65f6\u8981\u52a0\u53cd\u659c\u6746 -n str1 # \u5224\u65ad\u5b57\u7b26\u4e32\u4e0d\u4e3a\u7a7a\uff08\u957f\u5ea6\u5927\u4e8e\u96f6\uff09 -z str1 # \u5224\u65ad\u5b57\u7b26\u4e32\u4e3a\u7a7a\uff08\u957f\u5ea6\u7b49\u4e8e\u96f6\uff09 -a file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u5982 [ -a /tmp/abc ] && echo \"exists\" -d file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u8be5\u6587\u4ef6\u662f\u4e00\u4e2a\u76ee\u5f55 -e file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u548c -a \u7b49\u4ef7 -f file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u8be5\u6587\u4ef6\u662f\u4e00\u4e2a\u666e\u901a\u6587\u4ef6\uff08\u975e\u76ee\u5f55\u7b49\uff09 -r file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u53ef\u8bfb -s file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u5c3a\u5bf8\u5927\u4e8e0 -w file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u53ef\u5199 -x file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u6267\u884c -N file # \u6587\u4ef6\u4e0a\u6b21\u4fee\u6539\u8fc7\u540e\u8fd8\u6ca1\u6709\u8bfb\u53d6\u8fc7 -O file # \u6587\u4ef6\u5b58\u5728\u4e14\u5c5e\u4e8e\u5f53\u524d\u7528\u6237 -G file # \u6587\u4ef6\u5b58\u5728\u4e14\u5339\u914d\u4f60\u7684\u7528\u6237\u7ec4 file1 -nt file2 # \u6587\u4ef61 \u6bd4 \u6587\u4ef62 \u65b0 file1 -ot file2 # \u6587\u4ef61 \u6bd4 \u6587\u4ef62 \u65e7 num1 -eq num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 == num2 num1 -ne num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 != num2 num1 -lt num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 < num2 num1 -le num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 <= num2 num1 -gt num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 > num2 num1 -ge num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 >= num2 \u5206\u652f\u63a7\u5236\uff1aif \u548c\u7ecf\u5178 test\uff0c\u517c\u5bb9 posix sh \u7684\u6761\u4ef6\u5224\u65ad\u8bed\u53e5 \u00b6 ############################################################################## # \u5206\u652f\u63a7\u5236\uff1aif \u548c\u7ecf\u5178 test\uff0c\u517c\u5bb9 posix sh \u7684\u6761\u4ef6\u5224\u65ad\u8bed\u53e5 ############################################################################## test { expression } # \u5224\u65ad\u6761\u4ef6\u4e3a\u771f\u7684\u8bdd test \u7a0b\u5e8f\u8fd4\u56de0 \u5426\u5219\u975e\u96f6 [ expression ] # \u5224\u65ad\u6761\u4ef6\u4e3a\u771f\u7684\u8bdd\u8fd4\u56de0 \u5426\u5219\u975e\u96f6 test \"abc\" = \"def\" # \u67e5\u770b\u8fd4\u56de\u503c echo $? \u663e\u793a 1\uff0c\u56e0\u4e3a\u6761\u4ef6\u4e3a\u5047 test \"abc\" ! = \"def\" # \u67e5\u770b\u8fd4\u56de\u503c echo $? \u663e\u793a 0\uff0c\u56e0\u4e3a\u6761\u4ef6\u4e3a\u771f test -a /tmp ; echo $? # \u8c03\u7528 test \u5224\u65ad /tmp \u662f\u5426\u5b58\u5728\uff0c\u5e76\u6253\u5370 test \u7684\u8fd4\u56de\u503c [ -a /tmp ] ; echo $? # \u548c\u4e0a\u9762\u5b8c\u5168\u7b49\u4ef7\uff0c/tmp \u80af\u5b9a\u662f\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u8f93\u51fa\u662f 0 test cond && cmd1 # \u5224\u65ad\u6761\u4ef6\u4e3a\u771f\u65f6\u6267\u884c cmd1 [ cond ] && cmd1 # \u548c\u4e0a\u9762\u5b8c\u5168\u7b49\u4ef7 [ cond ] && cmd1 || cmd2 # \u6761\u4ef6\u4e3a\u771f\u6267\u884c cmd1 \u5426\u5219\u6267\u884c cmd2 # \u5224\u65ad /etc/passwd \u6587\u4ef6\u662f\u5426\u5b58\u5728 # \u7ecf\u5178\u7684 if \u8bed\u53e5\u5c31\u662f\u5224\u65ad\u540e\u9762\u7684\u547d\u4ee4\u8fd4\u56de\u503c\u4e3a0\u7684\u8bdd\uff0c\u8ba4\u4e3a\u6761\u4ef6\u4e3a\u771f\uff0c\u5426\u5219\u4e3a\u5047 if test -e /etc/passwd ; then echo \"alright it exists ... \" else echo \"it doesn't exist ... \" fi # \u548c\u4e0a\u9762\u5b8c\u5168\u7b49\u4ef7\uff0c[ \u662f\u4e2a\u548c test \u4e00\u6837\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u4f46\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a ] # \u8fd9\u4e2a\u540d\u5b57\u4e3a \"[\" \u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u4e00\u822c\u5c31\u5728 /bin \u6216 /usr/bin \u4e0b\u9762\uff0c\u6bd4 test \u4f18\u96c5\u4e9b if [ -e /etc/passwd ] ; then echo \"alright it exists ... \" else echo \"it doesn't exist ... \" fi # \u548c\u4e0a\u9762\u4e24\u4e2a\u5b8c\u5168\u7b49\u4ef7\uff0c\u5176\u5b9e\u5230 bash \u65f6\u4ee3 [ \u5df2\u7ecf\u662f\u5185\u90e8\u547d\u4ee4\u4e86\uff0c\u7528 enable \u53ef\u4ee5\u770b\u5230 [ -e /etc/passwd ] && echo \"alright it exists\" || echo \"it doesn't exist\" # \u6761\u4ef6\u4e0d\u6210\u7acb unless contidion then .. [ ! -e /etc/passwd ] && echo \"noT exists\" # \u5224\u65ad\u53d8\u91cf\u7684\u503c if [ \" $varname \" = \"foo\" ] ; then echo \"this is foo\" elif [ \" $varname \" = \"bar\" ] ; then echo \"this is bar\" else echo \"neither\" fi # \u590d\u6742\u6761\u4ef6\u5224\u65ad\uff0c\u6ce8\u610f || \u548c && \u662f\u5b8c\u5168\u517c\u5bb9 POSIX \u7684\u63a8\u8350\u5199\u6cd5 if [ $x -gt 10 ] && [ $x -lt 20 ] ; then echo \"yes, between 10 and 20\" fi # \u53ef\u4ee5\u7528 && \u547d\u4ee4\u8fde\u63a5\u7b26\u6765\u505a\u548c\u4e0a\u9762\u5b8c\u5168\u7b49\u4ef7\u7684\u4e8b\u60c5 [ $x -gt 10 ] && [ $x -lt 20 ] && echo \"yes, between 10 and 20\" # \u5c0f\u62ec\u53f7\u548c -a -o \u662f POSIX XSI \u6269\u5c55\u5199\u6cd5\uff0c\u5c0f\u62ec\u53f7\u662f\u5b57\u9762\u91cf\uff0c\u8f93\u5165\u65f6\u524d\u9762\u8981\u52a0\u53cd\u659c\u6746 if [ \\( $x -gt 10 \\) -a \\( $x -lt 20 \\) ] ; then echo \"yes, between 10 and 20\" fi # \u540c\u6837\u53ef\u4ee5\u7528 && \u547d\u4ee4\u8fde\u63a5\u7b26\u6765\u505a\u548c\u4e0a\u9762\u5b8c\u5168\u7b49\u4ef7\u7684\u4e8b\u60c5 [ \\( $x -gt 10 \\) -a \\( $x -lt 20 \\) ] && echo \"yes, between 10 and 20\" # \u5224\u65ad\u7a0b\u5e8f\u5b58\u5728\u7684\u8bdd\u5c31\u6267\u884c [ -x /bin/ls ] && /bin/ls -l # \u5982\u679c\u4e0d\u8003\u8651\u517c\u5bb9 posix sh \u548c dash \u8fd9\u4e9b\u7684\u8bdd\uff0c\u53ef\u7528 bash \u72ec\u6709\u7684 ((..)) \u548c [[..]]: https://www.ibm.com/developerworks/library/l-bash-test/index.html \u6d41\u7a0b\u63a7\u5236\uff1awhile / for / case / until \u00b6 ############################################################################## # \u6d41\u7a0b\u63a7\u5236\uff1awhile / for / case / until ############################################################################## # while \u5faa\u73af while condition ; do statements done i = 1 while [ $i -le 10 ] ; do echo $i ; i = $( expr $i + 1 ) done # for \u5faa\u73af\uff1a\u4e0a\u9762\u7684 while \u8bed\u53e5\u7b49\u4ef7 for i in { 1 ..10 } ; do echo $i done for name [ in list ] ; do statements done # for \u5217\u4e3e\u67d0\u76ee\u5f55\u4e0b\u9762\u7684\u6240\u6709\u6587\u4ef6 for f in /home/* ; do echo $f done # bash \u72ec\u6709\u7684 (( .. )) \u8bed\u53e5\uff0c\u66f4\u63a5\u8fd1 C \u8bed\u8a00\uff0c\u4f46\u662f\u4e0d\u517c\u5bb9 posix sh for (( initialisation ; ending condition ; update )) ; do statements done # \u548c\u4e0a\u9762\u7684\u5199\u6cd5\u7b49\u4ef7 for (( i = 0 ; i < 10 ; i++ )) ; do echo $i ; done # case \u5224\u65ad case expression in pattern1 ) statements ;; pattern2 ) statements ;; * ) otherwise ;; esac # until \u8bed\u53e5 until condition ; do statements done # select \u8bed\u53e5 select name [ in list ] ; do statements that can use $name done \u8f93\u51fa/\u8f93\u5165 \u91cd\u5b9a\u5411 \u00b6 ############################################################################## # \u8f93\u51fa/\u8f93\u5165 \u91cd\u5b9a\u5411 ############################################################################## cmd1 | cmd2 # \u7ba1\u9053\uff0ccmd1 \u7684\u6807\u51c6\u8f93\u51fa\u63a5\u5230 cmd2 \u7684\u6807\u51c6\u8f93\u5165 < file # \u5c06\u6587\u4ef6\u5185\u5bb9\u91cd\u5b9a\u5411\u4e3a\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u5165 > file # \u5c06\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\uff0c\u4f1a\u8986\u76d6\u6587\u4ef6 >> file # \u5c06\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\uff0c\u8ffd\u52a0\u4e0d\u8986\u76d6 > | file # \u5f3a\u5236\u8f93\u51fa\u5230\u6587\u4ef6\uff0c\u5373\u4fbf\u8bbe\u7f6e\u8fc7\uff1aset -o noclobber n> | file # \u5f3a\u5236\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26 n\u7684\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6 <> file # \u540c\u65f6\u4f7f\u7528\u8be5\u6587\u4ef6\u4f5c\u4e3a\u6807\u51c6\u8f93\u5165\u548c\u6807\u51c6\u8f93\u51fa n<> file # \u540c\u65f6\u4f7f\u7528\u6587\u4ef6\u4f5c\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26 n \u7684\u8f93\u51fa\u548c\u8f93\u5165 n> file # \u91cd\u5b9a\u5411\u6587\u4ef6\u63cf\u8ff0\u7b26 n \u7684\u8f93\u51fa\u5230\u6587\u4ef6 n< file # \u91cd\u5b9a\u5411\u6587\u4ef6\u63cf\u8ff0\u7b26 n \u7684\u8f93\u5165\u4e3a\u6587\u4ef6\u5185\u5bb9 n> & # \u5c06\u6807\u51c6\u8f93\u51fa dup/\u5408\u5e76 \u5230\u6587\u4ef6\u63cf\u8ff0\u7b26 n n< & # \u5c06\u6807\u51c6\u8f93\u5165 dump/\u5408\u5e76 \u5b9a\u5411\u4e3a\u63cf\u8ff0\u7b26 n n> & m # \u6587\u4ef6\u63cf\u8ff0\u7b26 n \u88ab\u4f5c\u4e3a\u63cf\u8ff0\u7b26 m \u7684\u526f\u672c\uff0c\u8f93\u51fa\u7528 n< & m # \u6587\u4ef6\u63cf\u8ff0\u7b26 n \u88ab\u4f5c\u4e3a\u63cf\u8ff0\u7b26 m \u7684\u526f\u672c\uff0c\u8f93\u5165\u7528 & >file # \u5c06\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u91cd\u5b9a\u5411\u5230\u6587\u4ef6 < & - # \u5173\u95ed\u6807\u51c6\u8f93\u5165 > & - # \u5173\u95ed\u6807\u51c6\u8f93\u51fa n> & - # \u5173\u95ed\u4f5c\u4e3a\u8f93\u51fa\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 n n< & - # \u5173\u95ed\u4f5c\u4e3a\u8f93\u5165\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 n diff < ( cmd1 ) < ( cmd2 ) # \u6bd4\u8f83\u4e24\u4e2a\u547d\u4ee4\u7684\u8f93\u51fa \u6587\u672c\u5904\u7406 - cut \u00b6 ############################################################################## # \u6587\u672c\u5904\u7406 - cut ############################################################################## cut -c 1 -16 # \u622a\u53d6\u6bcf\u884c\u593416\u4e2a\u5b57\u7b26 cut -c 1 -16 file # \u622a\u53d6\u6307\u5b9a\u6587\u4ef6\u4e2d\u6bcf\u884c\u5934 16\u4e2a\u5b57\u7b26 cut -c3- # \u622a\u53d6\u6bcf\u884c\u4ece\u7b2c\u4e09\u4e2a\u5b57\u7b26\u5f00\u59cb\u5230\u884c\u672b\u7684\u5185\u5bb9 cut -d ':' -f5 # \u622a\u53d6\u7528\u5192\u53f7\u5206\u9694\u7684\u7b2c\u4e94\u5217\u5185\u5bb9 cut -d ';' -f2,10 # \u622a\u53d6\u7528\u5206\u53f7\u5206\u9694\u7684\u7b2c\u4e8c\u548c\u7b2c\u5341\u5217\u5185\u5bb9 cut -d ' ' -f3-7 # \u622a\u53d6\u7a7a\u683c\u5206\u9694\u7684\u4e09\u5230\u4e03\u5217 echo \"hello\" | cut -c1-3 # \u663e\u793a hel echo \"hello sir\" | cut -d ' ' -f2 # \u663e\u793a sir ps | tr -s \" \" | cut -d \" \" -f 2 ,3,4 # cut \u642d\u914d tr \u538b\u7f29\u5b57\u7b26 \u6587\u672c\u5904\u7406 - awk / sed \u00b6 ############################################################################## # \u6587\u672c\u5904\u7406 - awk / sed ############################################################################## awk '{print $5}' file # \u6253\u5370\u6587\u4ef6\u4e2d\u4ee5\u7a7a\u683c\u5206\u9694\u7684\u7b2c\u4e94\u5217 awk -F ',' '{print $5}' file # \u6253\u5370\u6587\u4ef6\u4e2d\u4ee5\u9017\u53f7\u5206\u9694\u7684\u7b2c\u4e94\u5217 awk '/str/ {print $2}' file # \u6253\u5370\u6587\u4ef6\u4e2d\u5305\u542b str \u7684\u6240\u6709\u884c\u7684\u7b2c\u4e8c\u5217 awk -F ',' '{print $NF}' file # \u6253\u5370\u9017\u53f7\u5206\u9694\u7684\u6587\u4ef6\u4e2d\u7684\u6bcf\u884c\u6700\u540e\u4e00\u5217 awk '{s+=$1} END {print s}' file # \u8ba1\u7b97\u6240\u6709\u7b2c\u4e00\u5217\u7684\u5408 awk 'NR%3==1' file # \u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\uff0c\u6bcf\u9694\u4e09\u884c\u6253\u5370\u4e00\u884c sed 's/find/replace/' file # \u66ff\u6362\u6587\u4ef6\u4e2d\u9996\u6b21\u51fa\u73b0\u7684\u5b57\u7b26\u4e32\u5e76\u8f93\u51fa\u7ed3\u679c sed '10s/find/replace/' file # \u66ff\u6362\u6587\u4ef6\u7b2c 10 \u884c\u5185\u5bb9 sed '10,20s/find/replace/' file # \u66ff\u6362\u6587\u4ef6\u4e2d 10-20 \u884c\u5185\u5bb9 sed -r 's/regex/replace/g' file # \u66ff\u6362\u6587\u4ef6\u4e2d\u6240\u6709\u51fa\u73b0\u7684\u5b57\u7b26\u4e32 sed -i 's/find/replace/g' file # \u66ff\u6362\u6587\u4ef6\u4e2d\u6240\u6709\u51fa\u73b0\u7684\u5b57\u7b26\u5e76\u4e14\u8986\u76d6\u6587\u4ef6 sed '/line/s/find/replace/' file # \u5148\u641c\u7d22\u884c\u7279\u5f81\u518d\u6267\u884c\u66ff\u6362 sed -e 's/f/r/' -e 's/f/r' file # \u6267\u884c\u591a\u6b21\u66ff\u6362 sed 's#find#replace#' file # \u4f7f\u7528 # \u66ff\u6362 / \u6765\u907f\u514d pattern \u4e2d\u6709\u659c\u6746 sed -i -r 's/^\\s+//g' file # \u5220\u9664\u6587\u4ef6\u6bcf\u884c\u5934\u90e8\u7a7a\u683c sed '/^$/d' file # \u5220\u9664\u6587\u4ef6\u7a7a\u884c\u5e76\u6253\u5370 sed -i 's/\\s\\+$//' file # \u5220\u9664\u6587\u4ef6\u6bcf\u884c\u672b\u5c3e\u591a\u4f59\u7a7a\u683c sed -n '2p' file # \u6253\u5370\u6587\u4ef6\u7b2c\u4e8c\u884c sed -n '2,5p' file # \u6253\u5370\u6587\u4ef6\u7b2c\u4e8c\u5230\u7b2c\u4e94\u884c \u6392\u5e8f - sort \u00b6 ############################################################################## # \u6392\u5e8f - sort ############################################################################## sort file # \u6392\u5e8f\u6587\u4ef6 sort -r file # \u53cd\u5411\u6392\u5e8f\uff08\u964d\u5e8f\uff09 sort -n file # \u4f7f\u7528\u6570\u5b57\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83 sort -t: -k 3n /etc/passwd # \u6309 passwd \u6587\u4ef6\u7684\u7b2c\u4e09\u5217\u8fdb\u884c\u6392\u5e8f sort -u file # \u53bb\u91cd\u6392\u5e8f \u5feb\u901f\u8df3\u8f6c - https://github.com/rupa/z \u00b6 ############################################################################## # \u5feb\u901f\u8df3\u8f6c - https://github.com/rupa/z ############################################################################## source /path/to/z.sh # .bashrc \u4e2d\u521d\u59cb\u5316 z.sh z # \u5217\u51fa\u6240\u6709\u5386\u53f2\u8def\u5f84\u4ee5\u53ca\u4ed6\u4eec\u7684\u6743\u91cd z foo # \u8df3\u5230\u5386\u53f2\u8def\u5f84\u4e2d\u5339\u914d foo \u7684\u6743\u91cd\u6700\u5927\u7684\u76ee\u5f55 z foo bar # \u8df3\u5230\u5386\u53f2\u8def\u5f84\u4e2d\u5339\u914d foo \u548c bar \u6743\u91cd\u6700\u5927\u7684\u76ee\u5f55 z -l foo # \u5217\u51fa\u6240\u6709\u5386\u53f2\u8def\u5f84\u4e2d\u5339\u914d foo \u7684\u76ee\u5f55\u53ca\u6743\u91cd z -r foo # \u6309\u7167\u6700\u9ad8\u8bbf\u95ee\u6b21\u6570\u4f18\u5148\u8fdb\u884c\u5339\u914d\u8df3\u8f6c z -t foo # \u6309\u7167\u6700\u8fd1\u8bbf\u95ee\u4f18\u5148\u8fdb\u884c\u5339\u914d\u8df3\u8f6c \u952e\u76d8\u7ed1\u5b9a \u00b6 ############################################################################## # \u952e\u76d8\u7ed1\u5b9a ############################################################################## bind '\"\\eh\":\"\\C-b\"' # \u7ed1\u5b9a ALT+h \u4e3a\u5149\u6807\u5de6\u79fb\uff0c\u540c CTRL+b / <Left> bind '\"\\el\":\"\\C-f\"' # \u7ed1\u5b9a ALT+l \u4e3a\u5149\u6807\u53f3\u79fb\uff0c\u540c CTRL+f / <Right> bind '\"\\ej\":\"\\C-n\"' # \u7ed1\u5b9a ALT+j \u4e3a\u4e0b\u6761\u5386\u53f2\uff0c\u540c CTRL+n / <Down> bind '\"\\ek\":\"\\C-p\"' # \u7ed1\u5b9a ALT+k \u4e3a\u4e0a\u6761\u5386\u53f2\uff0c\u540c CTRL+p / <Up> bind '\"\\eH\":\"\\eb\"' # \u7ed1\u5b9a ALT+H \u4e3a\u5149\u6807\u5de6\u79fb\u4e00\u4e2a\u5355\u8bcd\uff0c\u540c ALT-b bind '\"\\eL\":\"\\ef\"' # \u7ed1\u5b9a ALT+L \u4e3a\u5149\u6807\u53f3\u79fb\u4e00\u4e2a\u5355\u8bcd\uff0c\u540c ALT-f bind '\"\\eJ\":\"\\C-a\"' # \u7ed1\u5b9a ALT+J \u4e3a\u79fb\u52a8\u5230\u884c\u9996\uff0c\u540c CTRL+a / <Home> bind '\"\\eK\":\"\\C-e\"' # \u7ed1\u5b9a ALT+K \u4e3a\u79fb\u52a8\u5230\u884c\u672b\uff0c\u540c CTRL+e / <End> bind '\"\\e;\":\"ls -l\\n\"' # \u7ed1\u5b9a ALT+; \u4e3a\u6267\u884c ls -l \u547d\u4ee4 \u7f51\u7edc\u7ba1\u7406\uff1aip / ifconfig / nmap ... \u00b6 ############################################################################## # \u7f51\u7edc\u7ba1\u7406\uff1aip / ifconfig / nmap ... ############################################################################## ip a # \u663e\u793a\u6240\u6709\u7f51\u7edc\u5730\u5740\uff0c\u540c ip address ip a show eth1 # \u663e\u793a\u7f51\u5361 IP \u5730\u5740 ip a add 172 .16.1.23/24 dev eth1 # \u6dfb\u52a0\u7f51\u5361 IP \u5730\u5740 ip a del 172 .16.1.23/24 dev eth1 # \u5220\u9664\u7f51\u5361 IP \u5730\u5740 ip link show dev eth0 # \u663e\u793a\u7f51\u5361\u8bbe\u5907\u5c5e\u6027 ip link set eth1 up # \u6fc0\u6d3b\u7f51\u5361 ip link set eth1 down # \u5173\u95ed\u7f51\u5361 ip link set eth1 address { mac } # \u4fee\u6539 MAC \u5730\u5740 ip neighbour # \u67e5\u770b ARP \u7f13\u5b58 ip route # \u67e5\u770b\u8def\u7531\u8868 ip route add 10 .1.0.0/24 via 10 .0.0.253 dev eth0 # \u6dfb\u52a0\u9759\u6001\u8def\u7531 ip route del 10 .1.0.0/24 # \u5220\u9664\u9759\u6001\u8def\u7531 ifconfig # \u663e\u793a\u6240\u6709\u7f51\u5361\u548c\u63a5\u53e3\u4fe1\u606f ifconfig -a # \u663e\u793a\u6240\u6709\u7f51\u5361\uff08\u5305\u62ec\u5f00\u673a\u6ca1\u542f\u52a8\u7684\uff09\u4fe1\u606f ifconfig eth0 # \u6307\u5b9a\u8bbe\u5907\u663e\u793a\u4fe1\u606f ifconfig eth0 up # \u6fc0\u6d3b\u7f51\u5361 ifconfig eth0 down # \u5173\u95ed\u7f51\u5361 ifconfig eth0 192 .168.120.56 # \u7ed9\u7f51\u5361\u914d\u7f6e IP \u5730\u5740 ifconfig eth0 10 .0.0.8 netmask 255 .255.255.0 up # \u914d\u7f6e IP \u5e76\u542f\u52a8 ifconfig eth0 hw ether 00 :aa:bb:cc:dd:ee # \u4fee\u6539 MAC \u5730\u5740 nmap 10 .0.0.12 # \u626b\u63cf\u4e3b\u673a 1-1000 \u7aef\u53e3 nmap -p 1024 -65535 10 .0.0.12 # \u626b\u63cf\u7ed9\u5b9a\u7aef\u53e3 nmap 10 .0.0.0/24 # \u7ed9\u5b9a\u7f51\u6bb5\u626b\u63cf\u5c40\u57df\u7f51\u5185\u6240\u6709\u4e3b\u673a nmap -O -sV 10 .0.0.12 # \u63a2\u6d4b\u4e3b\u673a\u670d\u52a1\u548c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c \u6709\u8da3\u7684\u547d\u4ee4 \u00b6 ############################################################################## # \u6709\u8da3\u7684\u547d\u4ee4 ############################################################################## man hier # \u67e5\u770b\u6587\u4ef6\u7cfb\u7edf\u7684\u7ed3\u6784\u548c\u542b\u4e49 man test # \u67e5\u770b posix sh \u7684\u6761\u4ef6\u5224\u65ad\u5e2e\u52a9 man ascii # \u663e\u793a ascii \u8868 getconf LONG_BIT # \u67e5\u770b\u7cfb\u7edf\u662f 32 \u4f4d\u8fd8\u662f 64 \u4f4d bind -P # \u5217\u51fa\u6240\u6709 bash \u7684\u5feb\u6377\u952e mount | column -t # \u6f02\u4eae\u7684\u5217\u51fa\u5f53\u524d\u52a0\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf curl ip.cn # \u53d6\u5f97\u5916\u7f51 ip \u5730\u5740\u548c\u670d\u52a1\u5546\u4fe1\u606f disown -a && exit # \u5173\u95ed\u6240\u6709\u540e\u53f0\u4efb\u52a1\u5e76\u9000\u51fa cat /etc/issue # \u67e5\u770b Linux \u53d1\u884c\u7248\u4fe1\u606f lsof -i port:80 # \u54ea\u4e2a\u7a0b\u5e8f\u5728\u4f7f\u7528 80 \u7aef\u53e3\uff1f showkey -a # \u53d6\u5f97\u6309\u952e\u7684 ASCII \u7801 svn diff | view - # \u4f7f\u7528 Vim \u6765\u663e\u793a\u5e26\u8272\u5f69\u7684 diff \u8f93\u51fa mv filename. { old,new } # \u5feb\u901f\u6587\u4ef6\u6539\u540d time read # \u4f7f\u7528 CTRL-D \u505c\u6b62\uff0c\u6700\u7b80\u5355\u7684\u8ba1\u65f6\u529f\u80fd cp file.txt { ,.bak } # \u5feb\u901f\u5907\u4efd\u6587\u4ef6 sudo touch /forcefsck # \u5f3a\u5236\u5728\u4e0b\u6b21\u91cd\u542f\u65f6\u626b\u63cf\u78c1\u76d8 find ~ -mmin 60 -type f # \u67e5\u627e $HOME \u76ee\u5f55\u4e2d\uff0c60 \u5206\u949f\u5185\u4fee\u6539\u8fc7\u7684\u6587\u4ef6 curl wttr.in/~beijing # \u67e5\u770b\u5317\u4eac\u7684\u5929\u6c14\u9884\u62a5 echo ${ SSH_CLIENT %% * } # \u53d6\u5f97\u4f60\u662f\u4ece\u4ec0\u4e48 IP \u94fe\u63a5\u5230\u5f53\u524d\u4e3b\u673a\u4e0a\u7684 echo $ [ RANDOM%X+1 ] # \u53d6\u5f97 1 \u5230 X \u4e4b\u95f4\u7684\u968f\u673a\u6570 bind -x '\"\\C-l\":ls -l' # \u8bbe\u7f6e CTRL+l \u4e3a\u6267\u884c ls -l \u547d\u4ee4 find / -type f -size +5M # \u67e5\u627e\u5927\u4e8e 5M \u7684\u6587\u4ef6 chmod --reference f1 f2 # \u5c06 f2 \u7684\u6743\u9650\u8bbe\u7f6e\u6210 f1 \u4e00\u6a21\u4e00\u6837\u7684 curl -L cheat.sh # \u901f\u67e5\u8868\u5927\u5168 \u5e38\u7528\u6280\u5de7 \u00b6 ############################################################################## # \u5e38\u7528\u6280\u5de7 ############################################################################## # \u5217\u51fa\u6700\u5e38\u4f7f\u7528\u7684\u547d\u4ee4 history | awk '{a[$2]++}END{for(i in a){print a[i] \" \" i}}' | sort -rn | head # \u5217\u51fa\u6240\u6709\u7f51\u7edc\u72b6\u6001\uff1aESTABLISHED / TIME_WAIT / FIN_WAIT1 / FIN_WAIT2 netstat -n | awk '/^tcp/ {++tt[$NF]} END {for (a in tt) print a, tt[a]}' # \u901a\u8fc7 SSH \u6765 mount \u6587\u4ef6\u7cfb\u7edf sshfs name@server:/path/to/folder /path/to/mount/point # \u663e\u793a\u524d\u5341\u4e2a\u8fd0\u884c\u7684\u8fdb\u7a0b\u5e76\u6309\u5185\u5b58\u4f7f\u7528\u91cf\u6392\u5e8f ps aux | sort -nk +4 | tail # \u5728\u53f3\u4e0a\u89d2\u663e\u793a\u65f6\u949f while sleep 1 ; do tput sc ; tput cup 0 $(($( tput cols ) - 29 )) ; date ; tput rc ; done & # \u4ece\u7f51\u7edc\u4e0a\u7684\u538b\u7f29\u6587\u4ef6\u4e2d\u89e3\u51fa\u4e00\u4e2a\u6587\u4ef6\u6765\uff0c\u5e76\u907f\u514d\u4fdd\u5b58\u4e2d\u95f4\u6587\u4ef6 wget -qO - \"http://www.tarball.com/tarball.gz\" | tar zxvf - # \u6027\u80fd\u6d4b\u8bd5\uff1a\u6d4b\u8bd5\u5904\u7406\u5668\u6027\u80fd python -c \"import test.pystone;print(test.pystone.pystones())\" # \u6027\u80fd\u6d4b\u8bd5\uff1a\u6d4b\u8bd5\u5185\u5b58\u5e26\u5bbd dd if = /dev/zero of = /dev/null bs = 1M count = 32768 # Linux \u4e0b\u6302\u8f7d\u4e00\u4e2a iso \u6587\u4ef6 mount /path/to/file.iso /mnt/cdrom -oloop # \u901a\u8fc7\u4e3b\u673a A \u76f4\u63a5 ssh \u5230\u4e3b\u673a B ssh -t hostA ssh hostB # \u4e0b\u8f7d\u4e00\u4e2a\u7f51\u7ad9\u7684\u6240\u6709\u56fe\u7247 wget -r -l1 --no-parent -nH -nd -P/tmp -A \".gif,.jpg\" http://example.com/images # \u5feb\u901f\u521b\u5efa\u9879\u76ee\u76ee\u5f55 mkdir -p work/ { project1,project2 } / { src,bin,bak } # \u6309\u65e5\u671f\u8303\u56f4\u67e5\u627e\u6587\u4ef6 find . -type f -newermt \"2010-01-01\" ! -newermt \"2010-06-01\" # \u663e\u793a\u5f53\u524d\u6b63\u5728\u4f7f\u7528\u7f51\u7edc\u7684\u8fdb\u7a0b lsof -P -i -n | cut -f 1 -d \" \" | uniq | tail -n +2 # Vim \u4e2d\u4fdd\u5b58\u4e00\u4e2a\u6ca1\u6709\u6743\u9650\u7684\u6587\u4ef6 :w !sudo tee > /dev/null % # \u5728 .bashrc / .bash_profile \u4e2d\u52a0\u8f7d\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6\uff08\u6bd4\u5982\u4f60\u4fdd\u5b58\u5728 github \u4e0a\u7684\u914d\u7f6e\uff09 source ~/github/profiles/my_bash_init.sh # \u7ec8\u7aef\u4e0b\u6b63\u786e\u8bbe\u7f6e ALT \u952e\u548c BackSpace \u952e http://www.skywind.me/blog/archives/2021 \u6709\u7528\u7684\u51fd\u6570 \u00b6 ############################################################################## # \u6709\u7528\u7684\u51fd\u6570 ############################################################################## # \u81ea\u52a8\u89e3\u538b\uff1a\u5224\u65ad\u6587\u4ef6\u540e\u7f00\u540d\u5e76\u8c03\u7528\u76f8\u5e94\u89e3\u538b\u547d\u4ee4 function q-extract () { if [ -f $1 ] ; then case $1 in *.tar.bz2 ) tar -xvjf $1 ;; *.tar.gz ) tar -xvzf $1 ;; *.tar.xz ) tar -xvJf $1 ;; *.bz2 ) bunzip2 $1 ;; *.rar ) rar x $1 ;; *.gz ) gunzip $1 ;; *.tar ) tar -xvf $1 ;; *.tbz2 ) tar -xvjf $1 ;; *.tgz ) tar -xvzf $1 ;; *.zip ) unzip $1 ;; *.Z ) uncompress $1 ;; *.7z ) 7z x $1 ;; * ) echo \"don't know how to extract ' $1 '...\" ;; esac else echo \"' $1 ' is not a valid file!\" fi } # \u81ea\u52a8\u538b\u7f29\uff1a\u5224\u65ad\u540e\u7f00\u540d\u5e76\u8c03\u7528\u76f8\u5e94\u538b\u7f29\u7a0b\u5e8f function q-compress () { if [ -n \" $1 \" ] ; then FILE = $1 case $FILE in *.tar ) shift && tar -cf $FILE $* ;; *.tar.bz2 ) shift && tar -cjf $FILE $* ;; *.tar.xz ) shift && tar -cJf $FILE $* ;; *.tar.gz ) shift && tar -czf $FILE $* ;; *.tgz ) shift && tar -czf $FILE $* ;; *.zip ) shift && zip $FILE $* ;; *.rar ) shift && rar $FILE $* ;; esac else echo \"usage: q-compress <foo.tar.gz> ./foo ./bar\" fi } # \u6f02\u4eae\u7684\u5e26\u8bed\u6cd5\u9ad8\u4eae\u7684 color cat \uff0c\u9700\u8981\u5148 pip install pygments function ccat () { local style = \"monokai\" if [ $# -eq 0 ] ; then pygmentize -P style = $style -P tabsize = 4 -f terminal256 -g else for NAME in $@ ; do pygmentize -P style = $style -P tabsize = 4 -f terminal256 -g \" $NAME \" done fi } \u597d\u73a9\u7684\u914d\u7f6e \u00b6 ############################################################################## # \u597d\u73a9\u7684\u914d\u7f6e ############################################################################## # \u653e\u5230\u4f60\u7684 ~/.bashrc \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u7ed9 man \u589e\u52a0\u6f02\u4eae\u7684\u8272\u5f69\u9ad8\u4eae export LESS_TERMCAP_mb = $'\\E[1m\\E[32m' export LESS_TERMCAP_mh = $'\\E[2m' export LESS_TERMCAP_mr = $'\\E[7m' export LESS_TERMCAP_md = $'\\E[1m\\E[36m' export LESS_TERMCAP_ZW = \"\" export LESS_TERMCAP_us = $'\\E[4m\\E[1m\\E[37m' export LESS_TERMCAP_me = $'\\E(B\\E[m' export LESS_TERMCAP_ue = $'\\E[24m\\E(B\\E[m' export LESS_TERMCAP_ZO = \"\" export LESS_TERMCAP_ZN = \"\" export LESS_TERMCAP_se = $'\\E[27m\\E(B\\E[m' export LESS_TERMCAP_ZV = \"\" export LESS_TERMCAP_so = $'\\E[1m\\E[33m\\E[44m' # ALT+hjkl/HJKL \u5feb\u901f\u79fb\u52a8\u5149\u6807\uff0c\u5c06\u4e0b\u9762\u5185\u5bb9\u6dfb\u52a0\u5230 ~/.inputrc \u4e2d\u53ef\u4f5c\u7528\u6240\u6709\u5de5\u5177\uff0c # \u5305\u62ec bash/zsh/python/lua \u7b49\u4f7f\u7528 readline \u7684\u5de5\u5177\uff0c\u5e2e\u52a9\u89c1\uff1ainfo rluserman \"\\eh\" : backward-char \"\\el\" : forward-char \"\\ej\" : next-history \"\\ek\" : previous-history \"\\eH\" : backward-word \"\\eL\" : forward-word \"\\eJ\" : beginning-of-line \"\\eK\" : end-of-line References \u00b6 ############################################################################## # References ############################################################################## https://github.com/Idnan/bash-guide http://www.linuxstall.com/linux-command-line-tips-that-every-linux-user-should-know/ https://ss64.com/bash/syntax-keyboard.html http://wiki.bash-hackers.org/commands/classictest https://www.ibm.com/developerworks/library/l-bash-test/index.html https://www.cyberciti.biz/faq/bash-loop-over-file/ https://linuxconfig.org/bash-scripting-tutorial https://github.com/LeCoupa/awesome-cheatsheets/blob/master/languages/bash.sh https://devhints.io/bash https://github.com/jlevy/the-art-of-command-line https://yq.aliyun.com/articles/68541 # vim: set ts=4 sw=4 tw=0 et :","title":"Bash\u901f\u67e5\u53c2\u8003"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#bash-cheatsheet","text":"############################################################################## # BASH CHEATSHEET (\u4e2d\u6587\u901f\u67e5\u8868) - by skywind (created on 2018/02/14) # Version: 43, Last Modified: 2018/04/02 17:00 # https://github.com/skywind3000/awesome-cheatsheets ##############################################################################","title":"Bash \u901f\u67e5\u8868 (CheatSheet)"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_1","text":"############################################################################## # \u5e38\u7528\u5feb\u6377\u952e\uff08\u9ed8\u8ba4\u4f7f\u7528 Emacs \u952e\u4f4d\uff09 ############################################################################## CTRL+A # \u79fb\u52a8\u5230\u884c\u9996\uff0c\u540c <Home> CTRL+B # \u5411\u540e\u79fb\u52a8\uff0c\u540c <Left> CTRL+C # \u7ed3\u675f\u5f53\u524d\u547d\u4ee4 CTRL+D # \u5220\u9664\u5149\u6807\u524d\u7684\u5b57\u7b26\uff0c\u540c <Delete> \uff0c\u6216\u8005\u6ca1\u6709\u5185\u5bb9\u65f6\uff0c\u9000\u51fa\u4f1a\u8bdd CTRL+E # \u79fb\u52a8\u5230\u884c\u672b\uff0c\u540c <End> CTRL+F # \u5411\u524d\u79fb\u52a8\uff0c\u540c <Right> CTRL+G # \u9000\u51fa\u5f53\u524d\u7f16\u8f91\uff08\u6bd4\u5982\u6b63\u5728 CTRL+R \u641c\u7d22\u5386\u53f2\u65f6\uff09 CTRL+H # \u5220\u9664\u5149\u6807\u5de6\u8fb9\u7684\u5b57\u7b26\uff0c\u540c <Backspace> CTRL+K # \u5220\u9664\u5149\u6807\u4f4d\u7f6e\u5230\u884c\u672b\u7684\u5185\u5bb9 CTRL+L # \u6e05\u5c4f\u5e76\u91cd\u65b0\u663e\u793a CTRL+N # \u79fb\u52a8\u5230\u547d\u4ee4\u5386\u53f2\u7684\u4e0b\u4e00\u884c\uff0c\u540c <Down> CTRL+O # \u7c7b\u4f3c\u56de\u8f66\uff0c\u4f46\u662f\u4f1a\u663e\u793a\u4e0b\u4e00\u884c\u5386\u53f2 CTRL+P # \u79fb\u52a8\u5230\u547d\u4ee4\u5386\u53f2\u7684\u4e0a\u4e00\u884c\uff0c\u540c <Up> CTRL+R # \u5386\u53f2\u547d\u4ee4\u53cd\u5411\u641c\u7d22\uff0c\u4f7f\u7528 CTRL+G \u9000\u51fa\u641c\u7d22 CTRL+S # \u5386\u53f2\u547d\u4ee4\u6b63\u5411\u641c\u7d22\uff0c\u4f7f\u7528 CTRL+G \u9000\u51fa\u641c\u7d22 CTRL+T # \u4ea4\u6362\u524d\u540e\u4e24\u4e2a\u5b57\u7b26 CTRL+U # \u5220\u9664\u5b57\u7b26\u5230\u884c\u9996 CTRL+V # \u8f93\u5165\u5b57\u7b26\u5b57\u9762\u91cf\uff0c\u5148\u6309 CTRL+V \u518d\u6309\u4efb\u610f\u952e CTRL+W # \u5220\u9664\u5149\u6807\u5de6\u8fb9\u7684\u4e00\u4e2a\u5355\u8bcd CTRL+X # \u5217\u51fa\u53ef\u80fd\u7684\u8865\u5168 CTRL+Y # \u7c98\u8d34\u524d\u9762 CTRL+u/k/w \u5220\u9664\u8fc7\u7684\u5185\u5bb9 CTRL+Z # \u6682\u505c\u524d\u53f0\u8fdb\u7a0b\u8fd4\u56de bash\uff0c\u9700\u8981\u65f6\u53ef\u7528 fg \u5c06\u5176\u5207\u6362\u56de\u524d\u53f0 CTRL+_ # \u64a4\u9500\uff08undo\uff09\uff0c\u6709\u7684\u7ec8\u7aef\u5c06 CTRL+_ \u6620\u5c04\u4e3a CTRL+/ \u6216 CTRL+7 ALT+b # \u5411\u540e\uff08\u5de6\u8fb9\uff09\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd ALT+d # \u5220\u9664\u5149\u6807\u540e\uff08\u53f3\u8fb9\uff09\u4e00\u4e2a\u5355\u8bcd ALT+f # \u5411\u524d\uff08\u53f3\u8fb9\uff09\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd ALT+t # \u4ea4\u6362\u5b57\u7b26 ALT+BACKSPACE # \u5220\u9664\u5149\u6807\u524d\u9762\u4e00\u4e2a\u5355\u8bcd\uff0c\u7c7b\u4f3c CTRL+W\uff0c\u4f46\u4e0d\u5f71\u54cd\u526a\u8d34\u677f CTRL+X CTRL+X # \u8fde\u7eed\u6309\u4e24\u6b21 CTRL+X\uff0c\u5149\u6807\u5728\u5f53\u524d\u4f4d\u7f6e\u548c\u884c\u9996\u6765\u56de\u8df3\u8f6c CTRL+X CTRL+E # \u7528\u4f60\u6307\u5b9a\u7684\u7f16\u8f91\u5668\uff0c\u7f16\u8f91\u5f53\u524d\u547d\u4ee4","title":"\u5e38\u7528\u5feb\u6377\u952e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#bash","text":"############################################################################## # BASH \u57fa\u672c\u64cd\u4f5c ############################################################################## exit # \u9000\u51fa\u5f53\u524d\u767b\u9646 env # \u663e\u793a\u73af\u5883\u53d8\u91cf echo $SHELL # \u663e\u793a\u4f60\u5728\u4f7f\u7528\u4ec0\u4e48 SHELL bash # \u4f7f\u7528 bash\uff0c\u7528 exit \u8fd4\u56de which bash # \u641c\u7d22 $PATH\uff0c\u67e5\u627e\u54ea\u4e2a\u7a0b\u5e8f\u5bf9\u5e94\u547d\u4ee4 bash whereis bash # \u641c\u7d22\u53ef\u6267\u884c\uff0c\u5934\u6587\u4ef6\u548c\u5e2e\u52a9\u4fe1\u606f\u7684\u4f4d\u7f6e\uff0c\u4f7f\u7528\u7cfb\u7edf\u5185\u5efa\u6570\u636e\u5e93 whatis bash # \u67e5\u770b\u67d0\u4e2a\u547d\u4ee4\u7684\u89e3\u91ca\uff0c\u4e00\u53e5\u8bdd\u544a\u8bc9\u4f60\u8fd9\u662f\u5e72\u4ec0\u4e48\u7684 clear # \u6e05\u521d\u5c4f\u5e55\u5185\u5bb9 reset # \u91cd\u7f6e\u7ec8\u7aef\uff08\u5f53\u4f60\u4e0d\u5c0f\u5fc3 cat \u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\uff0c\u7ec8\u7aef\u72b6\u6001\u4e71\u6389\u65f6\u4f7f\u7528\uff09","title":"BASH \u57fa\u672c\u64cd\u4f5c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_2","text":"############################################################################## # \u76ee\u5f55\u64cd\u4f5c ############################################################################## cd # \u8fd4\u56de\u81ea\u5df1 $HOME \u76ee\u5f55 cd { dirname } # \u8fdb\u5165\u76ee\u5f55 pwd # \u663e\u793a\u5f53\u524d\u6240\u5728\u76ee\u5f55 mkdir { dirname } # \u521b\u5efa\u76ee\u5f55 mkdir -p { dirname } # \u9012\u5f52\u521b\u5efa\u76ee\u5f55 pushd { dirname } # \u76ee\u5f55\u538b\u6808\u5e76\u8fdb\u5165\u65b0\u76ee\u5f55 popd # \u5f39\u51fa\u5e76\u8fdb\u5165\u6808\u9876\u7684\u76ee\u5f55 dirs -v # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u6808 cd - # \u56de\u5230\u4e4b\u524d\u7684\u76ee\u5f55 cd - { N } # \u5207\u6362\u5230\u76ee\u5f55\u6808\u4e2d\u7684\u7b2c N\u4e2a\u76ee\u5f55\uff0c\u6bd4\u5982 cd -2 \u5c06\u5207\u6362\u5230\u7b2c\u4e8c\u4e2a","title":"\u76ee\u5f55\u64cd\u4f5c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_3","text":"############################################################################## # \u6587\u4ef6\u64cd\u4f5c ############################################################################## ls # \u663e\u793a\u5f53\u524d\u76ee\u5f55\u5185\u5bb9\uff0c\u540e\u9762\u53ef\u63a5\u76ee\u5f55\u540d\uff1als {dir} \u663e\u793a\u6307\u5b9a\u76ee\u5f55 ls -l # \u5217\u8868\u65b9\u5f0f\u663e\u793a\u76ee\u5f55\u5185\u5bb9\uff0c\u5305\u62ec\u6587\u4ef6\u65e5\u671f\uff0c\u5927\u5c0f\uff0c\u6743\u9650\u7b49\u4fe1\u606f ls -a # \u663e\u793a\u6240\u6709\u6587\u4ef6\u548c\u76ee\u5f55\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff08.\u5f00\u5934\u7684\u6587\u4ef6/\u76ee\u5f55\u540d\uff09 ln -s { fn } { link } # \u7ed9\u6307\u5b9a\u6587\u4ef6\u521b\u5efa\u4e00\u4e2a\u8f6f\u94fe\u63a5 cp { src } { dest } # \u62f7\u8d1d\u6587\u4ef6\uff0ccp -r dir1 dir2 \u53ef\u4ee5\u9012\u5f52\u62f7\u8d1d\uff08\u76ee\u5f55\uff09 rm { fn } # \u5220\u9664\u6587\u4ef6\uff0crm -r \u9012\u5f52\u5220\u9664\u76ee\u5f55\uff0crm -f \u5f3a\u5236\u5220\u9664 mv { src } { dest } # \u79fb\u52a8\u6587\u4ef6\uff0c\u5982\u679c dest \u662f\u76ee\u5f55\uff0c\u5219\u79fb\u52a8\uff0c\u662f\u6587\u4ef6\u540d\u5219\u8986\u76d6 touch { fn } # \u521b\u5efa\u6216\u8005\u66f4\u65b0\u4e00\u4e0b\u5236\u5b9a\u6587\u4ef6 cat { fn } # \u8f93\u51fa\u6587\u4ef6\u539f\u59cb\u5185\u5bb9 any_cmd > { fn } # \u6267\u884c\u4efb\u610f\u547d\u4ee4\u5e76\u5c06\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6307\u5b9a\u6587\u4ef6 more { fn } # \u9010\u5c4f\u663e\u793a\u67d0\u6587\u4ef6\u5185\u5bb9\uff0c\u7a7a\u683c\u7ffb\u9875\uff0cq \u9000\u51fa less { fn } # \u66f4\u9ad8\u7ea7\u70b9\u7684 more\uff0c\u66f4\u591a\u64cd\u4f5c\uff0cq \u9000\u51fa head { fn } # \u663e\u793a\u6587\u4ef6\u5934\u90e8\u6570\u884c\uff0c\u53ef\u7528 head -3 abc.txt \u663e\u793a\u5934\u4e09\u884c tail { fn } # \u663e\u793a\u6587\u4ef6\u5c3e\u90e8\u6570\u884c\uff0c\u53ef\u7528 tail -3 abc.txt \u663e\u793a\u5c3e\u90e8\u4e09\u884c tail -f { fn } # \u6301\u7eed\u663e\u793a\u6587\u4ef6\u5c3e\u90e8\u6570\u636e\uff0c\u53ef\u7528\u4e8e\u76d1\u63a7\u65e5\u5fd7 nano { fn } # \u4f7f\u7528 nano \u7f16\u8f91\u5668\u7f16\u8f91\u6587\u4ef6 vim { fn } # \u4f7f\u7528 vim \u7f16\u8f91\u6587\u4ef6 diff { f1 } { f2 } # \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 wc { fn } # \u7edf\u8ba1\u6587\u4ef6\u6709\u591a\u5c11\u884c\uff0c\u591a\u5c11\u4e2a\u5355\u8bcd chmod 644 { fn } # \u4fee\u6539\u6587\u4ef6\u6743\u9650\u4e3a 644\uff0c\u53ef\u4ee5\u63a5 -R \u5bf9\u76ee\u5f55\u5faa\u73af\u6539\u6743\u9650 chgrp group { fn } # \u4fee\u6539\u6587\u4ef6\u6240\u5c5e\u7684\u7528\u6237\u7ec4 chown user1 { fn } # \u4fee\u6539\u6587\u4ef6\u6240\u6709\u4eba\u4e3a user1, chown user1:group1 fn \u53ef\u4ee5\u4fee\u6539\u7ec4 file { fn } # \u68c0\u6d4b\u6587\u4ef6\u7684\u7c7b\u578b\u548c\u7f16\u7801 basename { fn } # \u67e5\u770b\u6587\u4ef6\u7684\u540d\u5b57\uff08\u4e0d\u5305\u62ec\u8def\u5f84\uff09 dirname { fn } # \u67e5\u770b\u6587\u4ef6\u7684\u8def\u5f84\uff08\u4e0d\u5305\u62ec\u540d\u5b57\uff09 grep { pat } { fn } # \u5728\u6587\u4ef6\u4e2d\u67e5\u627e\u51fa\u73b0\u8fc7 pat \u7684\u5185\u5bb9 grep -r { pat } . # \u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u9012\u5f52\u67e5\u627e\u6240\u6709\u51fa\u73b0\u8fc7 pat \u7684\u6587\u4ef6\u5185\u5bb9 stat { fn } # \u663e\u793a\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f","title":"\u6587\u4ef6\u64cd\u4f5c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_4","text":"############################################################################## # \u7528\u6237\u7ba1\u7406 ############################################################################## whoami # \u663e\u793a\u6211\u7684\u7528\u6237\u540d who # \u663e\u793a\u5df2\u767b\u9646\u7528\u6237\u4fe1\u606f\uff0cw / who / users \u5185\u5bb9\u7565\u6709\u4e0d\u540c w # \u663e\u793a\u5df2\u767b\u9646\u7528\u6237\u4fe1\u606f\uff0cw / who / users \u5185\u5bb9\u7565\u6709\u4e0d\u540c users # \u663e\u793a\u5df2\u767b\u9646\u7528\u6237\u4fe1\u606f\uff0cw / who / users \u5185\u5bb9\u7565\u6709\u4e0d\u540c passwd # \u4fee\u6539\u5bc6\u7801\uff0cpasswd {user} \u53ef\u4ee5\u7528\u4e8e root \u4fee\u6539\u522b\u4eba\u5bc6\u7801 finger { user } # \u663e\u793a\u67d0\u7528\u6237\u4fe1\u606f\uff0c\u5305\u62ec id, \u540d\u5b57, \u767b\u9646\u72b6\u6001\u7b49 adduser { user } # \u6dfb\u52a0\u7528\u6237 deluser { user } # \u5220\u9664\u7528\u6237 w # \u67e5\u770b\u8c01\u5728\u7ebf su # \u5207\u6362\u5230 root \u7528\u6237 su - # \u5207\u6362\u5230 root \u7528\u6237\u5e76\u767b\u9646\uff08\u6267\u884c\u767b\u9646\u811a\u672c\uff09 su { user } # \u5207\u6362\u5230\u67d0\u7528\u6237 su - { user } # \u5207\u6362\u5230\u67d0\u7528\u6237\u5e76\u767b\u9646\uff08\u6267\u884c\u767b\u9646\u811a\u672c\uff09 id { user } # \u67e5\u770b\u7528\u6237\u7684 uid\uff0cgid \u4ee5\u53ca\u6240\u5c5e\u5176\u4ed6\u7528\u6237\u7ec4 id -u { user } # \u6253\u5370\u7528\u6237 uid id -g { user } # \u6253\u5370\u7528\u6237 gid write { user } # \u5411\u67d0\u7528\u6237\u53d1\u9001\u4e00\u53e5\u6d88\u606f last # \u663e\u793a\u6700\u8fd1\u7528\u6237\u767b\u9646\u5217\u8868 last { user } # \u663e\u793a\u767b\u9646\u8bb0\u5f55 lastb # \u663e\u793a\u5931\u8d25\u767b\u9646\u8bb0\u5f55 lastlog # \u663e\u793a\u6240\u6709\u7528\u6237\u7684\u6700\u8fd1\u767b\u9646\u8bb0\u5f55 sudo { command } # \u4ee5 root \u6743\u9650\u6267\u884c\u67d0\u547d\u4ee4","title":"\u7528\u6237\u7ba1\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_5","text":"############################################################################## # \u8fdb\u7a0b\u7ba1\u7406 ############################################################################## ps # \u67e5\u770b\u5f53\u524d\u4f1a\u8bdd\u8fdb\u7a0b ps ax # \u67e5\u770b\u6240\u6709\u8fdb\u7a0b\uff0c\u7c7b\u4f3c ps -e ps aux # \u67e5\u770b\u6240\u6709\u8fdb\u7a0b\u8be6\u7ec6\u4fe1\u606f\uff0c\u7c7b\u4f3c ps -ef ps auxww # \u67e5\u770b\u6240\u6709\u8fdb\u7a0b\uff0c\u5e76\u4e14\u663e\u793a\u8fdb\u7a0b\u7684\u5b8c\u6574\u542f\u52a8\u547d\u4ee4 ps -u { user } # \u67e5\u770b\u67d0\u7528\u6237\u8fdb\u7a0b ps axjf # \u5217\u51fa\u8fdb\u7a0b\u6811 ps xjf -u { user } # \u5217\u51fa\u67d0\u7528\u6237\u7684\u8fdb\u7a0b\u6811 ps -eo pid,user,command # \u6309\u7528\u6237\u6307\u5b9a\u7684\u683c\u5f0f\u67e5\u770b\u8fdb\u7a0b ps aux | grep httpd # \u67e5\u770b\u540d\u4e3a httpd \u7684\u6240\u6709\u8fdb\u7a0b ps --ppid { pid } # \u67e5\u770b\u7236\u8fdb\u7a0b\u4e3a pid \u7684\u6240\u6709\u8fdb\u7a0b pstree # \u6811\u5f62\u5217\u51fa\u6240\u6709\u8fdb\u7a0b\uff0cpstree \u9ed8\u8ba4\u4e00\u822c\u4e0d\u5e26\uff0c\u9700\u5b89\u88c5 pstree { user } # \u8fdb\u7a0b\u6811\u5217\u51fa\u67d0\u7528\u6237\u7684\u8fdb\u7a0b pstree -u # \u6811\u5f62\u5217\u51fa\u6240\u6709\u8fdb\u7a0b\u4ee5\u53ca\u6240\u5c5e\u7528\u6237 pgrep { procname } # \u641c\u7d22\u540d\u5b57\u5339\u914d\u7684\u8fdb\u7a0b\u7684 pid\uff0c\u6bd4\u5982 pgrep apache2 kill { pid } # \u7ed3\u675f\u8fdb\u7a0b kill -9 { pid } # \u5f3a\u5236\u7ed3\u675f\u8fdb\u7a0b\uff0c9/SIGKILL \u662f\u5f3a\u5236\u4e0d\u53ef\u6355\u83b7\u7ed3\u675f\u4fe1\u53f7 kill -KILL { pid } # \u5f3a\u5236\u6267\u884c\u8fdb\u7a0b\uff0ckill -9 \u7684\u53e6\u5916\u4e00\u79cd\u5199\u6cd5 kill -l # \u67e5\u770b\u6240\u6709\u4fe1\u53f7 kill -l TERM # \u67e5\u770b TERM \u4fe1\u53f7\u7684\u7f16\u53f7 killall { procname } # \u6309\u540d\u79f0\u7ed3\u675f\u6240\u6709\u8fdb\u7a0b pkill { procname } # \u6309\u540d\u79f0\u7ed3\u675f\u8fdb\u7a0b\uff0c\u9664\u540d\u79f0\u5916\u8fd8\u53ef\u4ee5\u6709\u5176\u4ed6\u53c2\u6570 top # \u67e5\u770b\u6700\u6d3b\u8dc3\u7684\u8fdb\u7a0b top -u { user } # \u67e5\u770b\u67d0\u7528\u6237\u6700\u6d3b\u8dc3\u7684\u8fdb\u7a0b any_command & # \u5728\u540e\u53f0\u8fd0\u884c\u67d0\u547d\u4ee4\uff0c\u4e5f\u53ef\u7528 CTRL+Z \u5c06\u5f53\u524d\u8fdb\u7a0b\u6302\u5230\u540e\u53f0 jobs # \u67e5\u770b\u6240\u6709\u540e\u53f0\u8fdb\u7a0b\uff08jobs\uff09 bg # \u67e5\u770b\u540e\u53f0\u8fdb\u7a0b\uff0c\u5e76\u5207\u6362\u8fc7\u53bb fg # \u5207\u6362\u540e\u53f0\u8fdb\u7a0b\u5230\u524d\u53f0 fg { job } # \u5207\u6362\u7279\u5b9a\u540e\u53f0\u8fdb\u7a0b\u5230\u524d\u53f0 trap cmd sig1 sig2 # \u5728\u811a\u672c\u4e2d\u8bbe\u7f6e\u4fe1\u53f7\u5904\u7406\u547d\u4ee4 trap \"\" sig1 sig2 # \u5728\u811a\u672c\u4e2d\u5c4f\u853d\u67d0\u4fe1\u53f7 trap - sig1 sig2 # \u6062\u590d\u9ed8\u8ba4\u4fe1\u53f7\u5904\u7406\u884c\u4e3a nohup { command } # \u957f\u671f\u8fd0\u884c\u67d0\u7a0b\u5e8f\uff0c\u5728\u4f60\u9000\u51fa\u767b\u9646\u90fd\u4fdd\u6301\u5b83\u8fd0\u884c nohup { command } & # \u5728\u540e\u53f0\u957f\u671f\u8fd0\u884c\u67d0\u7a0b\u5e8f disown { PID | JID } # \u5c06\u8fdb\u7a0b\u4ece\u540e\u53f0\u4efb\u52a1\u5217\u8868\uff08jobs\uff09\u79fb\u9664 wait # \u7b49\u5f85\u6240\u6709\u540e\u53f0\u8fdb\u7a0b\u4efb\u52a1\u7ed3\u675f","title":"\u8fdb\u7a0b\u7ba1\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#ssh","text":"############################################################################## # \u5e38\u7528\u547d\u4ee4\uff1aSSH / \u7cfb\u7edf\u4fe1\u606f / \u7f51\u7edc ############################################################################## ssh user@host # \u4ee5\u7528\u6237 user \u767b\u9646\u5230\u8fdc\u7a0b\u4e3b\u673a host ssh -p { port } user@host # \u6307\u5b9a\u7aef\u53e3\u767b\u9646\u4e3b\u673a ssh-copy-id user@host # \u62f7\u8d1d\u4f60\u7684 ssh key \u5230\u8fdc\u7a0b\u4e3b\u673a\uff0c\u907f\u514d\u91cd\u590d\u8f93\u5165\u5bc6\u7801 scp { fn } user@host:path # \u62f7\u8d1d\u6587\u4ef6\u5230\u8fdc\u7a0b\u4e3b\u673a scp user@host:path dest # \u4ece\u8fdc\u7a0b\u4e3b\u673a\u62f7\u8d1d\u6587\u4ef6\u56de\u6765 scp -P { port } ... # \u6307\u5b9a\u7aef\u53e3\u8fdc\u7a0b\u62f7\u8d1d\u6587\u4ef6 uname -a # \u67e5\u770b\u5185\u6838\u7248\u672c\u7b49\u4fe1\u606f man { help } # \u67e5\u770b\u5e2e\u52a9 man -k { keyword } # \u67e5\u770b\u54ea\u4e9b\u5e2e\u52a9\u6587\u6863\u91cc\u5305\u542b\u4e86\u8be5\u5173\u952e\u5b57 info { help } # \u67e5\u770b info pages\uff0c\u6bd4 man \u66f4\u5f3a\u7684\u5e2e\u52a9\u7cfb\u7edf uptime # \u67e5\u770b\u7cfb\u7edf\u542f\u52a8\u65f6\u95f4 date # \u663e\u793a\u65e5\u671f cal # \u663e\u793a\u65e5\u5386 vmstat # \u663e\u793a\u5185\u5b58\u548c CPU \u4f7f\u7528\u60c5\u51b5 vmstat 10 # \u6bcf 10 \u79d2\u6253\u5370\u4e00\u884c\u5185\u5b58\u548c CPU\u60c5\u51b5\uff0cCTRL+C \u9000\u51fa free # \u663e\u793a\u5185\u5b58\u548c\u4ea4\u6362\u533a\u4f7f\u7528\u60c5\u51b5 df # \u663e\u793a\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5 du # \u663e\u793a\u5f53\u524d\u76ee\u5f55\u5360\u7528\uff0cdu . --max-depth=2 \u53ef\u4ee5\u6307\u5b9a\u6df1\u5ea6 uname # \u663e\u793a\u7cfb\u7edf\u7248\u672c\u53f7 hostname # \u663e\u793a\u4e3b\u673a\u540d\u79f0 showkey -a # \u67e5\u770b\u7ec8\u7aef\u53d1\u9001\u7684\u6309\u952e\u7f16\u7801 ping { host } # ping \u8fdc\u7a0b\u4e3b\u673a\u5e76\u663e\u793a\u7ed3\u679c\uff0cCTRL+C \u9000\u51fa ping -c N { host } # ping \u8fdc\u7a0b\u4e3b\u673a N \u6b21 traceroute { host } # \u4fa6\u6d4b\u8def\u7531\u8fde\u901a\u60c5\u51b5 mtr { host } # \u9ad8\u7ea7\u7248\u672c traceroute host { domain } # DNS \u67e5\u8be2\uff0c{domain} \u524d\u9762\u53ef\u52a0 -a \u67e5\u770b\u8be6\u7ec6\u4fe1\u606f whois { domain } # \u53d6\u5f97\u57df\u540d whois \u4fe1\u606f dig { domain } # \u53d6\u5f97\u57df\u540d dns \u4fe1\u606f route -n # \u67e5\u770b\u8def\u7531\u8868 netstat -a # \u5217\u51fa\u6240\u6709\u7aef\u53e3 netstat -an # \u67e5\u770b\u6240\u6709\u8fde\u63a5\u4fe1\u606f\uff0c\u4e0d\u89e3\u6790\u57df\u540d netstat -anp # \u67e5\u770b\u6240\u6709\u8fde\u63a5\u4fe1\u606f\uff0c\u5305\u542b\u8fdb\u7a0b\u4fe1\u606f\uff08\u9700\u8981 sudo\uff09 netstat -l # \u67e5\u770b\u6240\u6709\u76d1\u542c\u7684\u7aef\u53e3 netstat -t # \u67e5\u770b\u6240\u6709 TCP \u94fe\u63a5 netstat -lntu # \u663e\u793a\u6240\u6709\u6b63\u5728\u76d1\u542c\u7684 TCP \u548c UDP \u4fe1\u606f netstat -lntup # \u663e\u793a\u6240\u6709\u6b63\u5728\u76d1\u542c\u7684 socket \u53ca\u8fdb\u7a0b\u4fe1\u606f netstat -i # \u663e\u793a\u7f51\u5361\u4fe1\u606f netstat -rn # \u663e\u793a\u5f53\u524d\u7cfb\u7edf\u8def\u7531\u8868\uff0c\u540c route -n ss -an # \u6bd4 netstat -an \u66f4\u5feb\u901f\u66f4\u8be6\u7ec6 ss -s # \u7edf\u8ba1 TCP \u7684 established, wait \u7b49 wget { url } # \u4e0b\u8f7d\u6587\u4ef6\uff0c\u53ef\u52a0 --no-check-certificate \u5ffd\u7565 ssl \u9a8c\u8bc1 wget -qO- { url } # \u4e0b\u8f7d\u6587\u4ef6\u5e76\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\uff08\u4e0d\u4fdd\u5b58\uff09 curl -sL { url } # \u540c wget -qO- {url} \u6ca1\u6709 wget \u7684\u65f6\u5019\u4f7f\u7528 sz { file } # \u53d1\u9001\u6587\u4ef6\u5230\u7ec8\u7aef\uff0czmodem \u534f\u8bae rz # \u63a5\u6536\u7ec8\u7aef\u53d1\u9001\u8fc7\u6765\u7684\u6587\u4ef6","title":"\u5e38\u7528\u547d\u4ee4\uff1aSSH / \u7cfb\u7edf\u4fe1\u606f / \u7f51\u7edc"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_6","text":"############################################################################## # \u53d8\u91cf\u64cd\u4f5c ############################################################################## varname = value # \u5b9a\u4e49\u53d8\u91cf varname = value command # \u5b9a\u4e49\u5b50\u8fdb\u7a0b\u53d8\u91cf\u5e76\u6267\u884c\u5b50\u8fdb\u7a0b echo $varname # \u67e5\u770b\u53d8\u91cf\u5185\u5bb9 echo $$ # \u67e5\u770b\u5f53\u524d shell \u7684\u8fdb\u7a0b\u53f7 echo $! # \u67e5\u770b\u6700\u8fd1\u8c03\u7528\u7684\u540e\u53f0\u4efb\u52a1\u8fdb\u7a0b\u53f7 echo $? # \u67e5\u770b\u6700\u8fd1\u4e00\u6761\u547d\u4ee4\u7684\u8fd4\u56de\u7801 export VARNAME = value # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff08\u5c06\u4f1a\u5f71\u54cd\u5230\u5b50\u8fdb\u7a0b\uff09 array [ 0 ]= valA # \u5b9a\u4e49\u6570\u7ec4 array [ 1 ]= valB array [ 2 ]= valC array =([ 0 ]= valA [ 1 ]= valB [ 2 ]= valC ) # \u53e6\u4e00\u79cd\u65b9\u5f0f array =( valA valB valC ) # \u53e6\u4e00\u79cd\u65b9\u5f0f ${ array [i] } # \u53d6\u5f97\u6570\u7ec4\u4e2d\u7684\u5143\u7d20 ${# array [@] } # \u53d6\u5f97\u6570\u7ec4\u7684\u957f\u5ea6 ${# array [i] } # \u53d6\u5f97\u6570\u7ec4\u4e2d\u67d0\u4e2a\u53d8\u91cf\u7684\u957f\u5ea6 declare -a # \u67e5\u770b\u6240\u6709\u6570\u7ec4 declare -f # \u67e5\u770b\u6240\u6709\u51fd\u6570 declare -F # \u67e5\u770b\u6240\u6709\u51fd\u6570\uff0c\u4ec5\u663e\u793a\u51fd\u6570\u540d declare -i # \u67e5\u770b\u6240\u6709\u6574\u6570 declare -r # \u67e5\u770b\u6240\u6709\u53ea\u8bfb\u53d8\u91cf declare -x # \u67e5\u770b\u6240\u6709\u88ab\u5bfc\u51fa\u6210\u73af\u5883\u53d8\u91cf\u7684\u4e1c\u897f declare -p varname # \u8f93\u51fa\u53d8\u91cf\u662f\u600e\u4e48\u5b9a\u4e49\u7684\uff08\u7c7b\u578b+\u503c\uff09 ${ varname :- word } # \u5982\u679c\u53d8\u91cf\u4e0d\u4e3a\u7a7a\u5219\u8fd4\u56de\u53d8\u91cf\uff0c\u5426\u5219\u8fd4\u56de word ${ varname :=word } # \u5982\u679c\u53d8\u91cf\u4e0d\u4e3a\u7a7a\u5219\u8fd4\u56de\u53d8\u91cf\uff0c\u5426\u5219\u8d4b\u503c\u6210 word \u5e76\u8fd4\u56de ${ varname :?message } # \u5982\u679c\u53d8\u91cf\u4e0d\u4e3a\u7a7a\u5219\u8fd4\u56de\u53d8\u91cf\uff0c\u5426\u5219\u6253\u5370\u9519\u8bef\u4fe1\u606f\u5e76\u9000\u51fa ${ varname :+word } # \u5982\u679c\u53d8\u91cf\u4e0d\u4e3a\u7a7a\u5219\u8fd4\u56de word\uff0c\u5426\u5219\u8fd4\u56de null ${ varname : offset : len } # \u53d6\u5f97\u5b57\u7b26\u4e32\u7684\u5b50\u5b57\u7b26\u4e32 ${ variable #pattern } # \u5982\u679c\u53d8\u91cf\u5934\u90e8\u5339\u914d pattern\uff0c\u5219\u5220\u9664\u6700\u5c0f\u5339\u914d\u90e8\u5206\u8fd4\u56de\u5269\u4e0b\u7684 ${ variable ##pattern } # \u5982\u679c\u53d8\u91cf\u5934\u90e8\u5339\u914d pattern\uff0c\u5219\u5220\u9664\u6700\u5927\u5339\u914d\u90e8\u5206\u8fd4\u56de\u5269\u4e0b\u7684 ${ variable %pattern } # \u5982\u679c\u53d8\u91cf\u5c3e\u90e8\u5339\u914d pattern\uff0c\u5219\u5220\u9664\u6700\u5c0f\u5339\u914d\u90e8\u5206\u8fd4\u56de\u5269\u4e0b\u7684 ${ variable %%pattern } # \u5982\u679c\u53d8\u91cf\u5c3e\u90e8\u5339\u914d pattern\uff0c\u5219\u5220\u9664\u6700\u5927\u5339\u914d\u90e8\u5206\u8fd4\u56de\u5269\u4e0b\u7684 ${ variable /pattern/str } # \u5c06\u53d8\u91cf\u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d pattern \u7684\u66ff\u6362\u6210 str\uff0c\u5e76\u8fd4\u56de ${ variable //pattern/str } # \u5c06\u53d8\u91cf\u4e2d\u6240\u6709\u5339\u914d pattern \u7684\u5730\u65b9\u66ff\u6362\u6210 str \u5e76\u8fd4\u56de ${# varname } # \u8fd4\u56de\u5b57\u7b26\u4e32\u957f\u5ea6 * ( patternlist ) # \u96f6\u6b21\u6216\u8005\u591a\u6b21\u5339\u914d + ( patternlist ) # \u4e00\u6b21\u6216\u8005\u591a\u6b21\u5339\u914d ? ( patternlist ) # \u96f6\u6b21\u6216\u8005\u4e00\u6b21\u5339\u914d @ ( patternlist ) # \u5355\u8bcd\u5339\u914d ! ( patternlist ) # \u4e0d\u5339\u914d array =( $text ) # \u6309\u7a7a\u683c\u5206\u9694 text \u6210\u6570\u7ec4\uff0c\u5e76\u8d4b\u503c\u7ed9\u53d8\u91cf IFS = \"/\" array =( $text ) # \u6309\u659c\u6746\u5206\u9694\u5b57\u7b26\u4e32 text \u6210\u6570\u7ec4\uff0c\u5e76\u8d4b\u503c\u7ed9\u53d8\u91cf text = \" ${ array [*] } \" # \u7528\u7a7a\u683c\u94fe\u63a5\u6570\u7ec4\u5e76\u8d4b\u503c\u7ed9\u53d8\u91cf text = $( IFS = / ; echo \" ${ array [*] } \" ) # \u7528\u659c\u6760\u94fe\u63a5\u6570\u7ec4\u5e76\u8d4b\u503c\u7ed9\u53d8\u91cf $( UNIX command ) # \u8fd0\u884c\u547d\u4ee4\uff0c\u5e76\u5c06\u6807\u51c6\u8f93\u51fa\u5185\u5bb9\u6355\u83b7\u5e76\u8fd4\u56de varname = $( id -u user ) # \u5c06\u7528\u6237\u540d\u4e3a user \u7684 uid \u8d4b\u503c\u7ed9 varname \u53d8\u91cf num = $( expr 1 + 2 ) # \u517c\u5bb9 posix sh \u7684\u8ba1\u7b97\uff0c\u4f7f\u7528 expr \u547d\u4ee4\u8ba1\u7b97\u7ed3\u679c num = $( expr $num + 1 ) # \u6570\u5b57\u81ea\u589e expr 2 \\* \\( 2 + 3 \\) # \u517c\u5bb9 posix sh \u7684\u590d\u6742\u8ba1\u7b97\uff0c\u8f93\u51fa 10 num = $(( 1 + 2 )) # \u8ba1\u7b97 1+2 \u8d4b\u503c\u7ed9 num\uff0c\u4f7f\u7528 bash \u72ec\u6709\u7684 $((..)) \u8ba1\u7b97 num = $(( $num + 1 )) # \u53d8\u91cf\u9012\u589e num = $(( num + 1 )) # \u53d8\u91cf\u9012\u589e\uff0c\u53cc\u62ec\u53f7\u5185\u7684 $ \u53ef\u4ee5\u7701\u7565 num = $(( 1 + ( 2 + 3 ) * 2 )) # \u590d\u6742\u8ba1\u7b97","title":"\u53d8\u91cf\u64cd\u4f5c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_7","text":"############################################################################## # \u4e8b\u4ef6\u6307\u793a\u7b26 ############################################################################## !! # \u4e0a\u4e00\u6761\u547d\u4ee4 !^ # \u4e0a\u4e00\u6761\u547d\u4ee4\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd !$ # \u4e0a\u4e00\u6761\u547d\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u5355\u8bcd !string # \u6700\u8fd1\u4e00\u6761\u5305\u542bstring\u7684\u547d\u4ee4 !^string1^string2 # \u6700\u8fd1\u4e00\u6761\u5305\u542bstring1\u7684\u547d\u4ee4, \u5feb\u901f\u66ff\u6362\u4e3astring2, \u76f8\u5f53\u4e8e!!:s/string1/string2/ !# # \u672c\u6761\u547d\u4ee4\u4e4b\u524d\u6240\u6709\u7684\u8f93\u5165\u5185\u5bb9","title":"\u4e8b\u4ef6\u6307\u793a\u7b26"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_8","text":"############################################################################## # \u51fd\u6570 ############################################################################## # \u5b9a\u4e49\u4e00\u4e2a\u65b0\u51fd\u6570 function myfunc () { # $1 \u4ee3\u8868\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c$N \u4ee3\u8868\u7b2c N \u4e2a\u53c2\u6570 # $# \u4ee3\u8868\u53c2\u6570\u4e2a\u6570 # $0 \u4ee3\u8868\u88ab\u8c03\u7528\u8005\u81ea\u8eab\u7684\u540d\u5b57 # $@ \u4ee3\u8868\u6240\u6709\u53c2\u6570\uff0c\u7c7b\u578b\u662f\u4e2a\u6570\u7ec4\uff0c\u60f3\u4f20\u9012\u6240\u6709\u53c2\u6570\u7ed9\u5176\u4ed6\u547d\u4ee4\u7528 cmd \"$@\" # $* \u7a7a\u683c\u94fe\u63a5\u8d77\u6765\u7684\u6240\u6709\u53c2\u6570\uff0c\u7c7b\u578b\u662f\u5b57\u7b26\u4e32 { shell commands ... } } myfunc # \u8c03\u7528\u51fd\u6570 myfunc myfunc arg1 arg2 arg3 # \u5e26\u53c2\u6570\u7684\u51fd\u6570\u8c03\u7528 myfunc \" $@ \" # \u5c06\u6240\u6709\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570 shift # \u53c2\u6570\u5de6\u79fb unset -f myfunc # \u5220\u9664\u51fd\u6570 declare -f # \u5217\u51fa\u51fd\u6570\u5b9a\u4e49","title":"\u51fd\u6570"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#posix-sh-man-test","text":"############################################################################## # \u6761\u4ef6\u5224\u65ad\uff08\u517c\u5bb9 posix sh \u7684\u6761\u4ef6\u5224\u65ad\uff09\uff1aman test ############################################################################## statement1 && statement2 # and \u64cd\u4f5c\u7b26 statement1 || statement2 # or \u64cd\u4f5c\u7b26 exp1 -a exp2 # exp1 \u548c exp2 \u540c\u65f6\u4e3a\u771f\u65f6\u8fd4\u56de\u771f\uff08POSIX XSI\u6269\u5c55\uff09 exp1 -o exp2 # exp1 \u548c exp2 \u6709\u4e00\u4e2a\u4e3a\u771f\u5c31\u8fd4\u56de\u771f\uff08POSIX XSI\u6269\u5c55\uff09 ( expression ) # \u5982\u679c expression \u4e3a\u771f\u65f6\u8fd4\u56de\u771f\uff0c\u8f93\u5165\u6ce8\u610f\u62ec\u53f7\u524d\u53cd\u659c\u6746 ! expression # \u5982\u679c expression \u4e3a\u5047\u90a3\u8fd4\u56de\u771f str1 = str2 # \u5224\u65ad\u5b57\u7b26\u4e32\u76f8\u7b49\uff0c\u5982 [ \"$x\" = \"$y\" ] && echo yes str1 ! = str2 # \u5224\u65ad\u5b57\u7b26\u4e32\u4e0d\u7b49\uff0c\u5982 [ \"$x\" != \"$y\" ] && echo yes str1 < str2 # \u5b57\u7b26\u4e32\u5c0f\u4e8e\uff0c\u5982 [ \"$x\" \\< \"$y\" ] && echo yes str2 > str2 # \u5b57\u7b26\u4e32\u5927\u4e8e\uff0c\u6ce8\u610f < \u6216 > \u662f\u5b57\u9762\u91cf\uff0c\u8f93\u5165\u65f6\u8981\u52a0\u53cd\u659c\u6746 -n str1 # \u5224\u65ad\u5b57\u7b26\u4e32\u4e0d\u4e3a\u7a7a\uff08\u957f\u5ea6\u5927\u4e8e\u96f6\uff09 -z str1 # \u5224\u65ad\u5b57\u7b26\u4e32\u4e3a\u7a7a\uff08\u957f\u5ea6\u7b49\u4e8e\u96f6\uff09 -a file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u5982 [ -a /tmp/abc ] && echo \"exists\" -d file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u8be5\u6587\u4ef6\u662f\u4e00\u4e2a\u76ee\u5f55 -e file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u548c -a \u7b49\u4ef7 -f file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u8be5\u6587\u4ef6\u662f\u4e00\u4e2a\u666e\u901a\u6587\u4ef6\uff08\u975e\u76ee\u5f55\u7b49\uff09 -r file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u53ef\u8bfb -s file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u5c3a\u5bf8\u5927\u4e8e0 -w file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u53ef\u5199 -x file # \u5224\u65ad\u6587\u4ef6\u5b58\u5728\uff0c\u4e14\u6267\u884c -N file # \u6587\u4ef6\u4e0a\u6b21\u4fee\u6539\u8fc7\u540e\u8fd8\u6ca1\u6709\u8bfb\u53d6\u8fc7 -O file # \u6587\u4ef6\u5b58\u5728\u4e14\u5c5e\u4e8e\u5f53\u524d\u7528\u6237 -G file # \u6587\u4ef6\u5b58\u5728\u4e14\u5339\u914d\u4f60\u7684\u7528\u6237\u7ec4 file1 -nt file2 # \u6587\u4ef61 \u6bd4 \u6587\u4ef62 \u65b0 file1 -ot file2 # \u6587\u4ef61 \u6bd4 \u6587\u4ef62 \u65e7 num1 -eq num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 == num2 num1 -ne num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 != num2 num1 -lt num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 < num2 num1 -le num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 <= num2 num1 -gt num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 > num2 num1 -ge num2 # \u6570\u5b57\u5224\u65ad\uff1anum1 >= num2","title":"\u6761\u4ef6\u5224\u65ad\uff08\u517c\u5bb9 posix sh \u7684\u6761\u4ef6\u5224\u65ad\uff09\uff1aman test"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#if-test-posix-sh","text":"############################################################################## # \u5206\u652f\u63a7\u5236\uff1aif \u548c\u7ecf\u5178 test\uff0c\u517c\u5bb9 posix sh \u7684\u6761\u4ef6\u5224\u65ad\u8bed\u53e5 ############################################################################## test { expression } # \u5224\u65ad\u6761\u4ef6\u4e3a\u771f\u7684\u8bdd test \u7a0b\u5e8f\u8fd4\u56de0 \u5426\u5219\u975e\u96f6 [ expression ] # \u5224\u65ad\u6761\u4ef6\u4e3a\u771f\u7684\u8bdd\u8fd4\u56de0 \u5426\u5219\u975e\u96f6 test \"abc\" = \"def\" # \u67e5\u770b\u8fd4\u56de\u503c echo $? \u663e\u793a 1\uff0c\u56e0\u4e3a\u6761\u4ef6\u4e3a\u5047 test \"abc\" ! = \"def\" # \u67e5\u770b\u8fd4\u56de\u503c echo $? \u663e\u793a 0\uff0c\u56e0\u4e3a\u6761\u4ef6\u4e3a\u771f test -a /tmp ; echo $? # \u8c03\u7528 test \u5224\u65ad /tmp \u662f\u5426\u5b58\u5728\uff0c\u5e76\u6253\u5370 test \u7684\u8fd4\u56de\u503c [ -a /tmp ] ; echo $? # \u548c\u4e0a\u9762\u5b8c\u5168\u7b49\u4ef7\uff0c/tmp \u80af\u5b9a\u662f\u5b58\u5728\u7684\uff0c\u6240\u4ee5\u8f93\u51fa\u662f 0 test cond && cmd1 # \u5224\u65ad\u6761\u4ef6\u4e3a\u771f\u65f6\u6267\u884c cmd1 [ cond ] && cmd1 # \u548c\u4e0a\u9762\u5b8c\u5168\u7b49\u4ef7 [ cond ] && cmd1 || cmd2 # \u6761\u4ef6\u4e3a\u771f\u6267\u884c cmd1 \u5426\u5219\u6267\u884c cmd2 # \u5224\u65ad /etc/passwd \u6587\u4ef6\u662f\u5426\u5b58\u5728 # \u7ecf\u5178\u7684 if \u8bed\u53e5\u5c31\u662f\u5224\u65ad\u540e\u9762\u7684\u547d\u4ee4\u8fd4\u56de\u503c\u4e3a0\u7684\u8bdd\uff0c\u8ba4\u4e3a\u6761\u4ef6\u4e3a\u771f\uff0c\u5426\u5219\u4e3a\u5047 if test -e /etc/passwd ; then echo \"alright it exists ... \" else echo \"it doesn't exist ... \" fi # \u548c\u4e0a\u9762\u5b8c\u5168\u7b49\u4ef7\uff0c[ \u662f\u4e2a\u548c test \u4e00\u6837\u7684\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u4f46\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u4e3a ] # \u8fd9\u4e2a\u540d\u5b57\u4e3a \"[\" \u7684\u53ef\u6267\u884c\u7a0b\u5e8f\u4e00\u822c\u5c31\u5728 /bin \u6216 /usr/bin \u4e0b\u9762\uff0c\u6bd4 test \u4f18\u96c5\u4e9b if [ -e /etc/passwd ] ; then echo \"alright it exists ... \" else echo \"it doesn't exist ... \" fi # \u548c\u4e0a\u9762\u4e24\u4e2a\u5b8c\u5168\u7b49\u4ef7\uff0c\u5176\u5b9e\u5230 bash \u65f6\u4ee3 [ \u5df2\u7ecf\u662f\u5185\u90e8\u547d\u4ee4\u4e86\uff0c\u7528 enable \u53ef\u4ee5\u770b\u5230 [ -e /etc/passwd ] && echo \"alright it exists\" || echo \"it doesn't exist\" # \u6761\u4ef6\u4e0d\u6210\u7acb unless contidion then .. [ ! -e /etc/passwd ] && echo \"noT exists\" # \u5224\u65ad\u53d8\u91cf\u7684\u503c if [ \" $varname \" = \"foo\" ] ; then echo \"this is foo\" elif [ \" $varname \" = \"bar\" ] ; then echo \"this is bar\" else echo \"neither\" fi # \u590d\u6742\u6761\u4ef6\u5224\u65ad\uff0c\u6ce8\u610f || \u548c && \u662f\u5b8c\u5168\u517c\u5bb9 POSIX \u7684\u63a8\u8350\u5199\u6cd5 if [ $x -gt 10 ] && [ $x -lt 20 ] ; then echo \"yes, between 10 and 20\" fi # \u53ef\u4ee5\u7528 && \u547d\u4ee4\u8fde\u63a5\u7b26\u6765\u505a\u548c\u4e0a\u9762\u5b8c\u5168\u7b49\u4ef7\u7684\u4e8b\u60c5 [ $x -gt 10 ] && [ $x -lt 20 ] && echo \"yes, between 10 and 20\" # \u5c0f\u62ec\u53f7\u548c -a -o \u662f POSIX XSI \u6269\u5c55\u5199\u6cd5\uff0c\u5c0f\u62ec\u53f7\u662f\u5b57\u9762\u91cf\uff0c\u8f93\u5165\u65f6\u524d\u9762\u8981\u52a0\u53cd\u659c\u6746 if [ \\( $x -gt 10 \\) -a \\( $x -lt 20 \\) ] ; then echo \"yes, between 10 and 20\" fi # \u540c\u6837\u53ef\u4ee5\u7528 && \u547d\u4ee4\u8fde\u63a5\u7b26\u6765\u505a\u548c\u4e0a\u9762\u5b8c\u5168\u7b49\u4ef7\u7684\u4e8b\u60c5 [ \\( $x -gt 10 \\) -a \\( $x -lt 20 \\) ] && echo \"yes, between 10 and 20\" # \u5224\u65ad\u7a0b\u5e8f\u5b58\u5728\u7684\u8bdd\u5c31\u6267\u884c [ -x /bin/ls ] && /bin/ls -l # \u5982\u679c\u4e0d\u8003\u8651\u517c\u5bb9 posix sh \u548c dash \u8fd9\u4e9b\u7684\u8bdd\uff0c\u53ef\u7528 bash \u72ec\u6709\u7684 ((..)) \u548c [[..]]: https://www.ibm.com/developerworks/library/l-bash-test/index.html","title":"\u5206\u652f\u63a7\u5236\uff1aif \u548c\u7ecf\u5178 test\uff0c\u517c\u5bb9 posix sh \u7684\u6761\u4ef6\u5224\u65ad\u8bed\u53e5"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#while-for-case-until","text":"############################################################################## # \u6d41\u7a0b\u63a7\u5236\uff1awhile / for / case / until ############################################################################## # while \u5faa\u73af while condition ; do statements done i = 1 while [ $i -le 10 ] ; do echo $i ; i = $( expr $i + 1 ) done # for \u5faa\u73af\uff1a\u4e0a\u9762\u7684 while \u8bed\u53e5\u7b49\u4ef7 for i in { 1 ..10 } ; do echo $i done for name [ in list ] ; do statements done # for \u5217\u4e3e\u67d0\u76ee\u5f55\u4e0b\u9762\u7684\u6240\u6709\u6587\u4ef6 for f in /home/* ; do echo $f done # bash \u72ec\u6709\u7684 (( .. )) \u8bed\u53e5\uff0c\u66f4\u63a5\u8fd1 C \u8bed\u8a00\uff0c\u4f46\u662f\u4e0d\u517c\u5bb9 posix sh for (( initialisation ; ending condition ; update )) ; do statements done # \u548c\u4e0a\u9762\u7684\u5199\u6cd5\u7b49\u4ef7 for (( i = 0 ; i < 10 ; i++ )) ; do echo $i ; done # case \u5224\u65ad case expression in pattern1 ) statements ;; pattern2 ) statements ;; * ) otherwise ;; esac # until \u8bed\u53e5 until condition ; do statements done # select \u8bed\u53e5 select name [ in list ] ; do statements that can use $name done","title":"\u6d41\u7a0b\u63a7\u5236\uff1awhile / for / case / until"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_9","text":"############################################################################## # \u8f93\u51fa/\u8f93\u5165 \u91cd\u5b9a\u5411 ############################################################################## cmd1 | cmd2 # \u7ba1\u9053\uff0ccmd1 \u7684\u6807\u51c6\u8f93\u51fa\u63a5\u5230 cmd2 \u7684\u6807\u51c6\u8f93\u5165 < file # \u5c06\u6587\u4ef6\u5185\u5bb9\u91cd\u5b9a\u5411\u4e3a\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u5165 > file # \u5c06\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\uff0c\u4f1a\u8986\u76d6\u6587\u4ef6 >> file # \u5c06\u547d\u4ee4\u7684\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\uff0c\u8ffd\u52a0\u4e0d\u8986\u76d6 > | file # \u5f3a\u5236\u8f93\u51fa\u5230\u6587\u4ef6\uff0c\u5373\u4fbf\u8bbe\u7f6e\u8fc7\uff1aset -o noclobber n> | file # \u5f3a\u5236\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26 n\u7684\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6 <> file # \u540c\u65f6\u4f7f\u7528\u8be5\u6587\u4ef6\u4f5c\u4e3a\u6807\u51c6\u8f93\u5165\u548c\u6807\u51c6\u8f93\u51fa n<> file # \u540c\u65f6\u4f7f\u7528\u6587\u4ef6\u4f5c\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26 n \u7684\u8f93\u51fa\u548c\u8f93\u5165 n> file # \u91cd\u5b9a\u5411\u6587\u4ef6\u63cf\u8ff0\u7b26 n \u7684\u8f93\u51fa\u5230\u6587\u4ef6 n< file # \u91cd\u5b9a\u5411\u6587\u4ef6\u63cf\u8ff0\u7b26 n \u7684\u8f93\u5165\u4e3a\u6587\u4ef6\u5185\u5bb9 n> & # \u5c06\u6807\u51c6\u8f93\u51fa dup/\u5408\u5e76 \u5230\u6587\u4ef6\u63cf\u8ff0\u7b26 n n< & # \u5c06\u6807\u51c6\u8f93\u5165 dump/\u5408\u5e76 \u5b9a\u5411\u4e3a\u63cf\u8ff0\u7b26 n n> & m # \u6587\u4ef6\u63cf\u8ff0\u7b26 n \u88ab\u4f5c\u4e3a\u63cf\u8ff0\u7b26 m \u7684\u526f\u672c\uff0c\u8f93\u51fa\u7528 n< & m # \u6587\u4ef6\u63cf\u8ff0\u7b26 n \u88ab\u4f5c\u4e3a\u63cf\u8ff0\u7b26 m \u7684\u526f\u672c\uff0c\u8f93\u5165\u7528 & >file # \u5c06\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u91cd\u5b9a\u5411\u5230\u6587\u4ef6 < & - # \u5173\u95ed\u6807\u51c6\u8f93\u5165 > & - # \u5173\u95ed\u6807\u51c6\u8f93\u51fa n> & - # \u5173\u95ed\u4f5c\u4e3a\u8f93\u51fa\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 n n< & - # \u5173\u95ed\u4f5c\u4e3a\u8f93\u5165\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26 n diff < ( cmd1 ) < ( cmd2 ) # \u6bd4\u8f83\u4e24\u4e2a\u547d\u4ee4\u7684\u8f93\u51fa","title":"\u8f93\u51fa/\u8f93\u5165 \u91cd\u5b9a\u5411"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#-cut","text":"############################################################################## # \u6587\u672c\u5904\u7406 - cut ############################################################################## cut -c 1 -16 # \u622a\u53d6\u6bcf\u884c\u593416\u4e2a\u5b57\u7b26 cut -c 1 -16 file # \u622a\u53d6\u6307\u5b9a\u6587\u4ef6\u4e2d\u6bcf\u884c\u5934 16\u4e2a\u5b57\u7b26 cut -c3- # \u622a\u53d6\u6bcf\u884c\u4ece\u7b2c\u4e09\u4e2a\u5b57\u7b26\u5f00\u59cb\u5230\u884c\u672b\u7684\u5185\u5bb9 cut -d ':' -f5 # \u622a\u53d6\u7528\u5192\u53f7\u5206\u9694\u7684\u7b2c\u4e94\u5217\u5185\u5bb9 cut -d ';' -f2,10 # \u622a\u53d6\u7528\u5206\u53f7\u5206\u9694\u7684\u7b2c\u4e8c\u548c\u7b2c\u5341\u5217\u5185\u5bb9 cut -d ' ' -f3-7 # \u622a\u53d6\u7a7a\u683c\u5206\u9694\u7684\u4e09\u5230\u4e03\u5217 echo \"hello\" | cut -c1-3 # \u663e\u793a hel echo \"hello sir\" | cut -d ' ' -f2 # \u663e\u793a sir ps | tr -s \" \" | cut -d \" \" -f 2 ,3,4 # cut \u642d\u914d tr \u538b\u7f29\u5b57\u7b26","title":"\u6587\u672c\u5904\u7406 - cut"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#-awk-sed","text":"############################################################################## # \u6587\u672c\u5904\u7406 - awk / sed ############################################################################## awk '{print $5}' file # \u6253\u5370\u6587\u4ef6\u4e2d\u4ee5\u7a7a\u683c\u5206\u9694\u7684\u7b2c\u4e94\u5217 awk -F ',' '{print $5}' file # \u6253\u5370\u6587\u4ef6\u4e2d\u4ee5\u9017\u53f7\u5206\u9694\u7684\u7b2c\u4e94\u5217 awk '/str/ {print $2}' file # \u6253\u5370\u6587\u4ef6\u4e2d\u5305\u542b str \u7684\u6240\u6709\u884c\u7684\u7b2c\u4e8c\u5217 awk -F ',' '{print $NF}' file # \u6253\u5370\u9017\u53f7\u5206\u9694\u7684\u6587\u4ef6\u4e2d\u7684\u6bcf\u884c\u6700\u540e\u4e00\u5217 awk '{s+=$1} END {print s}' file # \u8ba1\u7b97\u6240\u6709\u7b2c\u4e00\u5217\u7684\u5408 awk 'NR%3==1' file # \u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\uff0c\u6bcf\u9694\u4e09\u884c\u6253\u5370\u4e00\u884c sed 's/find/replace/' file # \u66ff\u6362\u6587\u4ef6\u4e2d\u9996\u6b21\u51fa\u73b0\u7684\u5b57\u7b26\u4e32\u5e76\u8f93\u51fa\u7ed3\u679c sed '10s/find/replace/' file # \u66ff\u6362\u6587\u4ef6\u7b2c 10 \u884c\u5185\u5bb9 sed '10,20s/find/replace/' file # \u66ff\u6362\u6587\u4ef6\u4e2d 10-20 \u884c\u5185\u5bb9 sed -r 's/regex/replace/g' file # \u66ff\u6362\u6587\u4ef6\u4e2d\u6240\u6709\u51fa\u73b0\u7684\u5b57\u7b26\u4e32 sed -i 's/find/replace/g' file # \u66ff\u6362\u6587\u4ef6\u4e2d\u6240\u6709\u51fa\u73b0\u7684\u5b57\u7b26\u5e76\u4e14\u8986\u76d6\u6587\u4ef6 sed '/line/s/find/replace/' file # \u5148\u641c\u7d22\u884c\u7279\u5f81\u518d\u6267\u884c\u66ff\u6362 sed -e 's/f/r/' -e 's/f/r' file # \u6267\u884c\u591a\u6b21\u66ff\u6362 sed 's#find#replace#' file # \u4f7f\u7528 # \u66ff\u6362 / \u6765\u907f\u514d pattern \u4e2d\u6709\u659c\u6746 sed -i -r 's/^\\s+//g' file # \u5220\u9664\u6587\u4ef6\u6bcf\u884c\u5934\u90e8\u7a7a\u683c sed '/^$/d' file # \u5220\u9664\u6587\u4ef6\u7a7a\u884c\u5e76\u6253\u5370 sed -i 's/\\s\\+$//' file # \u5220\u9664\u6587\u4ef6\u6bcf\u884c\u672b\u5c3e\u591a\u4f59\u7a7a\u683c sed -n '2p' file # \u6253\u5370\u6587\u4ef6\u7b2c\u4e8c\u884c sed -n '2,5p' file # \u6253\u5370\u6587\u4ef6\u7b2c\u4e8c\u5230\u7b2c\u4e94\u884c","title":"\u6587\u672c\u5904\u7406 - awk / sed"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#-sort","text":"############################################################################## # \u6392\u5e8f - sort ############################################################################## sort file # \u6392\u5e8f\u6587\u4ef6 sort -r file # \u53cd\u5411\u6392\u5e8f\uff08\u964d\u5e8f\uff09 sort -n file # \u4f7f\u7528\u6570\u5b57\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83 sort -t: -k 3n /etc/passwd # \u6309 passwd \u6587\u4ef6\u7684\u7b2c\u4e09\u5217\u8fdb\u884c\u6392\u5e8f sort -u file # \u53bb\u91cd\u6392\u5e8f","title":"\u6392\u5e8f - sort"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#-httpsgithubcomrupaz","text":"############################################################################## # \u5feb\u901f\u8df3\u8f6c - https://github.com/rupa/z ############################################################################## source /path/to/z.sh # .bashrc \u4e2d\u521d\u59cb\u5316 z.sh z # \u5217\u51fa\u6240\u6709\u5386\u53f2\u8def\u5f84\u4ee5\u53ca\u4ed6\u4eec\u7684\u6743\u91cd z foo # \u8df3\u5230\u5386\u53f2\u8def\u5f84\u4e2d\u5339\u914d foo \u7684\u6743\u91cd\u6700\u5927\u7684\u76ee\u5f55 z foo bar # \u8df3\u5230\u5386\u53f2\u8def\u5f84\u4e2d\u5339\u914d foo \u548c bar \u6743\u91cd\u6700\u5927\u7684\u76ee\u5f55 z -l foo # \u5217\u51fa\u6240\u6709\u5386\u53f2\u8def\u5f84\u4e2d\u5339\u914d foo \u7684\u76ee\u5f55\u53ca\u6743\u91cd z -r foo # \u6309\u7167\u6700\u9ad8\u8bbf\u95ee\u6b21\u6570\u4f18\u5148\u8fdb\u884c\u5339\u914d\u8df3\u8f6c z -t foo # \u6309\u7167\u6700\u8fd1\u8bbf\u95ee\u4f18\u5148\u8fdb\u884c\u5339\u914d\u8df3\u8f6c","title":"\u5feb\u901f\u8df3\u8f6c - https://github.com/rupa/z"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_10","text":"############################################################################## # \u952e\u76d8\u7ed1\u5b9a ############################################################################## bind '\"\\eh\":\"\\C-b\"' # \u7ed1\u5b9a ALT+h \u4e3a\u5149\u6807\u5de6\u79fb\uff0c\u540c CTRL+b / <Left> bind '\"\\el\":\"\\C-f\"' # \u7ed1\u5b9a ALT+l \u4e3a\u5149\u6807\u53f3\u79fb\uff0c\u540c CTRL+f / <Right> bind '\"\\ej\":\"\\C-n\"' # \u7ed1\u5b9a ALT+j \u4e3a\u4e0b\u6761\u5386\u53f2\uff0c\u540c CTRL+n / <Down> bind '\"\\ek\":\"\\C-p\"' # \u7ed1\u5b9a ALT+k \u4e3a\u4e0a\u6761\u5386\u53f2\uff0c\u540c CTRL+p / <Up> bind '\"\\eH\":\"\\eb\"' # \u7ed1\u5b9a ALT+H \u4e3a\u5149\u6807\u5de6\u79fb\u4e00\u4e2a\u5355\u8bcd\uff0c\u540c ALT-b bind '\"\\eL\":\"\\ef\"' # \u7ed1\u5b9a ALT+L \u4e3a\u5149\u6807\u53f3\u79fb\u4e00\u4e2a\u5355\u8bcd\uff0c\u540c ALT-f bind '\"\\eJ\":\"\\C-a\"' # \u7ed1\u5b9a ALT+J \u4e3a\u79fb\u52a8\u5230\u884c\u9996\uff0c\u540c CTRL+a / <Home> bind '\"\\eK\":\"\\C-e\"' # \u7ed1\u5b9a ALT+K \u4e3a\u79fb\u52a8\u5230\u884c\u672b\uff0c\u540c CTRL+e / <End> bind '\"\\e;\":\"ls -l\\n\"' # \u7ed1\u5b9a ALT+; \u4e3a\u6267\u884c ls -l \u547d\u4ee4","title":"\u952e\u76d8\u7ed1\u5b9a"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#ip-ifconfig-nmap","text":"############################################################################## # \u7f51\u7edc\u7ba1\u7406\uff1aip / ifconfig / nmap ... ############################################################################## ip a # \u663e\u793a\u6240\u6709\u7f51\u7edc\u5730\u5740\uff0c\u540c ip address ip a show eth1 # \u663e\u793a\u7f51\u5361 IP \u5730\u5740 ip a add 172 .16.1.23/24 dev eth1 # \u6dfb\u52a0\u7f51\u5361 IP \u5730\u5740 ip a del 172 .16.1.23/24 dev eth1 # \u5220\u9664\u7f51\u5361 IP \u5730\u5740 ip link show dev eth0 # \u663e\u793a\u7f51\u5361\u8bbe\u5907\u5c5e\u6027 ip link set eth1 up # \u6fc0\u6d3b\u7f51\u5361 ip link set eth1 down # \u5173\u95ed\u7f51\u5361 ip link set eth1 address { mac } # \u4fee\u6539 MAC \u5730\u5740 ip neighbour # \u67e5\u770b ARP \u7f13\u5b58 ip route # \u67e5\u770b\u8def\u7531\u8868 ip route add 10 .1.0.0/24 via 10 .0.0.253 dev eth0 # \u6dfb\u52a0\u9759\u6001\u8def\u7531 ip route del 10 .1.0.0/24 # \u5220\u9664\u9759\u6001\u8def\u7531 ifconfig # \u663e\u793a\u6240\u6709\u7f51\u5361\u548c\u63a5\u53e3\u4fe1\u606f ifconfig -a # \u663e\u793a\u6240\u6709\u7f51\u5361\uff08\u5305\u62ec\u5f00\u673a\u6ca1\u542f\u52a8\u7684\uff09\u4fe1\u606f ifconfig eth0 # \u6307\u5b9a\u8bbe\u5907\u663e\u793a\u4fe1\u606f ifconfig eth0 up # \u6fc0\u6d3b\u7f51\u5361 ifconfig eth0 down # \u5173\u95ed\u7f51\u5361 ifconfig eth0 192 .168.120.56 # \u7ed9\u7f51\u5361\u914d\u7f6e IP \u5730\u5740 ifconfig eth0 10 .0.0.8 netmask 255 .255.255.0 up # \u914d\u7f6e IP \u5e76\u542f\u52a8 ifconfig eth0 hw ether 00 :aa:bb:cc:dd:ee # \u4fee\u6539 MAC \u5730\u5740 nmap 10 .0.0.12 # \u626b\u63cf\u4e3b\u673a 1-1000 \u7aef\u53e3 nmap -p 1024 -65535 10 .0.0.12 # \u626b\u63cf\u7ed9\u5b9a\u7aef\u53e3 nmap 10 .0.0.0/24 # \u7ed9\u5b9a\u7f51\u6bb5\u626b\u63cf\u5c40\u57df\u7f51\u5185\u6240\u6709\u4e3b\u673a nmap -O -sV 10 .0.0.12 # \u63a2\u6d4b\u4e3b\u673a\u670d\u52a1\u548c\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c","title":"\u7f51\u7edc\u7ba1\u7406\uff1aip / ifconfig / nmap ..."},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_11","text":"############################################################################## # \u6709\u8da3\u7684\u547d\u4ee4 ############################################################################## man hier # \u67e5\u770b\u6587\u4ef6\u7cfb\u7edf\u7684\u7ed3\u6784\u548c\u542b\u4e49 man test # \u67e5\u770b posix sh \u7684\u6761\u4ef6\u5224\u65ad\u5e2e\u52a9 man ascii # \u663e\u793a ascii \u8868 getconf LONG_BIT # \u67e5\u770b\u7cfb\u7edf\u662f 32 \u4f4d\u8fd8\u662f 64 \u4f4d bind -P # \u5217\u51fa\u6240\u6709 bash \u7684\u5feb\u6377\u952e mount | column -t # \u6f02\u4eae\u7684\u5217\u51fa\u5f53\u524d\u52a0\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf curl ip.cn # \u53d6\u5f97\u5916\u7f51 ip \u5730\u5740\u548c\u670d\u52a1\u5546\u4fe1\u606f disown -a && exit # \u5173\u95ed\u6240\u6709\u540e\u53f0\u4efb\u52a1\u5e76\u9000\u51fa cat /etc/issue # \u67e5\u770b Linux \u53d1\u884c\u7248\u4fe1\u606f lsof -i port:80 # \u54ea\u4e2a\u7a0b\u5e8f\u5728\u4f7f\u7528 80 \u7aef\u53e3\uff1f showkey -a # \u53d6\u5f97\u6309\u952e\u7684 ASCII \u7801 svn diff | view - # \u4f7f\u7528 Vim \u6765\u663e\u793a\u5e26\u8272\u5f69\u7684 diff \u8f93\u51fa mv filename. { old,new } # \u5feb\u901f\u6587\u4ef6\u6539\u540d time read # \u4f7f\u7528 CTRL-D \u505c\u6b62\uff0c\u6700\u7b80\u5355\u7684\u8ba1\u65f6\u529f\u80fd cp file.txt { ,.bak } # \u5feb\u901f\u5907\u4efd\u6587\u4ef6 sudo touch /forcefsck # \u5f3a\u5236\u5728\u4e0b\u6b21\u91cd\u542f\u65f6\u626b\u63cf\u78c1\u76d8 find ~ -mmin 60 -type f # \u67e5\u627e $HOME \u76ee\u5f55\u4e2d\uff0c60 \u5206\u949f\u5185\u4fee\u6539\u8fc7\u7684\u6587\u4ef6 curl wttr.in/~beijing # \u67e5\u770b\u5317\u4eac\u7684\u5929\u6c14\u9884\u62a5 echo ${ SSH_CLIENT %% * } # \u53d6\u5f97\u4f60\u662f\u4ece\u4ec0\u4e48 IP \u94fe\u63a5\u5230\u5f53\u524d\u4e3b\u673a\u4e0a\u7684 echo $ [ RANDOM%X+1 ] # \u53d6\u5f97 1 \u5230 X \u4e4b\u95f4\u7684\u968f\u673a\u6570 bind -x '\"\\C-l\":ls -l' # \u8bbe\u7f6e CTRL+l \u4e3a\u6267\u884c ls -l \u547d\u4ee4 find / -type f -size +5M # \u67e5\u627e\u5927\u4e8e 5M \u7684\u6587\u4ef6 chmod --reference f1 f2 # \u5c06 f2 \u7684\u6743\u9650\u8bbe\u7f6e\u6210 f1 \u4e00\u6a21\u4e00\u6837\u7684 curl -L cheat.sh # \u901f\u67e5\u8868\u5927\u5168","title":"\u6709\u8da3\u7684\u547d\u4ee4"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_12","text":"############################################################################## # \u5e38\u7528\u6280\u5de7 ############################################################################## # \u5217\u51fa\u6700\u5e38\u4f7f\u7528\u7684\u547d\u4ee4 history | awk '{a[$2]++}END{for(i in a){print a[i] \" \" i}}' | sort -rn | head # \u5217\u51fa\u6240\u6709\u7f51\u7edc\u72b6\u6001\uff1aESTABLISHED / TIME_WAIT / FIN_WAIT1 / FIN_WAIT2 netstat -n | awk '/^tcp/ {++tt[$NF]} END {for (a in tt) print a, tt[a]}' # \u901a\u8fc7 SSH \u6765 mount \u6587\u4ef6\u7cfb\u7edf sshfs name@server:/path/to/folder /path/to/mount/point # \u663e\u793a\u524d\u5341\u4e2a\u8fd0\u884c\u7684\u8fdb\u7a0b\u5e76\u6309\u5185\u5b58\u4f7f\u7528\u91cf\u6392\u5e8f ps aux | sort -nk +4 | tail # \u5728\u53f3\u4e0a\u89d2\u663e\u793a\u65f6\u949f while sleep 1 ; do tput sc ; tput cup 0 $(($( tput cols ) - 29 )) ; date ; tput rc ; done & # \u4ece\u7f51\u7edc\u4e0a\u7684\u538b\u7f29\u6587\u4ef6\u4e2d\u89e3\u51fa\u4e00\u4e2a\u6587\u4ef6\u6765\uff0c\u5e76\u907f\u514d\u4fdd\u5b58\u4e2d\u95f4\u6587\u4ef6 wget -qO - \"http://www.tarball.com/tarball.gz\" | tar zxvf - # \u6027\u80fd\u6d4b\u8bd5\uff1a\u6d4b\u8bd5\u5904\u7406\u5668\u6027\u80fd python -c \"import test.pystone;print(test.pystone.pystones())\" # \u6027\u80fd\u6d4b\u8bd5\uff1a\u6d4b\u8bd5\u5185\u5b58\u5e26\u5bbd dd if = /dev/zero of = /dev/null bs = 1M count = 32768 # Linux \u4e0b\u6302\u8f7d\u4e00\u4e2a iso \u6587\u4ef6 mount /path/to/file.iso /mnt/cdrom -oloop # \u901a\u8fc7\u4e3b\u673a A \u76f4\u63a5 ssh \u5230\u4e3b\u673a B ssh -t hostA ssh hostB # \u4e0b\u8f7d\u4e00\u4e2a\u7f51\u7ad9\u7684\u6240\u6709\u56fe\u7247 wget -r -l1 --no-parent -nH -nd -P/tmp -A \".gif,.jpg\" http://example.com/images # \u5feb\u901f\u521b\u5efa\u9879\u76ee\u76ee\u5f55 mkdir -p work/ { project1,project2 } / { src,bin,bak } # \u6309\u65e5\u671f\u8303\u56f4\u67e5\u627e\u6587\u4ef6 find . -type f -newermt \"2010-01-01\" ! -newermt \"2010-06-01\" # \u663e\u793a\u5f53\u524d\u6b63\u5728\u4f7f\u7528\u7f51\u7edc\u7684\u8fdb\u7a0b lsof -P -i -n | cut -f 1 -d \" \" | uniq | tail -n +2 # Vim \u4e2d\u4fdd\u5b58\u4e00\u4e2a\u6ca1\u6709\u6743\u9650\u7684\u6587\u4ef6 :w !sudo tee > /dev/null % # \u5728 .bashrc / .bash_profile \u4e2d\u52a0\u8f7d\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6\uff08\u6bd4\u5982\u4f60\u4fdd\u5b58\u5728 github \u4e0a\u7684\u914d\u7f6e\uff09 source ~/github/profiles/my_bash_init.sh # \u7ec8\u7aef\u4e0b\u6b63\u786e\u8bbe\u7f6e ALT \u952e\u548c BackSpace \u952e http://www.skywind.me/blog/archives/2021","title":"\u5e38\u7528\u6280\u5de7"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_13","text":"############################################################################## # \u6709\u7528\u7684\u51fd\u6570 ############################################################################## # \u81ea\u52a8\u89e3\u538b\uff1a\u5224\u65ad\u6587\u4ef6\u540e\u7f00\u540d\u5e76\u8c03\u7528\u76f8\u5e94\u89e3\u538b\u547d\u4ee4 function q-extract () { if [ -f $1 ] ; then case $1 in *.tar.bz2 ) tar -xvjf $1 ;; *.tar.gz ) tar -xvzf $1 ;; *.tar.xz ) tar -xvJf $1 ;; *.bz2 ) bunzip2 $1 ;; *.rar ) rar x $1 ;; *.gz ) gunzip $1 ;; *.tar ) tar -xvf $1 ;; *.tbz2 ) tar -xvjf $1 ;; *.tgz ) tar -xvzf $1 ;; *.zip ) unzip $1 ;; *.Z ) uncompress $1 ;; *.7z ) 7z x $1 ;; * ) echo \"don't know how to extract ' $1 '...\" ;; esac else echo \"' $1 ' is not a valid file!\" fi } # \u81ea\u52a8\u538b\u7f29\uff1a\u5224\u65ad\u540e\u7f00\u540d\u5e76\u8c03\u7528\u76f8\u5e94\u538b\u7f29\u7a0b\u5e8f function q-compress () { if [ -n \" $1 \" ] ; then FILE = $1 case $FILE in *.tar ) shift && tar -cf $FILE $* ;; *.tar.bz2 ) shift && tar -cjf $FILE $* ;; *.tar.xz ) shift && tar -cJf $FILE $* ;; *.tar.gz ) shift && tar -czf $FILE $* ;; *.tgz ) shift && tar -czf $FILE $* ;; *.zip ) shift && zip $FILE $* ;; *.rar ) shift && rar $FILE $* ;; esac else echo \"usage: q-compress <foo.tar.gz> ./foo ./bar\" fi } # \u6f02\u4eae\u7684\u5e26\u8bed\u6cd5\u9ad8\u4eae\u7684 color cat \uff0c\u9700\u8981\u5148 pip install pygments function ccat () { local style = \"monokai\" if [ $# -eq 0 ] ; then pygmentize -P style = $style -P tabsize = 4 -f terminal256 -g else for NAME in $@ ; do pygmentize -P style = $style -P tabsize = 4 -f terminal256 -g \" $NAME \" done fi }","title":"\u6709\u7528\u7684\u51fd\u6570"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#_14","text":"############################################################################## # \u597d\u73a9\u7684\u914d\u7f6e ############################################################################## # \u653e\u5230\u4f60\u7684 ~/.bashrc \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u7ed9 man \u589e\u52a0\u6f02\u4eae\u7684\u8272\u5f69\u9ad8\u4eae export LESS_TERMCAP_mb = $'\\E[1m\\E[32m' export LESS_TERMCAP_mh = $'\\E[2m' export LESS_TERMCAP_mr = $'\\E[7m' export LESS_TERMCAP_md = $'\\E[1m\\E[36m' export LESS_TERMCAP_ZW = \"\" export LESS_TERMCAP_us = $'\\E[4m\\E[1m\\E[37m' export LESS_TERMCAP_me = $'\\E(B\\E[m' export LESS_TERMCAP_ue = $'\\E[24m\\E(B\\E[m' export LESS_TERMCAP_ZO = \"\" export LESS_TERMCAP_ZN = \"\" export LESS_TERMCAP_se = $'\\E[27m\\E(B\\E[m' export LESS_TERMCAP_ZV = \"\" export LESS_TERMCAP_so = $'\\E[1m\\E[33m\\E[44m' # ALT+hjkl/HJKL \u5feb\u901f\u79fb\u52a8\u5149\u6807\uff0c\u5c06\u4e0b\u9762\u5185\u5bb9\u6dfb\u52a0\u5230 ~/.inputrc \u4e2d\u53ef\u4f5c\u7528\u6240\u6709\u5de5\u5177\uff0c # \u5305\u62ec bash/zsh/python/lua \u7b49\u4f7f\u7528 readline \u7684\u5de5\u5177\uff0c\u5e2e\u52a9\u89c1\uff1ainfo rluserman \"\\eh\" : backward-char \"\\el\" : forward-char \"\\ej\" : next-history \"\\ek\" : previous-history \"\\eH\" : backward-word \"\\eL\" : forward-word \"\\eJ\" : beginning-of-line \"\\eK\" : end-of-line","title":"\u597d\u73a9\u7684\u914d\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/Bash%E9%80%9F%E6%9F%A5%E5%8F%82%E8%80%83/#references","text":"############################################################################## # References ############################################################################## https://github.com/Idnan/bash-guide http://www.linuxstall.com/linux-command-line-tips-that-every-linux-user-should-know/ https://ss64.com/bash/syntax-keyboard.html http://wiki.bash-hackers.org/commands/classictest https://www.ibm.com/developerworks/library/l-bash-test/index.html https://www.cyberciti.biz/faq/bash-loop-over-file/ https://linuxconfig.org/bash-scripting-tutorial https://github.com/LeCoupa/awesome-cheatsheets/blob/master/languages/bash.sh https://devhints.io/bash https://github.com/jlevy/the-art-of-command-line https://yq.aliyun.com/articles/68541 # vim: set ts=4 sw=4 tw=0 et :","title":"References"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/bash%E5%91%BD%E4%BB%A4%E5%AE%9E%E4%BE%8B/","text":"\u65e5\u671f\u683c\u5f0f\u5316 \u00b6 date '+%Y%m%d %T' 20180926 21:59:45 \u7f51\u7edc \u00b6 #\u67e5\u770bhttp\u8bf7\u6c42\u7684header tcpdump -s 1024 -l -A -n host 192 .168.9.56 tcpdump -s 1024 -l -A src 192 .168.9.56 or dst 192 .168.9.56 sudo tcpdump -A -s 1492 dst port 80 #\u672c\u5730\u7f51\u7edc\u4e2dIP\u5730\u5740\u4e3a192.168.0.5\u7684\u4e3b\u673a\u73b0\u5728\u4e0e\u5916\u754c\u901a\u4fe1\u7684\u60c5\u51b5 sudo tcpdump -i eth0 src host 192 .168.0.5 #\u67e5\u770b\u7f51\u5361eth0\u7684http\u8bf7\u6c42\u7684tcp\u5305 tcpdump -i eth0 port http tcpdump -i eth0 port http or port smtp or port imap or port pop3 -l -A | egrep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|userna me:|password:|login:|pass |user ' #\u67e5\u770btcp\uff0cupd\uff0cicmp\u975essh\u7684\u5305 tcpdump -n -v tcp or udp or icmp and not port 22 #\u67e5\u770bhttp\u8bf7\u6c42\u7684request \u5305 sudo tcpdump -i eth0 port 80 -w - #\u8fc7\u6ee4http\u54cd\u5e94\u7684get host\u5934\u4fe1\u606f sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"GET \\/.*|Host\\: .*\" #DNS\u67e5\u8be2\u8bf7\u6c42\u54cd\u5e94\u5305 sudo tcpdump -i en0 'udp port 53' #nmap -sP\u6307\u5b9a\u4f7f\u7528Ping echo \u8fdb\u884c\u626b\u63cf /24\u67e5\u770b\u76ee\u7684\u7f51\u7edc\u6709\u591a\u5c11\u4e3b\u673a\u5904\u4e8e\u8fd0\u884c\u72b6\u6001 nmap -sP 192 .168.0.1 nmap -sP 192 .168.0.0/24 nmap -O www.baidu.com #Netstat\u4e3b\u8981\u7528\u4e8eLinux/Unix\u4e3b\u673a\u5bdf\u770b\u81ea\u8eab\u7684\u7f51\u7edc\u72b6\u51b5\uff0c\u5982\u5f00\u542f\u7684\u7aef\u53e3\u3001\u5728\u4e3a\u54ea\u4e9b\u7528\u6237\u670d\u52a1\u4ee5\u53ca\u670d\u52a1\u7684\u72b6\u6001 netstat -a netstat -nlp #netcat\u626b\u63cf\u673a\u5668\u5f00\u653e\u7684\u7aef\u53e3 nc -z -v -n 172 .31.100.7 21 -25 #netcat \u547d\u4ee4\u4f1a\u8fde\u63a5\u5f00\u653e\u7aef\u53e321\u5e76\u4e14\u6253\u5370\u8fd0\u884c\u5728\u8fd9\u4e2a\u7aef\u53e3\u4e0a\u670d\u52a1\u7684banner\u4fe1\u606f\u3002 nc -v 172 .31.100.7 21 #\u8f93\u51fa\u7f51\u7edc\u7684\u8def\u7531\u8868 route #\u663e\u793a\u7ed3\u679c\u5305\u62ec\u670d\u52a1\u5668\u5df2\u7ecf\u8fd0\u884c\u4e86\u591a\u957f\u65f6\u95f4\uff0c\u6709\u591a\u5c11\u767b\u9646\u7528\u6237\u548c\u5bf9\u670d\u52a1\u5668\u6027\u80fd\u7684\u603b\u4f53\u8bc4\u4f30\uff08load average\uff09\u3002 uptime #\u76d1\u63a7 eth1 \u7684\u7f51\u5361\u7684\u6d41\u91cf iftop -i eth1 #\u4ee5\u4f4d\u5143\u7ec4(bytes \u5373\u5b57\u8282)\u4e3a\u5355\u4f4d\u663e\u793a\u6d41\u91cf(\u9884\u8bbe\u662f\u4f4d\u5143 bits): iftop -B #\u76f4\u63a5\u663e\u793a IP, \u4e0d\u8fdb\u884cDNS \u53cd\u89e3: iftop -n #\u76f4\u63a5\u663e\u793a\u8fde\u63a5\u57e0\u7f16\u53f7, \u4e0d\u663e\u793a\u670d\u52a1\u540d\u79f0: iftop -N #\u663e\u793a\u67d0\u4e2a\u7f51\u6bb5\u8fdb\u51fa\u5c01\u5305\u6d41\u91cf iftop -F 192 .168.1.0/24 or 192 .168.1.0/255.255.255.0 #\u7f51\u7edc\u6d41\u91cf\u5b9e\u65f6\u76d1\u63a7\u5de5\u5177\u4e4bnload,\u67e5\u770b\u7f51\u5361eth0\u7684\u6d41\u91cf nload -n eth0 #\u67e5\u770b\u5404\u4e2a\u7f51\u5361\u7684\u6d41\u91cf nload -h #IPTraf\u662f\u4e00\u4e2a\u7f51\u7edc\u76d1\u63a7\u5de5\u5177,\u529f\u80fd\u6bd4nload\u66f4\u5f3a\u5927,\u53ef\u4ee5\u76d1\u63a7\u6240\u6709\u7684\u6d41\u91cf,IP\u6d41\u91cf,\u6309\u534f\u8bae\u5206\u7684\u6d41\u91cf,\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u8fc7\u6ee4\u5668 iptraf #\u67e5\u770b\u7f51\u7edc\u63a5\u53e3\u5f53\u524d\u914d\u7f6e\u4e0e\u63a5\u53e3\u547d\u540d\uff1a ifconfig #\u6253\u5f00\uff08up\uff09\u6216\u5173\u95ed\uff08down\uff09\u9002\u914d\u5668 ifconfig <\u7f51\u7edc\u540d> <up | down> #\u4e3a\u9002\u914d\u5668\u5206\u914dIP\u5730\u5740\uff1a ifconfig <\u7f51\u7edc\u540d> <ip\u5730\u5740> #\u4e3a\u9002\u914d\u5668\u5206\u914d\u7b2c\u4e8c\u4e2aIP\u5730\u5740\uff1a ifconfig <\u7f51\u7edc\u540d:\u5b9e\u4f8b\u6570> <ip\u5730\u5740> #\u663e\u793a\u67d0\u4e2a\u7f51\u7edc\u9002\u914d\u5668\u7684\u9a71\u52a8\u4fe1\u606f\uff0c\u9002\u7528\u4e8e\u67e5\u8be2\u8f6f\u4ef6\u517c\u5bb9\u6027\u7684\u60c5\u51b5\uff1a ethtool -i eth0 #\u663e\u793a\u7f51\u7edc\u6570\u636e\uff1a ethtool -S #\u8bbe\u7f6e\u9002\u914d\u5668\u8fde\u63a5\u901f\u5ea6\uff08Mbps\uff09 ethtool speed < 10 | 100 | 1000 > #iwconfig \u67e5\u57fa\u672c\u7684Wi-Fi\u7f51\u7edc\u8bbe\u7f6e\uff0c\u5982SSID\u3001channel\u548c\u52a0\u5bc6\u7b49\u7ec6\u8282\u3002\u6b64\u5916\u8fd8\u53ef\u4ee5\u4fee\u6539\u4e00\u4e9b\u9ad8\u7ea7\u8bbe\u7f6e\uff0c\u5305\u62ec\u63a5\u6536\u654f\u611f\u5ea6\uff0cRTS/CTS\uff0c\u788e\u7247\uff0c\u4ee5\u53ca\u91cd\u8bd5\u6570 #\u663e\u793a\u5f53\u524d\u65e0\u7ebf\u8bbe\u7f6e\uff0c\u5305\u62ec\u63a5\u53e3\u540d\u79f0\uff1a iwconfig #\u8bbe\u7f6eESSID\uff08\u6269\u5c55\u670d\u52a1\u8bbe\u7f6e\u8bc6\u522b\u5668\uff09\u6216\u7f51\u7edc\u540d\uff1a iwconfig <\u63a5\u53e3\u540d> essid <\u7f51\u7edc\u540d> #wget wget -S --spider http://osswin.sourceforge.net/ 2 > & 1 | grep Mod #\u67e5\u770bmac\u5730\u5740 cat /sys/class/net/*/address #\u67e5\u770beth0\u7684ip ifconfig eth0 | awk '/inet addr/ {split ($2,A,\":\"); print A[2]}' #curl \u67e5\u770b\u9875\u9762\u5bf9\u5e94\u7684domail name curl -s http://en.m.wikipedia.org/wiki/List_of_Internet_top-level_domains | sed -n '/<tr valign=\"top\">/{s/<[^>]*>//g;p}' #talnet telnet localhost 6666 #\u67e5\u770b\u6240\u6709\u7684\u7f51\u7edc\u63a5\u53e3 awk '{print $1}' /proc/net/dev | grep : | sed \"s/:.*//g\" #\u67e5\u770bDNS server\u7248\u672c\u597d nslookup -q = txt -class = CHAOS version.bind NS.PHX5.NEARLYFREESPEECH.NET \u8fdb\u7a0b \u00b6 ## processes \u8fdb\u7a0b\u7ba1\u7406 ##ps\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u6267\u884c\u7684\u7ebf\u7a0b\u5217\u8868\uff0c\u8fdb\u884c\u77ac\u95f4\u72b6\u6001\uff0c\u4e0d\u662f\u8fde\u7eed\u72b6\u6001\uff0c\u8fde\u7eed\u72b6\u6001\u9700\u8981\u4f7f\u7528top\u540d\u79f0\u67e5\u770b \u66f4\u591a\u5e38\u7528\u53c2\u6570\u8bf7\u4f7f\u7528 man ps\u67e5\u770b ps ##\u663e\u793a\u6240\u6709\u8fdb\u7a0b\u8be6\u7ec6\u4fe1\u606f ps aux ##-u \u663e\u793a\u67d0\u4e2a\u7528\u6237\u7684\u8fdb\u7a0b\u5217\u8868 ps -f -u www-data ## -C \u901a\u8fc7\u540d\u5b57\u6216\u8005\u547d\u4ee4\u641c\u7d22\u8fdb\u7a0b ps -C apache2 ## --sort \u6839\u636e\u8fdb\u7a0bcpu\u4f7f\u7528\u7387\u964d\u5e8f\u6392\u5217\uff0c\u67e5\u770b\u524d5\u4e2a\u8fdb\u7a0b -pcpu\u8868\u793a\u964d\u5e8f pcpu\u5347\u5e8f ps aux --sort = -pcpu | head -5 ##-f \u7528\u6811\u7ed3\u6784\u663e\u793a\u8fdb\u7a0b\u7684\u5c42\u6b21\u5173\u7cfb\uff0c\u7236\u5b50\u8fdb\u7a0b\u60c5\u51b5\u4e0b ps -f --forest -C apache2 ##\u663e\u793a\u4e00\u4e2a\u7236\u8fdb\u7a0b\u7684\u6240\u6709\u5b50\u8fdb\u7a0b ps -o pid,uname,comm -C apache2 ps --ppid 2359 ##\u663e\u793a\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6240\u6709\u7ebf\u7a0b -L \u53c2\u6570 ps -p 3150 -L ##\u663e\u793a\u8fdb\u7a0b\u7684\u6267\u884c\u65f6\u95f4 -o\u53c2\u6570 ps -e -o pid,comm,etime ##watch\u547d\u4ee4\u53ef\u4ee5\u7528\u6765\u5b9e\u65f6\u6355\u6349ps\u663e\u793a\u8fdb\u7a0b watch -n 1 'ps -e -o pid,uname,cmd,pmem,pcpu --sort=-pmem,-pcpu | head -15' ##jobs \u67e5\u770b\u540e\u53f0\u8fd0\u884c\u7684\u8fdb\u7a0b jobs\u547d\u4ee4\u6267\u884c\u7684\u7ed3\u679c\uff0c\uff0b\u8868\u793a\u662f\u4e00\u4e2a\u5f53\u524d\u7684\u4f5c\u4e1a\uff0c\u51cf\u53f7\u8868\u662f\u662f\u4e00\u4e2a\u5f53\u524d\u4f5c\u4e1a\u4e4b\u540e\u7684\u4e00\u4e2a\u4f5c\u4e1a\uff0cjobs -l\u9009\u9879\u53ef\u663e\u793a\u6240\u6709\u4efb\u52a1\u7684PID,jobs\u7684\u72b6\u6001\u53ef\u4ee5\u662frunning, stopped, Terminated,\u4f46\u662f\u5982\u679c\u4efb\u52a1\u88ab\u7ec8\u6b62\u4e86\uff08kill\uff09\uff0cshell \u4ece\u5f53\u524d\u7684shell\u73af\u5883\u5df2\u77e5\u7684\u5217\u8868\u4e2d\u5220\u9664\u4efb\u52a1\u7684\u8fdb\u7a0b\u6807\u8bc6\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0cjobs\u547d\u4ee4\u663e\u793a\u7684\u662f\u5f53\u524dshell\u73af\u5883\u4e2d\u6240\u8d77\u7684\u540e\u53f0\u6b63\u5728\u8fd0\u884c\u6216\u8005\u88ab\u6302\u8d77\u7684\u4efb\u52a1\u4fe1\u606f jobs ##\u67e5\u770b\u540e\u53f0\u8fd0\u8425\u7684\u8fdb\u7a0b\u53f7 jobs -p ##\u67e5\u770b\u73b0\u5728\u88ab\u7ec8\u6b62\u6216\u8005\u9000\u51fa\u7684\u8fdb\u7a0b\u53f7 jobs -n ##kill\u547d\u4ee4 \u7ec8\u6b62\u4e00\u4e2a\u524d\u53f0\u8fdb\u7a0b\u53ef\u4ee5\u4f7f\u7528Ctrl+C\u952e kill \u901a\u8fc7top\u6216\u8005ps\u83b7\u53d6\u8fdb\u7a0bid\u53f7 kill [-s \u4fe1\u53f7 | -p ] [ -a ] \u8fdb\u7a0b\u53f7 ... ##\u53d1\u9001\u6307\u5b9a\u7684\u4fe1\u53f7\u5230\u76f8\u5e94\u8fdb\u7a0b\u3002\u4e0d\u6307\u5b9a\u578b\u53f7\u5c06\u53d1\u9001SIGTERM\uff0815\uff09\u7ec8\u6b62\u6307\u5b9a\u8fdb\u7a0b\u3002 \u5173\u95ed\u8fdb\u7a0b\u53f712\u7684\u8fdb\u7a0b kill 12 ##\u7b49\u540c\u4e8e\u5728\u524d\u53f0\u8fd0\u884cPID\u4e3a123\u7684\u8fdb\u7a0b\u65f6\u6309\u4e0bCtrl+C\u952e kill -2 123 ##\u5982\u679c\u4efb\u65e0\u6cd5\u7ec8\u6b62\u8be5\u7a0b\u5e8f\u53ef\u7528\u201c-KILL\u201d \u53c2\u6570\uff0c\u5176\u53d1\u9001\u7684\u4fe1\u53f7\u4e3aSIGKILL(9) \uff0c\u5c06\u5f3a\u5236\u7ed3\u675f\u8fdb\u7a0b kill -9 123 ##\u5217\u51fa\u6240\u6709\u4fe1\u53f7\u540d\u79f0 ##HUP 1 \u7ec8\u7aef\u65ad\u7ebf ##INT 2 \u4e2d\u65ad\uff08\u540c Ctrl + C\uff09 ##QUIT 3 \u9000\u51fa\uff08\u540c Ctrl + \\\uff09 ##TERM 15 \u7ec8\u6b62 ##KILL 9 \u5f3a\u5236\u7ec8\u6b62 ##CONT 18 \u7ee7\u7eed\uff08\u4e0eSTOP\u76f8\u53cd\uff0c fg/bg\u547d\u4ee4\uff09 ##STOP 19 \u6682\u505c\uff08\u540c Ctrl + Z\uff09 kill -l ##\u5f97\u5230\u6307\u5b9a\u4fe1\u53f7\u7684\u6570\u503c kill -l KILL ##\u6740\u6b7b\u6307\u5b9a\u7528\u6237\u6240\u6709\u8fdb\u7a0b kill -u peidalinux kill -9 $( ps -ef | grep peidalinux ) ##\u5c06\u540e\u53f0\u4e2d\u7684\u547d\u4ee4\u8c03\u81f3\u524d\u53f0\u7ee7\u7eed\u8fd0\u884c \u5c06\u8fdb\u7a0b123\u8c03\u81f3\u524d\u53f0\u6267\u884c fg 123 ##\u5c06\u4e00\u4e2a\u5728\u540e\u53f0\u6682\u505c\u7684\u547d\u4ee4\uff0c\u53d8\u6210\u7ee7\u7eed\u6267\u884c bg 123 ##\u8be5\u547d\u4ee4\u53ef\u4ee5\u5728\u4f60\u9000\u51fa\u5e10\u6237/\u5173\u95ed\u7ec8\u7aef\u4e4b\u540e\u7ee7\u7eed\u8fd0\u884c\u76f8\u5e94\u7684\u8fdb\u7a0b\u3002nohup\u5c31\u662f\u4e0d\u6302\u8d77\u7684\u610f\u601d \u4e0b\u9762\u8f93\u51fa\u88ab\u91cd\u5b9a\u5411\u5230myout.file\u6587\u4ef6\u4e2d nohup command > myout.file 2 > & 1 & ##at\uff1a\u8ba1\u5212\u4efb\u52a1\uff0c\u5728\u7279\u5b9a\u7684\u65f6\u95f4\u6267\u884c\u67d0\u9879\u5de5\u4f5c\uff0c\u5728\u7279\u5b9a\u7684\u65f6\u95f4\u6267\u884c\u4e00\u6b21\u3002 ## \u683c\u5f0f\uff1aat HH:MM YYYY-MM-DD //HH\uff08\u5c0f\u65f6\uff09:MM\uff08\u5206\u949f\uff09 YYYY\uff08\u5e74\uff09-MM\uff08\u6708\u4efd\uff09-DD\uff08\u65e5\uff09 ##HH[am pm]+D(\u5929) days //HH\uff08\u5c0f\u65f6\uff09[am\uff08\u4e0a\u5348\uff09pm\uff08\u4e0b\u5348\uff09]+days\uff08\u5929\uff09 at 12 :00\uff08\u65f6\u95f4\uff09 //at\u547d\u4ee4\u8bbe\u5b9a12:00\u6267\u884c\u4e00\u9879\u64cd\u4f5c #at>useradd aaa //\u5728at\u547d\u4ee4\u91cc\u8bbe\u5b9a\u6dfb\u52a0\u7528\u6237aaa #ctrl+d //\u9000\u51faat\u547d\u4ee4 #tail -f /etc/passwd //\u67e5\u770b/etc/passwd\u6587\u4ef6\u540e\u5341\u884c\u662f\u5426\u589e\u52a0\u4e86\u4e00\u4e2a\u7528\u6237aaa ##\u8ba1\u5212\u4efb\u52a1\u8bbe\u5b9a\u540e\uff0c\u5728\u6ca1\u6709\u6267\u884c\u4e4b\u524d\u6211\u4eec\u53ef\u4ee5\u7528atq\u547d\u4ee4\u6765\u67e5\u770b\u7cfb\u7edf\u6ca1\u6709\u6267\u884c\u5de5\u4f5c\u4efb\u52a1\u3002 atq ##\u542f\u52a8\u8ba1\u5212\u4efb\u52a1\u540e\uff0c\u5982\u679c\u4e0d\u60f3\u542f\u52a8\u8bbe\u5b9a\u597d\u7684\u8ba1\u5212\u4efb\u52a1\u53ef\u4ee5\u4f7f\u7528atrm\u547d\u4ee4\u5220\u9664\u3002 atrm 1 //\u5220\u9664\u8ba1\u5212\u4efb\u52a11 ##pstree\u547d\u4ee4\uff1a\u5217\u51fa\u5f53\u524d\u7684\u8fdb\u7a0b\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u6811\u72b6\u7ed3\u6784 \u683c\u5f0f\uff1apstree [\u9009\u9879] [pid|user] pstree ##nice\u547d\u4ee4\uff1a\u6539\u53d8\u7a0b\u5e8f\u6267\u884c\u7684\u4f18\u5148\u6743\u7b49\u7ea7 \u5e94\u7528\u7a0b\u5e8f\u4f18\u5148\u6743\u503c\u7684\u8303\u56f4\u4ece-20\uff5e19\uff0c\u6570\u5b57\u8d8a\u5c0f\uff0c\u4f18\u5148\u6743\u5c31\u8d8a\u9ad8\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u666e\u901a\u5e94\u7528\u7a0b\u5e8f\u7684\u4f18\u5148\u6743\u503c\uff08CPU\u4f7f\u7528\u6743\u503c\uff09\u90fd\u662f0\uff0c\u5982\u679c\u8ba9\u5e38\u7528\u7a0b\u5e8f\u62e5\u6709\u8f83\u9ad8\u7684\u4f18\u5148\u6743\u7b49\u7ea7\uff0c\u81ea\u7136\u542f\u52a8\u548c\u8fd0\u884c\u901f\u5ea6\u90fd\u4f1a\u5feb\u4e9b\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u666e\u901a\u7528\u6237\u53ea\u80fd\u57280\uff5e19\u4e4b\u95f4\u8c03\u6574\u5e94\u7528\u7a0b\u5e8f\u7684\u4f18\u5148\u6743\u503c\uff0c\u53ea\u6709\u8d85\u7ea7\u7528\u6237\u6709\u6743\u8c03\u6574\u66f4\u9ad8\u7684\u4f18\u5148\u6743\u503c\uff08\u4ece-20\uff5e19\uff09\u3002 nice [ -n <\u4f18\u5148\u7b49\u7ea7> ][ --help ][ --version ][ \u547d\u4ee4 ] nice -n 5 ls ##sleep\u547d\u4ee4\uff1a\u4f7f\u8fdb\u7a0b\u6682\u505c\u6267\u884c\u4e00\u6bb5\u65f6\u95f4 date ; sleep 1m ; date ##renice\u547d\u4ee4 renice\u547d\u4ee4\u5141\u8bb8\u7528\u6237\u4fee\u6539\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u8fdb\u7a0b\u7684\u4f18\u5148\u6743\u3002 \u5229\u7528renice\u547d\u4ee4\u53ef\u4ee5\u5728\u547d\u4ee4\u6267\u884c\u65f6\u8c03\u6574\u5176\u4f18\u5148\u6743\u3002 ##\u5176\u4e2d\uff0c\u53c2\u6570number\u4e0enice\u547d\u4ee4\u7684number\u610f\u4e49\u76f8\u540c\u3002\uff081\uff09 \u7528\u6237\u53ea\u80fd\u5bf9\u81ea\u5df1\u6240\u6709\u7684\u8fdb\u7a0b\u4f7f\u7528renice\u547d\u4ee4\u3002\uff082\uff09 root\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u4f55\u8fdb\u7a0b\u4e0a\u4f7f\u7528renice\u547d\u4ee4\u3002\uff083\uff09 \u53ea\u6709root\u7528\u6237\u624d\u80fd\u63d0\u9ad8\u8fdb\u7a0b\u7684\u4f18\u5148\u6743 renice -5 -p 5200 #PID\u4e3a5200\u7684\u8fdb\u7a0bnice\u8bbe\u4e3a-5 ##pmap\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u4e00\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u72b6\u6001\u3002\u5176\u62a5\u544a\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u548c\u5185\u5b58\u72b6\u6001\u4fe1\u606f #pmap PID pmap 20367 ##top \u52a8\u6001\u67e5\u770b\u8fdb\u7a0b\u7684\u53d8\u5316\u3002 top ##crontab \u4efb\u52a1\u8c03\u5ea6 ##\u57fa\u672c\u683c\u5f0f : ##*\u3000\u3000*\u3000\u3000*\u3000\u3000*\u3000\u3000*\u3000\u3000command ##\u5206\u3000\u65f6\u3000\u65e5\u3000\u6708\u3000\u5468\u3000\u547d\u4ee4 ##\u7b2c1\u5217\u8868\u793a\u5206\u949f1\uff5e59 \u6bcf\u5206\u949f\u7528*\u6216\u8005 */1\u8868\u793a ##\u7b2c2\u5217\u8868\u793a\u5c0f\u65f61\uff5e23\uff080\u8868\u793a0\u70b9\uff09 ##\u7b2c3\u5217\u8868\u793a\u65e5\u671f1\uff5e31 ##\u7b2c4\u5217\u8868\u793a\u6708\u4efd1\uff5e12 ##\u7b2c5\u5217\u6807\u8bc6\u53f7\u661f\u671f0\uff5e6\uff080\u8868\u793a\u661f\u671f\u5929\uff09 ##\u7b2c6\u5217\u8981\u8fd0\u884c\u7684\u547d\u4ee4 crontab -e ##\u6267\u884c\u6587\u5b57\u7f16\u8f91\u5668\u6765\u8bbe\u5b9a\u65f6\u7a0b\u8868\uff0c\u5185\u5b9a\u7684\u6587\u5b57\u7f16\u8f91\u5668\u662f VI\uff0c\u5982\u679c\u4f60\u60f3\u7528\u522b\u7684\u6587\u5b57\u7f16\u8f91\u5668\uff0c\u5219\u8bf7\u5148\u8bbe\u5b9a VISUAL \u73af\u5883\u53d8\u6570\u6765\u6307\u5b9a\u4f7f\u7528\u90a3\u4e2a\u6587\u5b57\u7f16\u8f91\u5668(\u6bd4\u5982\u8bf4 setenv VISUAL joe) crontab -r ##\u5220\u9664\u76ee\u524d\u7684\u65f6\u7a0b\u8868 crontab -l ##\u5217\u51fa\u76ee\u524d\u7684\u65f6\u7a0b\u8868 crontab file [ -u user ] ##-\u7528\u6307\u5b9a\u7684\u6587\u4ef6\u66ff\u4ee3\u76ee\u524d\u7684crontab\u3002 #crontab\u6587\u4ef6\u7684\u4e00\u4e9b\u793a\u4f8b 30 21 * * * /usr/local/etc/rc.d/lighttpd restart ##\u8868\u793a\u6bcf\u665a\u768421:30\u91cd\u542fapache\u3002 45 4 1 ,10,22 * * /usr/local/etc/rc.d/lighttpd restart ##\u8868\u793a\u6bcf\u67081\u300110\u300122\u65e5\u76844 : 45\u91cd\u542fapache\u3002 10 1 * * 6 ,0 /usr/local/etc/rc.d/lighttpd restart ##\u8868\u793a\u6bcf\u5468\u516d\u3001\u5468\u65e5\u76841 : 10\u91cd\u542fapache\u3002 0 ,30 18 -23 * * * /usr/local/etc/rc.d/lighttpd restart ##\u8868\u793a\u5728\u6bcf\u592918 : 00\u81f323 : 00\u4e4b\u95f4\u6bcf\u969430\u5206\u949f\u91cd\u542fapache\u3002 * 23 -7/1 * * * /usr/local/etc/rc.d/lighttpd restart ##\u665a\u4e0a11\u70b9\u5230\u65e9\u4e0a7\u70b9\u4e4b\u95f4\uff0c\u6bcf\u9694\u4e00\u5c0f\u65f6\u91cd\u542fapache \u3000\u3000 \u6027\u80fd \u00b6 #\u67e5\u770b\u5f53\u524d\u7cfb\u7edfload uptime #\u67e5\u770b\u7cfb\u7edf\u72b6\u6001\u548c\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u72b6\u51b5 top #\u53ef\u89c6\u5316\u663e\u793aCPU\u7684\u4f7f\u7528\u72b6\u51b5 htop #\u67e5\u770b\u6bcf\u4e2aCPU\u7684\u8d1f\u8f7d\u4fe1\u606f mpstat -P ALL 1 #\u6bcf\u96941\u79d2\u67e5\u770b\u78c1\u76d8IO\u7684\u7edf\u8ba1\u4fe1\u606f iostat -xkdz 1 #\u6bcf\u9694\u4e00\u79d2\u67e5\u770b\u865a\u62df\u5185\u5b58\u7684\u4f7f\u7528\u4fe1\u606f vmstat 1 #\u67e5\u770b\u5185\u5b58\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f free #\u67e5\u770b\u7f51\u7edc\u4f7f\u7528\u4fe1\u606f nicstat -z 1 #\u7c7b\u4f3cvmstat\u7684\u663e\u793a\u4f18\u5316\u7684\u5de5\u5177 dstat 1 #\u67e5\u770b\u7cfb\u7edf\u6d3b\u52a8\u72b6\u6001\uff0c\u6bd4\u5982\u7cfb\u7edf\u5206\u9875\u7edf\u8ba1\uff0c\u5757\u8bbe\u5907IO\u7edf\u8ba1\u7b49 sar #\u7f51\u7edc\u8fde\u63a5\u72b6\u6001\u67e5\u770b netstat -s #\u8fdb\u7a0b\u8d44\u6e90\u4f7f\u7528\u4fe1\u606f\u67e5\u770b pidstat 1 pidstat -d 1 #\u67e5\u770b\u67d0\u4e2a\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\u4fe1\u606f -p\u540e\u9762\u662f\u8fdb\u7a0bid\uff0c-tttT \u8fdb\u7a0b\u7cfb\u7edf\u540e\u7684\u7cfb\u7edf\u8c03\u7528\u65f6\u95f4 strace -tttT -p 12670 #\u7edf\u8ba1IO\u8bbe\u5907\u8f93\u5165\u8f93\u51fa\u7684\u7cfb\u7edf\u8c03\u7528\u4fe1\u606f strace -c dd if = /dev/zero of = /dev/null bs = 512 count = 1024k #tcpdump \u67e5\u770b\u7f51\u7edc\u6570\u636e\u5305 tcpdump -nr /tmp/out.tcpdump #\u5757\u8bbe\u5907\u7684\u8bfb\u5199\u4e8b\u4ef6\u4fe1\u606f\u7edf\u8ba1 btrace /dev/sdb #iotop\u67e5\u770b\u67d0\u4e2a\u8fdb\u7a0b\u7684IO\u64cd\u4f5c\u7edf\u8ba1\u4fe1\u606f iotop -bod5 #slabtop \u67e5\u770b\u5185\u6838 slab\u5185\u5b58\u5206\u914d\u5668\u7684\u4f7f\u7528\u4fe1\u606f slabtop -sc #\u7cfb\u7edf\u53c2\u6570\u8bbe\u7f6e sysctl -a #\u7cfb\u7edf\u6027\u80fd\u6307\u6807\u7edf\u8ba1\u4fe1\u606f perf stat gzip file1 #\u7cfb\u7edfcpu\u6d3b\u52a8\u72b6\u6001\u67e5\u770b perf record -a -g -F 997 sleep 10 CPU \u00b6 #\u9650\u5236\u67d0\u4e2a\u7ebf\u7a0b\u7684cpu\u4f7f\u7528\u7387 sudo cpulimit -p pid -l 50 ps -eo %cpu,args | grep -m1 PROCESS | awk '{print $1}' #\u5c06\u5f53\u524d\u8fdb\u7a0b\u6309\u7167memory\u548ccpu\u6392\u5e8f ps aux --sort = %mem,%cpu #\u6309\u7167cpu\u4f7f\u7528\u7387\u6392\u5e8f ps -e -o pcpu,cpu,nice,state,cputime,args --sort pcpu | sed \"/^ 0.0 /d\" #\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684\u7269\u7406cpu\u4e2a\u6570 grep \"processor\" /proc/cpuinfo | wc -l grep -c -e '^cpu[0-9]\\+' /proc/stat #\u67e5\u770b\u5f53\u524dcpu\u578b\u53f7 grep \"model name\" /proc/cpuinfo #\u67e5\u770b\u5f53\u524dcpu\u4fe1\u606f cat /proc/cpuinfo #\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684\u4f4d\u6570 grep -q '\\<lm\\>' /proc/cpuinfo && echo 64 bits || echo 32 bits getconf LONG_BIT | grep '64' java -version #\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684cpu\u9891\u7387 awk -F \": \" '/cpu MHz\\ */ { print \"Processor (or core) running speed is: \" $2 }' /proc/cpuinfo ; dmidecode | awk -F \": \" '/Current Speed/ { print \"Processor real speed is: \" $2 }' #\u67e5\u770b\u6bcf\u4e2acpu\u6bcf\u4e2a\u8fdb\u7a0b\u7684cpu\u4f7f\u7528\u7387 ps ax -L -o pid,tid,psr,pcpu,args | sort -nr -k4 | head -15 | cut -c 1 -90 #\u67e5\u770b\u5f53\u524d\u4e2d\u65ad cat /proc/interrupts #\u67e5\u770b\u591a\u4e2a\u5904\u7406\u5668\u7684\u4f7f\u7528\u7387\u76f8\u5173\u4fe1\u606f mpstat \u2013P ALL 1 #\u6bcf\u4e2a\u7269\u7406CPU\u4e2dCore\u7684\u4e2a\u6570\uff1a cat /proc/cpuinfo | grep \"cpu cores\" | uniq | awk -F: '{print $2}' #\u662f\u5426\u4e3a\u8d85\u7ebf\u7a0b\uff1f #\u5982\u679c\u6709\u4e24\u4e2a\u903b\u8f91CPU\u5177\u6709\u76f8\u540c\u7684\u201dcore id\u201d\uff0c\u90a3\u4e48\u8d85\u7ebf\u7a0b\u662f\u6253\u5f00\u7684\u3002 #\u6bcf\u4e2a\u7269\u7406CPU\u4e2d\u903b\u8f91CPU(\u53ef\u80fd\u662fcore, threads\u6216both)\u7684\u4e2a\u6570\uff1a cat /proc/cpuinfo | grep \"siblings\" #/proc/stat \u6587\u4ef6\u4e2d\u6709\u4e00\u884c\u8bb0\u5f55\u7684\u673a\u5668\u4ece\u542f\u52a8\u4f9d\u8d56\uff0c\u5404\u4e2a\u4e2d\u65ad\u5e8f\u53f7\u53d1\u751f\u4e2d\u65ad\u7684\u6b21\u6570\u3002 #\u8fd9\u4e00\u884c\u4ee5intr\u5f00\u5934\uff0c\u63a5\u4e0b\u6765\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u662f\u603b\u7684\u4e2d\u65ad\u6570\u76ee\uff0c\u4e4b\u540e\u5c31\u662f\u5206\u522b\u7684\u4e2d\u65ad\u6570\u76ee\uff0c\u4ece0\u5f00\u59cb\u3002 cat /proc/stat | grep intr IO \u00b6 IO.sh ##iostat\u662f\u67e5\u770b\u78c1\u76d8\u6d3b\u52a8\u7edf\u8ba1\u60c5\u51b5 ##\u663e\u793a\u6240\u6709\u8bbe\u5907\u8d1f\u8f7d\u60c5\u51b5 r/s: \u6bcf\u79d2\u5b8c\u6210\u7684\u8bfb I/O \u8bbe\u5907\u6b21\u6570\u3002\u5373 rio/s\uff1bw/s: \u6bcf\u79d2\u5b8c\u6210\u7684\u5199 I/O \u8bbe\u5907\u6b21\u6570\u3002\u5373 wio/s\u7b49 iostat ##\u6bcf\u96942\u79d2\u5237\u65b0\u78c1\u76d8IO\u4fe1\u606f\uff0c\u5e76\u4e14\u6bcf\u6b21\u663e\u793a3\u6b21 iostat 2 3 #\u663e\u793a\u67d0\u4e2a\u78c1\u76d8\u7684IO\u4fe1\u606f iostat -d sda1 ##\u663e\u793atty\u548ccpu\u4fe1\u606f iostat -t ##\u4ee5M\u4e3a\u5355\u4f4d\u663e\u793a\u78c1\u76d8IO\u4fe1\u606f iostat -m ##\u67e5\u770bTPS\u548c\u541e\u5410\u91cf\u4fe1\u606f kB_read/s\uff1a\u6bcf\u79d2\u4ece\u8bbe\u5907\uff08drive expressed\uff09\u8bfb\u53d6\u7684\u6570\u636e\u91cf\uff1bkB_wrtn/s\uff1a\u6bcf\u79d2\u5411\u8bbe\u5907\uff08drive expressed\uff09\u5199\u5165\u7684\u6570\u636e\u91cf\uff1bkB_read\uff1a\u8bfb\u53d6\u7684\u603b\u6570\u636e\u91cf\uff1bkB_wrtn\uff1a\u5199\u5165\u7684\u603b\u6570\u91cf\u6570\u636e\u91cf\uff1b iostat -d -k 1 1 #\u67e5\u770b\u8bbe\u5907\u4f7f\u7528\u7387\uff08%util\uff09\u3001\u54cd\u5e94\u65f6\u95f4\uff08await\uff09 iostat -d -x -k 1 1 #\u67e5\u770bCPU\u72b6\u6001 iostat -c 1 3 #\u7edf\u8ba1\u8fdb\u7a0b(pid)\u7684stat,\u8fdb\u7a0b\u7684stat\u81ea\u7136\u5305\u62ec\u8fdb\u7a0b\u7684IO\u72b6\u51b5 pidstat #\u53ea\u663e\u793aIO pidstat -d 1 #-d IO \u4fe1\u606f,-r \u7f3a\u9875\u53ca\u5185\u5b58\u4fe1\u606f-u CPU\u4f7f\u7528\u7387-t \u4ee5\u7ebf\u7a0b\u4e3a\u7edf\u8ba1\u5355\u4f4d1 1\u79d2\u7edf\u8ba1\u4e00\u6b21 pidstat -u -r -d -t 1 #\u6587\u4ef6\u7ea7IO\u5206\u6790,\u67e5\u770b\u5f53\u524d\u6587\u4ef6\u7531\u54ea\u4e9b\u8fdb\u7a0b\u6253\u5f00 lsof ls /proc/pid/fd #\u5229\u7528 sar \u62a5\u544a\u78c1\u76d8 I/O \u4fe1\u606fDEV \u6b63\u5728\u76d1\u89c6\u7684\u5757\u8bbe\u5907 tps \u6bcf\u79d2\u949f\u7269\u7406\u8bbe\u5907\u7684 I/O \u4f20\u8f93\u603b\u91cf rd_sec/s \u6bcf\u79d2\u4ece\u8bbe\u5907\u8bfb\u53d6\u7684\u6247\u533a\u6570\u91cf wr_sec/s \u6bcf\u79d2\u5411\u8bbe\u5907\u5199\u5165\u7684\u6247\u533a\u6570\u91cf avgrq-sz I/O \u8bf7\u6c42\u7684\u5e73\u5747\u6247\u533a\u6570 #avgqu-sz I/O \u8bf7\u6c42\u7684\u5e73\u5747\u961f\u5217\u957f\u5ea6 await I/O \u8bf7\u6c42\u7684\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 svctm I/O \u8bf7\u6c42\u7684\u5e73\u5747\u670d\u52a1\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 %util I/O \u8bf7\u6c42\u6240\u5360\u7528\u7684\u65f6\u95f4\u7684\u767e\u5206\u6bd4\uff0c\u5373\u8bbe\u5907\u5229\u7528\u7387 sar -pd 10 3 #iotop top\u7684io\u7248 iotop #\u67e5\u770b\u9875\u9762\u7f13\u5b58\u4fe1\u606f \u5176\u4e2d\u7684Cached \u6307\u7528\u4e8epagecache\u7684\u5185\u5b58\u5927\u5c0f\uff08diskcache-SwapCache\uff09\u3002\u968f\u7740\u5199\u5165\u7f13\u5b58\u9875\uff0cDirty \u7684\u503c\u4f1a\u589e\u52a0 \u4e00\u65e6\u5f00\u59cb\u628a\u7f13\u5b58\u9875\u5199\u5165\u786c\u76d8,Writeback\u7684\u503c\u4f1a\u589e\u52a0\u76f4\u5230\u5199\u5165\u7ed3\u675f\u3002 cat /proc/meminfo #\u67e5\u770b\u6709\u591a\u5c11\u4e2apdflush\u8fdb\u7a0b Linux \u7528pdflush\u8fdb\u7a0b\u628a\u6570\u636e\u4ece\u7f13\u5b58\u9875\u5199\u5165\u786c\u76d8 #pdflush\u7684\u884c\u4e3a\u53d7/proc/sys/vm\u4e2d\u7684\u53c2\u6570\u7684\u63a7\u5236/proc/sys/vm/dirty_writeback_centisecs (default 500): 1/100\u79d2, \u591a\u957f\u65f6\u95f4\u5524\u9192pdflush\u5c06\u7f13\u5b58\u9875\u6570\u636e\u5199\u5165\u786c\u76d8\u3002\u9ed8\u8ba45\u79d2\u5524\u91922\u4e2a\uff08\u66f4\u591a\u4e2a\uff09\u7ebf\u7a0b\u3002\u5982\u679cwrteback\u7684\u65f6\u95f4\u957f\u4e8edirty_writeback_centisecs\u7684\u65f6\u95f4\uff0c\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898 cat /proc/sys/vm/nr_pdflush_threads #\u67e5\u770bI/O \u8c03\u5ea6\u5668 #\u8c03\u5ea6\u7b97\u6cd5 #noop anticipatory deadline [cfq] #deadline : deadline \u7b97\u6cd5\u4fdd\u8bc1\u5bf9\u65e2\u5b9a\u7684IO\u8bf7\u6c42\u4ee5\u6700\u5c0f\u7684\u5ef6\u8fdf\u65f6\u95f4\u3002 #anticipatory\uff1a \u6709\u4e2aIO\u53d1\u751f\u540e\uff0c\u5982\u679c\u53c8\u6709\u8fdb\u7a0b\u8bf7\u6c42IO\uff0c\u5219\u4ea7\u751f\u4e00\u4e2a\u9ed8\u8ba46ms\u731c\u6d4b\u65f6\u95f4\uff0c\u731c\u6d4b\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u8bf7\u6c42IO\u662f\u5e72\u4ec0\u4e48\u3002\u8fd9\u5bf9\u4e8e\u968f\u673a\u8bfb\u53d6\u4f1a\u9020\u6210\u8f83\u5927\u7684\u5ef6\u65f6\u3002\u5bf9\u6570\u636e\u5e93\u5e94\u7528\u5f88\u7cdf\u7cd5\uff0c\u800c\u5bf9\u4e8eWeb Server\u7b49\u5219\u4f1a\u8868\u73b0\u4e0d\u9519\u3002 #cfq: \u5bf9\u6bcf\u4e2a\u8fdb\u7a0b\u7ef4\u62a4\u4e00\u4e2aIO\u961f\u5217\uff0c\u5404\u4e2a\u8fdb\u7a0b\u53d1\u6765\u7684IO\u8bf7\u6c42\u4f1a\u88abcfq\u4ee5\u8f6e\u5faa\u65b9\u5f0f\u5904\u7406\uff0c\u5bf9\u6bcf\u4e00\u4e2aIO\u8bf7\u6c42\u90fd\u662f\u516c\u5e73\u3002\u9002\u5408\u79bb\u6563\u8bfb\u7684\u5e94\u7528\u3002 #noop: \u5bf9\u6240\u6709IO\u8bf7\u6c42\u90fd\u7528FIFO\u961f\u5217\u5f62\u5f0f\u5904\u7406\u3002\u9ed8\u8ba4IO\u4e0d\u4f1a\u5b58\u5728\u6027\u80fd\u95ee\u9898\u3002 cat /sys/block/ [ disk ] /queue/scheduler #\u6539\u53d8IO\u8c03\u5ea6\u5668 $ echo deadline > /sys/block/sdX/queue/scheduler #\u63d0\u9ad8\u8c03\u5ea6\u5668\u8bf7\u6c42\u961f\u5217\u7684 $ echo 4096 > /sys/block/sdX/queue/nr_requests AWK \u00b6 #\u5220\u9664temp\u6587\u4ef6\u7684\u91cd\u590d\u884c awk '!($0 in array) { array[$0]; print }' temp #\u67e5\u770b\u6700\u957f\u4f7f\u7528\u768410\u4e2aunix\u547d\u4ee4 awk '{print $1}' ~/.bash_history | sort | uniq -c | sort -rn | head -n 10 #\u67e5\u770b\u673a\u5668\u7684ip\u5217\u8868 ifconfig -a | awk '/Bcast/{print $2}' | cut -c 5 -19 #\u67e5\u770b\u673a\u5668\u7684\u6bcf\u4e2a\u8fdc\u7a0b\u94fe\u63a5\u673a\u5668\u7684\u8fde\u63a5\u6570 netstat -antu | awk '$5 ~ /[0-9]:/{split($5, a, \":\"); ips[a[1]]++} END {for (ip in ips) print ips[ip], ip | \"sort -k1 -nr\"}' #\u67e5\u770b\u67d0\u4e2a\u8fdb\u7a0b\u6253\u5f00\u7684socket\u6570\u91cf ps aux | grep [ process ] | awk '{print $2}' | xargs -I % ls /proc/%/fd | wc -l #\u67e5\u770b\u65e0\u7ebf\u7f51\u7edc\u7684ip sudo ifconfig wlan0 | grep inet | awk 'NR==1 {print $2}' | cut -c 6 - #\u6279\u91cf\u91cd\u547d\u540d\u6587\u4ef6 find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf \"mv %s name%01d.jpg\\n\", $0, a++ }' | bash #\u67e5\u770b\u67d0\u4e2a\u7528\u6237\u6253\u5f00\u7684\u6587\u4ef6\u53e5\u67c4\u5217\u8868 for x in ` ps -u 500 u | grep java | awk '{ print $2 }' ` ; do ls /proc/ $x /fd | wc -l ; done #\u8ba1\u7b97\u6587\u4ef6temp\u7684\u7b2c\u4e00\u5217\u7684\u503c\u7684\u548c awk '{s+=$1}END{print s}' temp #\u67e5\u770b\u6700\u5e38\u7528\u7684\u547d\u4ee4\u548c\u4f7f\u7528\u6b21\u6570 history | awk '{if ($2 == \"sudo\") a[$3]++; else a[$2]++}END{for(i in a){print a[i] \" \" i}}' | sort -rn | head #\u67e5\u627e\u67d0\u4e2a\u65f6\u95f4\u6233\u7684\u6587\u4ef6\u5217\u8868 cp -p ` ls -l | awk '/Apr 14/ {print $NF}' ` /usr/users/backup_dir #\u683c\u5f0f\u5316\u8f93\u51fa\u5f53\u524d\u7684\u8fdb\u7a0b\u4fe1\u606f ps -ef | awk -v OFS = \"\\n\" '{ for (i=8;i<=NF;i++) line = (line ? line FS : \"\") $i; print NR \":\", $1, $2, $7, line, \"\"; line = \"\" }' #\u67e5\u770b\u8f93\u5165\u6570\u636e\u7684\u7279\u5b9a\u4f4d\u7f6e\u7684\u5355\u4e2a\u5b57\u7b26 echo \"abcdefg\" | awk 'BEGIN {FS=\"''\"} {print $2}' #\u6253\u5370\u884c\u53f7 ls | awk '{print NR \"\\t\" $0}' #\u6253\u5370\u5f53\u524d\u7684ssh \u5ba2\u6237\u7aef netstat -tn | awk '($4 ~ /:22\\s*/) && ($6 ~ /^EST/) {print substr($5, 0, index($5,\":\"))}' #\u6253\u5370\u6587\u4ef6\u7b2c\u4e00\u5217\u4e0d\u540c\u503c\u7684\u884c awk '!array[$1]++' file.txt #\u6253\u5370\u7b2c\u4e8c\u5217\u552f\u4e00\u503c awk '{ a[$2]++ } END { for (b in a) { print b } }' file #\u67e5\u770b\u7cfb\u7edf\u6240\u6709\u5206\u533a awk '{if ($NF ~ \"^[a-zA-Z].*[0-9]$\" && $NF !~ \"c[0-9]+d[0-9]+$\" && $NF !~ \"^loop.*\") print \"/dev/\"$NF}' /proc/partitions #\u67e5\u770b2\u5230100\u6240\u6709\u8d28\u6570 for num in ` seq 2 100 ` ; do if [ ` factor $num | awk '{print $2}' ` == $num ] ; then echo -n \" $num \" ; fi done ; echo #\u67e5\u770b\u7b2c3\u5230\u7b2c6\u884c awk 'NR >= 3 && NR <= 6' /path/to/file #\u9006\u5e8f\u67e5\u770b\u6587\u4ef6 awk '{a[i++]=$0} END {for (j=i-1; j>=0;) print a[j--] }' #\u6253\u537099\u4e58\u6cd5\u8868 seq 9 | sed 'H;g' | awk -v RS = '' '{for(i=1;i<=NF;i++)printf(\"%dx%d=%d%s\", i, NR, i*NR, i==NR?\"\\n\":\"\\t\")}' \u65e5\u5fd7Log \u00b6 #\u7edf\u8ba1apache cookie log\u4e2d\u8bbf\u95ee\u9891\u7387\u6700\u9ad8\u768420\u4e2aip\u548c\u8bbf\u95ee\u6b21\u6570 cat cookielog | awk '{ a[$1] += 1; } END { for(i in a) printf(\"%d, %s\\n\", a[i], i ); }' | sort -n | tail -20 #\u7edf\u8ba1apache cookie log\u4e2d\u8fd4\u56de404\u7684url\u5217\u8868 awk '$11 == 404 {print $8}' access_log | uniq -c | sort -rn | head #\u7edf\u8ba1\u4e00\u4e2aip\u8bbf\u95ee\u8d85\u8fc720\u6b21\u7684ip\u548c\u8bbf\u95ee\u6b21\u6570\u5217\u8868\uff0c\u628a$1\u6539\u4e3aurl\u5bf9\u5e94\u7684$9,\u5219\u53ef\u4ee5\u7edf\u8ba1\u6bcf\u4e2aurl\u7684\u8bbf\u95ee\u6b21\u6570 cat access_log | awk '{print $1}' | sort | uniq -c | sort -n | awk '{ if ($1 > 20)print $1,$2}' #\u7edf\u8ba1\u6bcf\u4e2aurl\u7684\u5e73\u5747\u8bbf\u95ee\u65f6\u95f4 cat cookielog | awk '{ a[$6] += 1; b[$6] += $11; } END { for(i in a) printf(\"%d, %d, %s\\n\", a[i],a[i]/b[i] i ); }' | sort -n | tail -20 #\u6253\u5370\u8bbf\u95eeapache\u7684\u65b0ip\u5217\u8868 tail -f access.log | awk -W interactive '!x[$1]++ {print $1}' #\u901a\u8fc7\u65e5\u5fd7\u67e5\u770b\u5f53\u5929\u6307\u5b9aip\u8bbf\u95ee\u6b21\u6570\u8fc7\u7684url\u548c\u8bbf\u95ee\u6b21\u6570: cat access.log | grep \"10.0.21.17\" | awk '{print $7}' | sort | uniq -c | sort \u2013nr #\u901a\u8fc7\u65e5\u5fd7\u67e5\u770b\u5f53\u5929\u8bbf\u95ee\u6b21\u6570\u6700\u591a\u7684\u65f6\u95f4\u6bb5 awk '{print $4}' access.log | grep \"26/Mar/2012\" | cut -c 20 -50 | sort | uniq -c | sort -nr | head #\u67e5\u770b\u67d0\u4e00\u5929\u7684\u8bbf\u95ee\u91cf cat access_log | grep '12/Nov/2012' | grep \"******.htm\" | wc | awk '{print $1}' | uniq #\u67e5\u770b\u8bbf\u95ee\u65f6\u95f4\u8d85\u8fc730ms\u7684url\u5217\u8868 cat access_log | awk \u2018 ( $NF > 30 ){ print $7 } \u2019 | sort -n | uniq -c | sort -nr | head -20 #\u5217\u51fa\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc760m\u7684url\u5217\u8868\u5e76\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570 cat access_log | awk \u2018 ( $NF > 60 && $7 ~/ \\. php/ ){ print $7 } \u2019 | sort -n | uniq -c | sort -nr | head -100 #\u6392\u9664\u641c\u7d22\u5f15\u64ce\u540e\u7684url\u8bbf\u95ee\u6b21\u6570 sed \"/Baiduspider/d;/Googlebot/d;/Sogou web spider/d;\" xxx.log | awk -F ' ' '{print $7}' | sort | uniq -c | sort -k1,2 -nr #\u7edf\u8ba1/index.html\u9875\u9762\u7684\u8bbf\u95eeuv grep \"/index.html\" access.log | cut \u2013d \u201c \u201d \u2013f 4 | sort | uniq | wc \u2013l","title":"Bash\u547d\u4ee4\u5b9e\u4f8b"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/bash%E5%91%BD%E4%BB%A4%E5%AE%9E%E4%BE%8B/#_1","text":"date '+%Y%m%d %T' 20180926 21:59:45","title":"\u65e5\u671f\u683c\u5f0f\u5316"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/bash%E5%91%BD%E4%BB%A4%E5%AE%9E%E4%BE%8B/#_2","text":"#\u67e5\u770bhttp\u8bf7\u6c42\u7684header tcpdump -s 1024 -l -A -n host 192 .168.9.56 tcpdump -s 1024 -l -A src 192 .168.9.56 or dst 192 .168.9.56 sudo tcpdump -A -s 1492 dst port 80 #\u672c\u5730\u7f51\u7edc\u4e2dIP\u5730\u5740\u4e3a192.168.0.5\u7684\u4e3b\u673a\u73b0\u5728\u4e0e\u5916\u754c\u901a\u4fe1\u7684\u60c5\u51b5 sudo tcpdump -i eth0 src host 192 .168.0.5 #\u67e5\u770b\u7f51\u5361eth0\u7684http\u8bf7\u6c42\u7684tcp\u5305 tcpdump -i eth0 port http tcpdump -i eth0 port http or port smtp or port imap or port pop3 -l -A | egrep -i 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd=|password=|pass:|user:|userna me:|password:|login:|pass |user ' #\u67e5\u770btcp\uff0cupd\uff0cicmp\u975essh\u7684\u5305 tcpdump -n -v tcp or udp or icmp and not port 22 #\u67e5\u770bhttp\u8bf7\u6c42\u7684request \u5305 sudo tcpdump -i eth0 port 80 -w - #\u8fc7\u6ee4http\u54cd\u5e94\u7684get host\u5934\u4fe1\u606f sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"GET \\/.*|Host\\: .*\" #DNS\u67e5\u8be2\u8bf7\u6c42\u54cd\u5e94\u5305 sudo tcpdump -i en0 'udp port 53' #nmap -sP\u6307\u5b9a\u4f7f\u7528Ping echo \u8fdb\u884c\u626b\u63cf /24\u67e5\u770b\u76ee\u7684\u7f51\u7edc\u6709\u591a\u5c11\u4e3b\u673a\u5904\u4e8e\u8fd0\u884c\u72b6\u6001 nmap -sP 192 .168.0.1 nmap -sP 192 .168.0.0/24 nmap -O www.baidu.com #Netstat\u4e3b\u8981\u7528\u4e8eLinux/Unix\u4e3b\u673a\u5bdf\u770b\u81ea\u8eab\u7684\u7f51\u7edc\u72b6\u51b5\uff0c\u5982\u5f00\u542f\u7684\u7aef\u53e3\u3001\u5728\u4e3a\u54ea\u4e9b\u7528\u6237\u670d\u52a1\u4ee5\u53ca\u670d\u52a1\u7684\u72b6\u6001 netstat -a netstat -nlp #netcat\u626b\u63cf\u673a\u5668\u5f00\u653e\u7684\u7aef\u53e3 nc -z -v -n 172 .31.100.7 21 -25 #netcat \u547d\u4ee4\u4f1a\u8fde\u63a5\u5f00\u653e\u7aef\u53e321\u5e76\u4e14\u6253\u5370\u8fd0\u884c\u5728\u8fd9\u4e2a\u7aef\u53e3\u4e0a\u670d\u52a1\u7684banner\u4fe1\u606f\u3002 nc -v 172 .31.100.7 21 #\u8f93\u51fa\u7f51\u7edc\u7684\u8def\u7531\u8868 route #\u663e\u793a\u7ed3\u679c\u5305\u62ec\u670d\u52a1\u5668\u5df2\u7ecf\u8fd0\u884c\u4e86\u591a\u957f\u65f6\u95f4\uff0c\u6709\u591a\u5c11\u767b\u9646\u7528\u6237\u548c\u5bf9\u670d\u52a1\u5668\u6027\u80fd\u7684\u603b\u4f53\u8bc4\u4f30\uff08load average\uff09\u3002 uptime #\u76d1\u63a7 eth1 \u7684\u7f51\u5361\u7684\u6d41\u91cf iftop -i eth1 #\u4ee5\u4f4d\u5143\u7ec4(bytes \u5373\u5b57\u8282)\u4e3a\u5355\u4f4d\u663e\u793a\u6d41\u91cf(\u9884\u8bbe\u662f\u4f4d\u5143 bits): iftop -B #\u76f4\u63a5\u663e\u793a IP, \u4e0d\u8fdb\u884cDNS \u53cd\u89e3: iftop -n #\u76f4\u63a5\u663e\u793a\u8fde\u63a5\u57e0\u7f16\u53f7, \u4e0d\u663e\u793a\u670d\u52a1\u540d\u79f0: iftop -N #\u663e\u793a\u67d0\u4e2a\u7f51\u6bb5\u8fdb\u51fa\u5c01\u5305\u6d41\u91cf iftop -F 192 .168.1.0/24 or 192 .168.1.0/255.255.255.0 #\u7f51\u7edc\u6d41\u91cf\u5b9e\u65f6\u76d1\u63a7\u5de5\u5177\u4e4bnload,\u67e5\u770b\u7f51\u5361eth0\u7684\u6d41\u91cf nload -n eth0 #\u67e5\u770b\u5404\u4e2a\u7f51\u5361\u7684\u6d41\u91cf nload -h #IPTraf\u662f\u4e00\u4e2a\u7f51\u7edc\u76d1\u63a7\u5de5\u5177,\u529f\u80fd\u6bd4nload\u66f4\u5f3a\u5927,\u53ef\u4ee5\u76d1\u63a7\u6240\u6709\u7684\u6d41\u91cf,IP\u6d41\u91cf,\u6309\u534f\u8bae\u5206\u7684\u6d41\u91cf,\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u8fc7\u6ee4\u5668 iptraf #\u67e5\u770b\u7f51\u7edc\u63a5\u53e3\u5f53\u524d\u914d\u7f6e\u4e0e\u63a5\u53e3\u547d\u540d\uff1a ifconfig #\u6253\u5f00\uff08up\uff09\u6216\u5173\u95ed\uff08down\uff09\u9002\u914d\u5668 ifconfig <\u7f51\u7edc\u540d> <up | down> #\u4e3a\u9002\u914d\u5668\u5206\u914dIP\u5730\u5740\uff1a ifconfig <\u7f51\u7edc\u540d> <ip\u5730\u5740> #\u4e3a\u9002\u914d\u5668\u5206\u914d\u7b2c\u4e8c\u4e2aIP\u5730\u5740\uff1a ifconfig <\u7f51\u7edc\u540d:\u5b9e\u4f8b\u6570> <ip\u5730\u5740> #\u663e\u793a\u67d0\u4e2a\u7f51\u7edc\u9002\u914d\u5668\u7684\u9a71\u52a8\u4fe1\u606f\uff0c\u9002\u7528\u4e8e\u67e5\u8be2\u8f6f\u4ef6\u517c\u5bb9\u6027\u7684\u60c5\u51b5\uff1a ethtool -i eth0 #\u663e\u793a\u7f51\u7edc\u6570\u636e\uff1a ethtool -S #\u8bbe\u7f6e\u9002\u914d\u5668\u8fde\u63a5\u901f\u5ea6\uff08Mbps\uff09 ethtool speed < 10 | 100 | 1000 > #iwconfig \u67e5\u57fa\u672c\u7684Wi-Fi\u7f51\u7edc\u8bbe\u7f6e\uff0c\u5982SSID\u3001channel\u548c\u52a0\u5bc6\u7b49\u7ec6\u8282\u3002\u6b64\u5916\u8fd8\u53ef\u4ee5\u4fee\u6539\u4e00\u4e9b\u9ad8\u7ea7\u8bbe\u7f6e\uff0c\u5305\u62ec\u63a5\u6536\u654f\u611f\u5ea6\uff0cRTS/CTS\uff0c\u788e\u7247\uff0c\u4ee5\u53ca\u91cd\u8bd5\u6570 #\u663e\u793a\u5f53\u524d\u65e0\u7ebf\u8bbe\u7f6e\uff0c\u5305\u62ec\u63a5\u53e3\u540d\u79f0\uff1a iwconfig #\u8bbe\u7f6eESSID\uff08\u6269\u5c55\u670d\u52a1\u8bbe\u7f6e\u8bc6\u522b\u5668\uff09\u6216\u7f51\u7edc\u540d\uff1a iwconfig <\u63a5\u53e3\u540d> essid <\u7f51\u7edc\u540d> #wget wget -S --spider http://osswin.sourceforge.net/ 2 > & 1 | grep Mod #\u67e5\u770bmac\u5730\u5740 cat /sys/class/net/*/address #\u67e5\u770beth0\u7684ip ifconfig eth0 | awk '/inet addr/ {split ($2,A,\":\"); print A[2]}' #curl \u67e5\u770b\u9875\u9762\u5bf9\u5e94\u7684domail name curl -s http://en.m.wikipedia.org/wiki/List_of_Internet_top-level_domains | sed -n '/<tr valign=\"top\">/{s/<[^>]*>//g;p}' #talnet telnet localhost 6666 #\u67e5\u770b\u6240\u6709\u7684\u7f51\u7edc\u63a5\u53e3 awk '{print $1}' /proc/net/dev | grep : | sed \"s/:.*//g\" #\u67e5\u770bDNS server\u7248\u672c\u597d nslookup -q = txt -class = CHAOS version.bind NS.PHX5.NEARLYFREESPEECH.NET","title":"\u7f51\u7edc"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/bash%E5%91%BD%E4%BB%A4%E5%AE%9E%E4%BE%8B/#_3","text":"## processes \u8fdb\u7a0b\u7ba1\u7406 ##ps\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u6267\u884c\u7684\u7ebf\u7a0b\u5217\u8868\uff0c\u8fdb\u884c\u77ac\u95f4\u72b6\u6001\uff0c\u4e0d\u662f\u8fde\u7eed\u72b6\u6001\uff0c\u8fde\u7eed\u72b6\u6001\u9700\u8981\u4f7f\u7528top\u540d\u79f0\u67e5\u770b \u66f4\u591a\u5e38\u7528\u53c2\u6570\u8bf7\u4f7f\u7528 man ps\u67e5\u770b ps ##\u663e\u793a\u6240\u6709\u8fdb\u7a0b\u8be6\u7ec6\u4fe1\u606f ps aux ##-u \u663e\u793a\u67d0\u4e2a\u7528\u6237\u7684\u8fdb\u7a0b\u5217\u8868 ps -f -u www-data ## -C \u901a\u8fc7\u540d\u5b57\u6216\u8005\u547d\u4ee4\u641c\u7d22\u8fdb\u7a0b ps -C apache2 ## --sort \u6839\u636e\u8fdb\u7a0bcpu\u4f7f\u7528\u7387\u964d\u5e8f\u6392\u5217\uff0c\u67e5\u770b\u524d5\u4e2a\u8fdb\u7a0b -pcpu\u8868\u793a\u964d\u5e8f pcpu\u5347\u5e8f ps aux --sort = -pcpu | head -5 ##-f \u7528\u6811\u7ed3\u6784\u663e\u793a\u8fdb\u7a0b\u7684\u5c42\u6b21\u5173\u7cfb\uff0c\u7236\u5b50\u8fdb\u7a0b\u60c5\u51b5\u4e0b ps -f --forest -C apache2 ##\u663e\u793a\u4e00\u4e2a\u7236\u8fdb\u7a0b\u7684\u6240\u6709\u5b50\u8fdb\u7a0b ps -o pid,uname,comm -C apache2 ps --ppid 2359 ##\u663e\u793a\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6240\u6709\u7ebf\u7a0b -L \u53c2\u6570 ps -p 3150 -L ##\u663e\u793a\u8fdb\u7a0b\u7684\u6267\u884c\u65f6\u95f4 -o\u53c2\u6570 ps -e -o pid,comm,etime ##watch\u547d\u4ee4\u53ef\u4ee5\u7528\u6765\u5b9e\u65f6\u6355\u6349ps\u663e\u793a\u8fdb\u7a0b watch -n 1 'ps -e -o pid,uname,cmd,pmem,pcpu --sort=-pmem,-pcpu | head -15' ##jobs \u67e5\u770b\u540e\u53f0\u8fd0\u884c\u7684\u8fdb\u7a0b jobs\u547d\u4ee4\u6267\u884c\u7684\u7ed3\u679c\uff0c\uff0b\u8868\u793a\u662f\u4e00\u4e2a\u5f53\u524d\u7684\u4f5c\u4e1a\uff0c\u51cf\u53f7\u8868\u662f\u662f\u4e00\u4e2a\u5f53\u524d\u4f5c\u4e1a\u4e4b\u540e\u7684\u4e00\u4e2a\u4f5c\u4e1a\uff0cjobs -l\u9009\u9879\u53ef\u663e\u793a\u6240\u6709\u4efb\u52a1\u7684PID,jobs\u7684\u72b6\u6001\u53ef\u4ee5\u662frunning, stopped, Terminated,\u4f46\u662f\u5982\u679c\u4efb\u52a1\u88ab\u7ec8\u6b62\u4e86\uff08kill\uff09\uff0cshell \u4ece\u5f53\u524d\u7684shell\u73af\u5883\u5df2\u77e5\u7684\u5217\u8868\u4e2d\u5220\u9664\u4efb\u52a1\u7684\u8fdb\u7a0b\u6807\u8bc6\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0cjobs\u547d\u4ee4\u663e\u793a\u7684\u662f\u5f53\u524dshell\u73af\u5883\u4e2d\u6240\u8d77\u7684\u540e\u53f0\u6b63\u5728\u8fd0\u884c\u6216\u8005\u88ab\u6302\u8d77\u7684\u4efb\u52a1\u4fe1\u606f jobs ##\u67e5\u770b\u540e\u53f0\u8fd0\u8425\u7684\u8fdb\u7a0b\u53f7 jobs -p ##\u67e5\u770b\u73b0\u5728\u88ab\u7ec8\u6b62\u6216\u8005\u9000\u51fa\u7684\u8fdb\u7a0b\u53f7 jobs -n ##kill\u547d\u4ee4 \u7ec8\u6b62\u4e00\u4e2a\u524d\u53f0\u8fdb\u7a0b\u53ef\u4ee5\u4f7f\u7528Ctrl+C\u952e kill \u901a\u8fc7top\u6216\u8005ps\u83b7\u53d6\u8fdb\u7a0bid\u53f7 kill [-s \u4fe1\u53f7 | -p ] [ -a ] \u8fdb\u7a0b\u53f7 ... ##\u53d1\u9001\u6307\u5b9a\u7684\u4fe1\u53f7\u5230\u76f8\u5e94\u8fdb\u7a0b\u3002\u4e0d\u6307\u5b9a\u578b\u53f7\u5c06\u53d1\u9001SIGTERM\uff0815\uff09\u7ec8\u6b62\u6307\u5b9a\u8fdb\u7a0b\u3002 \u5173\u95ed\u8fdb\u7a0b\u53f712\u7684\u8fdb\u7a0b kill 12 ##\u7b49\u540c\u4e8e\u5728\u524d\u53f0\u8fd0\u884cPID\u4e3a123\u7684\u8fdb\u7a0b\u65f6\u6309\u4e0bCtrl+C\u952e kill -2 123 ##\u5982\u679c\u4efb\u65e0\u6cd5\u7ec8\u6b62\u8be5\u7a0b\u5e8f\u53ef\u7528\u201c-KILL\u201d \u53c2\u6570\uff0c\u5176\u53d1\u9001\u7684\u4fe1\u53f7\u4e3aSIGKILL(9) \uff0c\u5c06\u5f3a\u5236\u7ed3\u675f\u8fdb\u7a0b kill -9 123 ##\u5217\u51fa\u6240\u6709\u4fe1\u53f7\u540d\u79f0 ##HUP 1 \u7ec8\u7aef\u65ad\u7ebf ##INT 2 \u4e2d\u65ad\uff08\u540c Ctrl + C\uff09 ##QUIT 3 \u9000\u51fa\uff08\u540c Ctrl + \\\uff09 ##TERM 15 \u7ec8\u6b62 ##KILL 9 \u5f3a\u5236\u7ec8\u6b62 ##CONT 18 \u7ee7\u7eed\uff08\u4e0eSTOP\u76f8\u53cd\uff0c fg/bg\u547d\u4ee4\uff09 ##STOP 19 \u6682\u505c\uff08\u540c Ctrl + Z\uff09 kill -l ##\u5f97\u5230\u6307\u5b9a\u4fe1\u53f7\u7684\u6570\u503c kill -l KILL ##\u6740\u6b7b\u6307\u5b9a\u7528\u6237\u6240\u6709\u8fdb\u7a0b kill -u peidalinux kill -9 $( ps -ef | grep peidalinux ) ##\u5c06\u540e\u53f0\u4e2d\u7684\u547d\u4ee4\u8c03\u81f3\u524d\u53f0\u7ee7\u7eed\u8fd0\u884c \u5c06\u8fdb\u7a0b123\u8c03\u81f3\u524d\u53f0\u6267\u884c fg 123 ##\u5c06\u4e00\u4e2a\u5728\u540e\u53f0\u6682\u505c\u7684\u547d\u4ee4\uff0c\u53d8\u6210\u7ee7\u7eed\u6267\u884c bg 123 ##\u8be5\u547d\u4ee4\u53ef\u4ee5\u5728\u4f60\u9000\u51fa\u5e10\u6237/\u5173\u95ed\u7ec8\u7aef\u4e4b\u540e\u7ee7\u7eed\u8fd0\u884c\u76f8\u5e94\u7684\u8fdb\u7a0b\u3002nohup\u5c31\u662f\u4e0d\u6302\u8d77\u7684\u610f\u601d \u4e0b\u9762\u8f93\u51fa\u88ab\u91cd\u5b9a\u5411\u5230myout.file\u6587\u4ef6\u4e2d nohup command > myout.file 2 > & 1 & ##at\uff1a\u8ba1\u5212\u4efb\u52a1\uff0c\u5728\u7279\u5b9a\u7684\u65f6\u95f4\u6267\u884c\u67d0\u9879\u5de5\u4f5c\uff0c\u5728\u7279\u5b9a\u7684\u65f6\u95f4\u6267\u884c\u4e00\u6b21\u3002 ## \u683c\u5f0f\uff1aat HH:MM YYYY-MM-DD //HH\uff08\u5c0f\u65f6\uff09:MM\uff08\u5206\u949f\uff09 YYYY\uff08\u5e74\uff09-MM\uff08\u6708\u4efd\uff09-DD\uff08\u65e5\uff09 ##HH[am pm]+D(\u5929) days //HH\uff08\u5c0f\u65f6\uff09[am\uff08\u4e0a\u5348\uff09pm\uff08\u4e0b\u5348\uff09]+days\uff08\u5929\uff09 at 12 :00\uff08\u65f6\u95f4\uff09 //at\u547d\u4ee4\u8bbe\u5b9a12:00\u6267\u884c\u4e00\u9879\u64cd\u4f5c #at>useradd aaa //\u5728at\u547d\u4ee4\u91cc\u8bbe\u5b9a\u6dfb\u52a0\u7528\u6237aaa #ctrl+d //\u9000\u51faat\u547d\u4ee4 #tail -f /etc/passwd //\u67e5\u770b/etc/passwd\u6587\u4ef6\u540e\u5341\u884c\u662f\u5426\u589e\u52a0\u4e86\u4e00\u4e2a\u7528\u6237aaa ##\u8ba1\u5212\u4efb\u52a1\u8bbe\u5b9a\u540e\uff0c\u5728\u6ca1\u6709\u6267\u884c\u4e4b\u524d\u6211\u4eec\u53ef\u4ee5\u7528atq\u547d\u4ee4\u6765\u67e5\u770b\u7cfb\u7edf\u6ca1\u6709\u6267\u884c\u5de5\u4f5c\u4efb\u52a1\u3002 atq ##\u542f\u52a8\u8ba1\u5212\u4efb\u52a1\u540e\uff0c\u5982\u679c\u4e0d\u60f3\u542f\u52a8\u8bbe\u5b9a\u597d\u7684\u8ba1\u5212\u4efb\u52a1\u53ef\u4ee5\u4f7f\u7528atrm\u547d\u4ee4\u5220\u9664\u3002 atrm 1 //\u5220\u9664\u8ba1\u5212\u4efb\u52a11 ##pstree\u547d\u4ee4\uff1a\u5217\u51fa\u5f53\u524d\u7684\u8fdb\u7a0b\uff0c\u4ee5\u53ca\u5b83\u4eec\u7684\u6811\u72b6\u7ed3\u6784 \u683c\u5f0f\uff1apstree [\u9009\u9879] [pid|user] pstree ##nice\u547d\u4ee4\uff1a\u6539\u53d8\u7a0b\u5e8f\u6267\u884c\u7684\u4f18\u5148\u6743\u7b49\u7ea7 \u5e94\u7528\u7a0b\u5e8f\u4f18\u5148\u6743\u503c\u7684\u8303\u56f4\u4ece-20\uff5e19\uff0c\u6570\u5b57\u8d8a\u5c0f\uff0c\u4f18\u5148\u6743\u5c31\u8d8a\u9ad8\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u666e\u901a\u5e94\u7528\u7a0b\u5e8f\u7684\u4f18\u5148\u6743\u503c\uff08CPU\u4f7f\u7528\u6743\u503c\uff09\u90fd\u662f0\uff0c\u5982\u679c\u8ba9\u5e38\u7528\u7a0b\u5e8f\u62e5\u6709\u8f83\u9ad8\u7684\u4f18\u5148\u6743\u7b49\u7ea7\uff0c\u81ea\u7136\u542f\u52a8\u548c\u8fd0\u884c\u901f\u5ea6\u90fd\u4f1a\u5feb\u4e9b\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\u666e\u901a\u7528\u6237\u53ea\u80fd\u57280\uff5e19\u4e4b\u95f4\u8c03\u6574\u5e94\u7528\u7a0b\u5e8f\u7684\u4f18\u5148\u6743\u503c\uff0c\u53ea\u6709\u8d85\u7ea7\u7528\u6237\u6709\u6743\u8c03\u6574\u66f4\u9ad8\u7684\u4f18\u5148\u6743\u503c\uff08\u4ece-20\uff5e19\uff09\u3002 nice [ -n <\u4f18\u5148\u7b49\u7ea7> ][ --help ][ --version ][ \u547d\u4ee4 ] nice -n 5 ls ##sleep\u547d\u4ee4\uff1a\u4f7f\u8fdb\u7a0b\u6682\u505c\u6267\u884c\u4e00\u6bb5\u65f6\u95f4 date ; sleep 1m ; date ##renice\u547d\u4ee4 renice\u547d\u4ee4\u5141\u8bb8\u7528\u6237\u4fee\u6539\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u8fdb\u7a0b\u7684\u4f18\u5148\u6743\u3002 \u5229\u7528renice\u547d\u4ee4\u53ef\u4ee5\u5728\u547d\u4ee4\u6267\u884c\u65f6\u8c03\u6574\u5176\u4f18\u5148\u6743\u3002 ##\u5176\u4e2d\uff0c\u53c2\u6570number\u4e0enice\u547d\u4ee4\u7684number\u610f\u4e49\u76f8\u540c\u3002\uff081\uff09 \u7528\u6237\u53ea\u80fd\u5bf9\u81ea\u5df1\u6240\u6709\u7684\u8fdb\u7a0b\u4f7f\u7528renice\u547d\u4ee4\u3002\uff082\uff09 root\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u4f55\u8fdb\u7a0b\u4e0a\u4f7f\u7528renice\u547d\u4ee4\u3002\uff083\uff09 \u53ea\u6709root\u7528\u6237\u624d\u80fd\u63d0\u9ad8\u8fdb\u7a0b\u7684\u4f18\u5148\u6743 renice -5 -p 5200 #PID\u4e3a5200\u7684\u8fdb\u7a0bnice\u8bbe\u4e3a-5 ##pmap\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u4e00\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u72b6\u6001\u3002\u5176\u62a5\u544a\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u548c\u5185\u5b58\u72b6\u6001\u4fe1\u606f #pmap PID pmap 20367 ##top \u52a8\u6001\u67e5\u770b\u8fdb\u7a0b\u7684\u53d8\u5316\u3002 top ##crontab \u4efb\u52a1\u8c03\u5ea6 ##\u57fa\u672c\u683c\u5f0f : ##*\u3000\u3000*\u3000\u3000*\u3000\u3000*\u3000\u3000*\u3000\u3000command ##\u5206\u3000\u65f6\u3000\u65e5\u3000\u6708\u3000\u5468\u3000\u547d\u4ee4 ##\u7b2c1\u5217\u8868\u793a\u5206\u949f1\uff5e59 \u6bcf\u5206\u949f\u7528*\u6216\u8005 */1\u8868\u793a ##\u7b2c2\u5217\u8868\u793a\u5c0f\u65f61\uff5e23\uff080\u8868\u793a0\u70b9\uff09 ##\u7b2c3\u5217\u8868\u793a\u65e5\u671f1\uff5e31 ##\u7b2c4\u5217\u8868\u793a\u6708\u4efd1\uff5e12 ##\u7b2c5\u5217\u6807\u8bc6\u53f7\u661f\u671f0\uff5e6\uff080\u8868\u793a\u661f\u671f\u5929\uff09 ##\u7b2c6\u5217\u8981\u8fd0\u884c\u7684\u547d\u4ee4 crontab -e ##\u6267\u884c\u6587\u5b57\u7f16\u8f91\u5668\u6765\u8bbe\u5b9a\u65f6\u7a0b\u8868\uff0c\u5185\u5b9a\u7684\u6587\u5b57\u7f16\u8f91\u5668\u662f VI\uff0c\u5982\u679c\u4f60\u60f3\u7528\u522b\u7684\u6587\u5b57\u7f16\u8f91\u5668\uff0c\u5219\u8bf7\u5148\u8bbe\u5b9a VISUAL \u73af\u5883\u53d8\u6570\u6765\u6307\u5b9a\u4f7f\u7528\u90a3\u4e2a\u6587\u5b57\u7f16\u8f91\u5668(\u6bd4\u5982\u8bf4 setenv VISUAL joe) crontab -r ##\u5220\u9664\u76ee\u524d\u7684\u65f6\u7a0b\u8868 crontab -l ##\u5217\u51fa\u76ee\u524d\u7684\u65f6\u7a0b\u8868 crontab file [ -u user ] ##-\u7528\u6307\u5b9a\u7684\u6587\u4ef6\u66ff\u4ee3\u76ee\u524d\u7684crontab\u3002 #crontab\u6587\u4ef6\u7684\u4e00\u4e9b\u793a\u4f8b 30 21 * * * /usr/local/etc/rc.d/lighttpd restart ##\u8868\u793a\u6bcf\u665a\u768421:30\u91cd\u542fapache\u3002 45 4 1 ,10,22 * * /usr/local/etc/rc.d/lighttpd restart ##\u8868\u793a\u6bcf\u67081\u300110\u300122\u65e5\u76844 : 45\u91cd\u542fapache\u3002 10 1 * * 6 ,0 /usr/local/etc/rc.d/lighttpd restart ##\u8868\u793a\u6bcf\u5468\u516d\u3001\u5468\u65e5\u76841 : 10\u91cd\u542fapache\u3002 0 ,30 18 -23 * * * /usr/local/etc/rc.d/lighttpd restart ##\u8868\u793a\u5728\u6bcf\u592918 : 00\u81f323 : 00\u4e4b\u95f4\u6bcf\u969430\u5206\u949f\u91cd\u542fapache\u3002 * 23 -7/1 * * * /usr/local/etc/rc.d/lighttpd restart ##\u665a\u4e0a11\u70b9\u5230\u65e9\u4e0a7\u70b9\u4e4b\u95f4\uff0c\u6bcf\u9694\u4e00\u5c0f\u65f6\u91cd\u542fapache","title":"\u8fdb\u7a0b"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/bash%E5%91%BD%E4%BB%A4%E5%AE%9E%E4%BE%8B/#_4","text":"#\u67e5\u770b\u5f53\u524d\u7cfb\u7edfload uptime #\u67e5\u770b\u7cfb\u7edf\u72b6\u6001\u548c\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u72b6\u51b5 top #\u53ef\u89c6\u5316\u663e\u793aCPU\u7684\u4f7f\u7528\u72b6\u51b5 htop #\u67e5\u770b\u6bcf\u4e2aCPU\u7684\u8d1f\u8f7d\u4fe1\u606f mpstat -P ALL 1 #\u6bcf\u96941\u79d2\u67e5\u770b\u78c1\u76d8IO\u7684\u7edf\u8ba1\u4fe1\u606f iostat -xkdz 1 #\u6bcf\u9694\u4e00\u79d2\u67e5\u770b\u865a\u62df\u5185\u5b58\u7684\u4f7f\u7528\u4fe1\u606f vmstat 1 #\u67e5\u770b\u5185\u5b58\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f free #\u67e5\u770b\u7f51\u7edc\u4f7f\u7528\u4fe1\u606f nicstat -z 1 #\u7c7b\u4f3cvmstat\u7684\u663e\u793a\u4f18\u5316\u7684\u5de5\u5177 dstat 1 #\u67e5\u770b\u7cfb\u7edf\u6d3b\u52a8\u72b6\u6001\uff0c\u6bd4\u5982\u7cfb\u7edf\u5206\u9875\u7edf\u8ba1\uff0c\u5757\u8bbe\u5907IO\u7edf\u8ba1\u7b49 sar #\u7f51\u7edc\u8fde\u63a5\u72b6\u6001\u67e5\u770b netstat -s #\u8fdb\u7a0b\u8d44\u6e90\u4f7f\u7528\u4fe1\u606f\u67e5\u770b pidstat 1 pidstat -d 1 #\u67e5\u770b\u67d0\u4e2a\u8fdb\u7a0b\u7684\u7cfb\u7edf\u8c03\u7528\u4fe1\u606f -p\u540e\u9762\u662f\u8fdb\u7a0bid\uff0c-tttT \u8fdb\u7a0b\u7cfb\u7edf\u540e\u7684\u7cfb\u7edf\u8c03\u7528\u65f6\u95f4 strace -tttT -p 12670 #\u7edf\u8ba1IO\u8bbe\u5907\u8f93\u5165\u8f93\u51fa\u7684\u7cfb\u7edf\u8c03\u7528\u4fe1\u606f strace -c dd if = /dev/zero of = /dev/null bs = 512 count = 1024k #tcpdump \u67e5\u770b\u7f51\u7edc\u6570\u636e\u5305 tcpdump -nr /tmp/out.tcpdump #\u5757\u8bbe\u5907\u7684\u8bfb\u5199\u4e8b\u4ef6\u4fe1\u606f\u7edf\u8ba1 btrace /dev/sdb #iotop\u67e5\u770b\u67d0\u4e2a\u8fdb\u7a0b\u7684IO\u64cd\u4f5c\u7edf\u8ba1\u4fe1\u606f iotop -bod5 #slabtop \u67e5\u770b\u5185\u6838 slab\u5185\u5b58\u5206\u914d\u5668\u7684\u4f7f\u7528\u4fe1\u606f slabtop -sc #\u7cfb\u7edf\u53c2\u6570\u8bbe\u7f6e sysctl -a #\u7cfb\u7edf\u6027\u80fd\u6307\u6807\u7edf\u8ba1\u4fe1\u606f perf stat gzip file1 #\u7cfb\u7edfcpu\u6d3b\u52a8\u72b6\u6001\u67e5\u770b perf record -a -g -F 997 sleep 10","title":"\u6027\u80fd"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/bash%E5%91%BD%E4%BB%A4%E5%AE%9E%E4%BE%8B/#cpu","text":"#\u9650\u5236\u67d0\u4e2a\u7ebf\u7a0b\u7684cpu\u4f7f\u7528\u7387 sudo cpulimit -p pid -l 50 ps -eo %cpu,args | grep -m1 PROCESS | awk '{print $1}' #\u5c06\u5f53\u524d\u8fdb\u7a0b\u6309\u7167memory\u548ccpu\u6392\u5e8f ps aux --sort = %mem,%cpu #\u6309\u7167cpu\u4f7f\u7528\u7387\u6392\u5e8f ps -e -o pcpu,cpu,nice,state,cputime,args --sort pcpu | sed \"/^ 0.0 /d\" #\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684\u7269\u7406cpu\u4e2a\u6570 grep \"processor\" /proc/cpuinfo | wc -l grep -c -e '^cpu[0-9]\\+' /proc/stat #\u67e5\u770b\u5f53\u524dcpu\u578b\u53f7 grep \"model name\" /proc/cpuinfo #\u67e5\u770b\u5f53\u524dcpu\u4fe1\u606f cat /proc/cpuinfo #\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684\u4f4d\u6570 grep -q '\\<lm\\>' /proc/cpuinfo && echo 64 bits || echo 32 bits getconf LONG_BIT | grep '64' java -version #\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684cpu\u9891\u7387 awk -F \": \" '/cpu MHz\\ */ { print \"Processor (or core) running speed is: \" $2 }' /proc/cpuinfo ; dmidecode | awk -F \": \" '/Current Speed/ { print \"Processor real speed is: \" $2 }' #\u67e5\u770b\u6bcf\u4e2acpu\u6bcf\u4e2a\u8fdb\u7a0b\u7684cpu\u4f7f\u7528\u7387 ps ax -L -o pid,tid,psr,pcpu,args | sort -nr -k4 | head -15 | cut -c 1 -90 #\u67e5\u770b\u5f53\u524d\u4e2d\u65ad cat /proc/interrupts #\u67e5\u770b\u591a\u4e2a\u5904\u7406\u5668\u7684\u4f7f\u7528\u7387\u76f8\u5173\u4fe1\u606f mpstat \u2013P ALL 1 #\u6bcf\u4e2a\u7269\u7406CPU\u4e2dCore\u7684\u4e2a\u6570\uff1a cat /proc/cpuinfo | grep \"cpu cores\" | uniq | awk -F: '{print $2}' #\u662f\u5426\u4e3a\u8d85\u7ebf\u7a0b\uff1f #\u5982\u679c\u6709\u4e24\u4e2a\u903b\u8f91CPU\u5177\u6709\u76f8\u540c\u7684\u201dcore id\u201d\uff0c\u90a3\u4e48\u8d85\u7ebf\u7a0b\u662f\u6253\u5f00\u7684\u3002 #\u6bcf\u4e2a\u7269\u7406CPU\u4e2d\u903b\u8f91CPU(\u53ef\u80fd\u662fcore, threads\u6216both)\u7684\u4e2a\u6570\uff1a cat /proc/cpuinfo | grep \"siblings\" #/proc/stat \u6587\u4ef6\u4e2d\u6709\u4e00\u884c\u8bb0\u5f55\u7684\u673a\u5668\u4ece\u542f\u52a8\u4f9d\u8d56\uff0c\u5404\u4e2a\u4e2d\u65ad\u5e8f\u53f7\u53d1\u751f\u4e2d\u65ad\u7684\u6b21\u6570\u3002 #\u8fd9\u4e00\u884c\u4ee5intr\u5f00\u5934\uff0c\u63a5\u4e0b\u6765\u7684\u7b2c\u4e00\u4e2a\u6570\u5b57\u662f\u603b\u7684\u4e2d\u65ad\u6570\u76ee\uff0c\u4e4b\u540e\u5c31\u662f\u5206\u522b\u7684\u4e2d\u65ad\u6570\u76ee\uff0c\u4ece0\u5f00\u59cb\u3002 cat /proc/stat | grep intr","title":"CPU"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/bash%E5%91%BD%E4%BB%A4%E5%AE%9E%E4%BE%8B/#io","text":"IO.sh ##iostat\u662f\u67e5\u770b\u78c1\u76d8\u6d3b\u52a8\u7edf\u8ba1\u60c5\u51b5 ##\u663e\u793a\u6240\u6709\u8bbe\u5907\u8d1f\u8f7d\u60c5\u51b5 r/s: \u6bcf\u79d2\u5b8c\u6210\u7684\u8bfb I/O \u8bbe\u5907\u6b21\u6570\u3002\u5373 rio/s\uff1bw/s: \u6bcf\u79d2\u5b8c\u6210\u7684\u5199 I/O \u8bbe\u5907\u6b21\u6570\u3002\u5373 wio/s\u7b49 iostat ##\u6bcf\u96942\u79d2\u5237\u65b0\u78c1\u76d8IO\u4fe1\u606f\uff0c\u5e76\u4e14\u6bcf\u6b21\u663e\u793a3\u6b21 iostat 2 3 #\u663e\u793a\u67d0\u4e2a\u78c1\u76d8\u7684IO\u4fe1\u606f iostat -d sda1 ##\u663e\u793atty\u548ccpu\u4fe1\u606f iostat -t ##\u4ee5M\u4e3a\u5355\u4f4d\u663e\u793a\u78c1\u76d8IO\u4fe1\u606f iostat -m ##\u67e5\u770bTPS\u548c\u541e\u5410\u91cf\u4fe1\u606f kB_read/s\uff1a\u6bcf\u79d2\u4ece\u8bbe\u5907\uff08drive expressed\uff09\u8bfb\u53d6\u7684\u6570\u636e\u91cf\uff1bkB_wrtn/s\uff1a\u6bcf\u79d2\u5411\u8bbe\u5907\uff08drive expressed\uff09\u5199\u5165\u7684\u6570\u636e\u91cf\uff1bkB_read\uff1a\u8bfb\u53d6\u7684\u603b\u6570\u636e\u91cf\uff1bkB_wrtn\uff1a\u5199\u5165\u7684\u603b\u6570\u91cf\u6570\u636e\u91cf\uff1b iostat -d -k 1 1 #\u67e5\u770b\u8bbe\u5907\u4f7f\u7528\u7387\uff08%util\uff09\u3001\u54cd\u5e94\u65f6\u95f4\uff08await\uff09 iostat -d -x -k 1 1 #\u67e5\u770bCPU\u72b6\u6001 iostat -c 1 3 #\u7edf\u8ba1\u8fdb\u7a0b(pid)\u7684stat,\u8fdb\u7a0b\u7684stat\u81ea\u7136\u5305\u62ec\u8fdb\u7a0b\u7684IO\u72b6\u51b5 pidstat #\u53ea\u663e\u793aIO pidstat -d 1 #-d IO \u4fe1\u606f,-r \u7f3a\u9875\u53ca\u5185\u5b58\u4fe1\u606f-u CPU\u4f7f\u7528\u7387-t \u4ee5\u7ebf\u7a0b\u4e3a\u7edf\u8ba1\u5355\u4f4d1 1\u79d2\u7edf\u8ba1\u4e00\u6b21 pidstat -u -r -d -t 1 #\u6587\u4ef6\u7ea7IO\u5206\u6790,\u67e5\u770b\u5f53\u524d\u6587\u4ef6\u7531\u54ea\u4e9b\u8fdb\u7a0b\u6253\u5f00 lsof ls /proc/pid/fd #\u5229\u7528 sar \u62a5\u544a\u78c1\u76d8 I/O \u4fe1\u606fDEV \u6b63\u5728\u76d1\u89c6\u7684\u5757\u8bbe\u5907 tps \u6bcf\u79d2\u949f\u7269\u7406\u8bbe\u5907\u7684 I/O \u4f20\u8f93\u603b\u91cf rd_sec/s \u6bcf\u79d2\u4ece\u8bbe\u5907\u8bfb\u53d6\u7684\u6247\u533a\u6570\u91cf wr_sec/s \u6bcf\u79d2\u5411\u8bbe\u5907\u5199\u5165\u7684\u6247\u533a\u6570\u91cf avgrq-sz I/O \u8bf7\u6c42\u7684\u5e73\u5747\u6247\u533a\u6570 #avgqu-sz I/O \u8bf7\u6c42\u7684\u5e73\u5747\u961f\u5217\u957f\u5ea6 await I/O \u8bf7\u6c42\u7684\u5e73\u5747\u7b49\u5f85\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 svctm I/O \u8bf7\u6c42\u7684\u5e73\u5747\u670d\u52a1\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 %util I/O \u8bf7\u6c42\u6240\u5360\u7528\u7684\u65f6\u95f4\u7684\u767e\u5206\u6bd4\uff0c\u5373\u8bbe\u5907\u5229\u7528\u7387 sar -pd 10 3 #iotop top\u7684io\u7248 iotop #\u67e5\u770b\u9875\u9762\u7f13\u5b58\u4fe1\u606f \u5176\u4e2d\u7684Cached \u6307\u7528\u4e8epagecache\u7684\u5185\u5b58\u5927\u5c0f\uff08diskcache-SwapCache\uff09\u3002\u968f\u7740\u5199\u5165\u7f13\u5b58\u9875\uff0cDirty \u7684\u503c\u4f1a\u589e\u52a0 \u4e00\u65e6\u5f00\u59cb\u628a\u7f13\u5b58\u9875\u5199\u5165\u786c\u76d8,Writeback\u7684\u503c\u4f1a\u589e\u52a0\u76f4\u5230\u5199\u5165\u7ed3\u675f\u3002 cat /proc/meminfo #\u67e5\u770b\u6709\u591a\u5c11\u4e2apdflush\u8fdb\u7a0b Linux \u7528pdflush\u8fdb\u7a0b\u628a\u6570\u636e\u4ece\u7f13\u5b58\u9875\u5199\u5165\u786c\u76d8 #pdflush\u7684\u884c\u4e3a\u53d7/proc/sys/vm\u4e2d\u7684\u53c2\u6570\u7684\u63a7\u5236/proc/sys/vm/dirty_writeback_centisecs (default 500): 1/100\u79d2, \u591a\u957f\u65f6\u95f4\u5524\u9192pdflush\u5c06\u7f13\u5b58\u9875\u6570\u636e\u5199\u5165\u786c\u76d8\u3002\u9ed8\u8ba45\u79d2\u5524\u91922\u4e2a\uff08\u66f4\u591a\u4e2a\uff09\u7ebf\u7a0b\u3002\u5982\u679cwrteback\u7684\u65f6\u95f4\u957f\u4e8edirty_writeback_centisecs\u7684\u65f6\u95f4\uff0c\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898 cat /proc/sys/vm/nr_pdflush_threads #\u67e5\u770bI/O \u8c03\u5ea6\u5668 #\u8c03\u5ea6\u7b97\u6cd5 #noop anticipatory deadline [cfq] #deadline : deadline \u7b97\u6cd5\u4fdd\u8bc1\u5bf9\u65e2\u5b9a\u7684IO\u8bf7\u6c42\u4ee5\u6700\u5c0f\u7684\u5ef6\u8fdf\u65f6\u95f4\u3002 #anticipatory\uff1a \u6709\u4e2aIO\u53d1\u751f\u540e\uff0c\u5982\u679c\u53c8\u6709\u8fdb\u7a0b\u8bf7\u6c42IO\uff0c\u5219\u4ea7\u751f\u4e00\u4e2a\u9ed8\u8ba46ms\u731c\u6d4b\u65f6\u95f4\uff0c\u731c\u6d4b\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u8bf7\u6c42IO\u662f\u5e72\u4ec0\u4e48\u3002\u8fd9\u5bf9\u4e8e\u968f\u673a\u8bfb\u53d6\u4f1a\u9020\u6210\u8f83\u5927\u7684\u5ef6\u65f6\u3002\u5bf9\u6570\u636e\u5e93\u5e94\u7528\u5f88\u7cdf\u7cd5\uff0c\u800c\u5bf9\u4e8eWeb Server\u7b49\u5219\u4f1a\u8868\u73b0\u4e0d\u9519\u3002 #cfq: \u5bf9\u6bcf\u4e2a\u8fdb\u7a0b\u7ef4\u62a4\u4e00\u4e2aIO\u961f\u5217\uff0c\u5404\u4e2a\u8fdb\u7a0b\u53d1\u6765\u7684IO\u8bf7\u6c42\u4f1a\u88abcfq\u4ee5\u8f6e\u5faa\u65b9\u5f0f\u5904\u7406\uff0c\u5bf9\u6bcf\u4e00\u4e2aIO\u8bf7\u6c42\u90fd\u662f\u516c\u5e73\u3002\u9002\u5408\u79bb\u6563\u8bfb\u7684\u5e94\u7528\u3002 #noop: \u5bf9\u6240\u6709IO\u8bf7\u6c42\u90fd\u7528FIFO\u961f\u5217\u5f62\u5f0f\u5904\u7406\u3002\u9ed8\u8ba4IO\u4e0d\u4f1a\u5b58\u5728\u6027\u80fd\u95ee\u9898\u3002 cat /sys/block/ [ disk ] /queue/scheduler #\u6539\u53d8IO\u8c03\u5ea6\u5668 $ echo deadline > /sys/block/sdX/queue/scheduler #\u63d0\u9ad8\u8c03\u5ea6\u5668\u8bf7\u6c42\u961f\u5217\u7684 $ echo 4096 > /sys/block/sdX/queue/nr_requests","title":"IO"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/bash%E5%91%BD%E4%BB%A4%E5%AE%9E%E4%BE%8B/#awk","text":"#\u5220\u9664temp\u6587\u4ef6\u7684\u91cd\u590d\u884c awk '!($0 in array) { array[$0]; print }' temp #\u67e5\u770b\u6700\u957f\u4f7f\u7528\u768410\u4e2aunix\u547d\u4ee4 awk '{print $1}' ~/.bash_history | sort | uniq -c | sort -rn | head -n 10 #\u67e5\u770b\u673a\u5668\u7684ip\u5217\u8868 ifconfig -a | awk '/Bcast/{print $2}' | cut -c 5 -19 #\u67e5\u770b\u673a\u5668\u7684\u6bcf\u4e2a\u8fdc\u7a0b\u94fe\u63a5\u673a\u5668\u7684\u8fde\u63a5\u6570 netstat -antu | awk '$5 ~ /[0-9]:/{split($5, a, \":\"); ips[a[1]]++} END {for (ip in ips) print ips[ip], ip | \"sort -k1 -nr\"}' #\u67e5\u770b\u67d0\u4e2a\u8fdb\u7a0b\u6253\u5f00\u7684socket\u6570\u91cf ps aux | grep [ process ] | awk '{print $2}' | xargs -I % ls /proc/%/fd | wc -l #\u67e5\u770b\u65e0\u7ebf\u7f51\u7edc\u7684ip sudo ifconfig wlan0 | grep inet | awk 'NR==1 {print $2}' | cut -c 6 - #\u6279\u91cf\u91cd\u547d\u540d\u6587\u4ef6 find . -name '*.jpg' | awk 'BEGIN{ a=0 }{ printf \"mv %s name%01d.jpg\\n\", $0, a++ }' | bash #\u67e5\u770b\u67d0\u4e2a\u7528\u6237\u6253\u5f00\u7684\u6587\u4ef6\u53e5\u67c4\u5217\u8868 for x in ` ps -u 500 u | grep java | awk '{ print $2 }' ` ; do ls /proc/ $x /fd | wc -l ; done #\u8ba1\u7b97\u6587\u4ef6temp\u7684\u7b2c\u4e00\u5217\u7684\u503c\u7684\u548c awk '{s+=$1}END{print s}' temp #\u67e5\u770b\u6700\u5e38\u7528\u7684\u547d\u4ee4\u548c\u4f7f\u7528\u6b21\u6570 history | awk '{if ($2 == \"sudo\") a[$3]++; else a[$2]++}END{for(i in a){print a[i] \" \" i}}' | sort -rn | head #\u67e5\u627e\u67d0\u4e2a\u65f6\u95f4\u6233\u7684\u6587\u4ef6\u5217\u8868 cp -p ` ls -l | awk '/Apr 14/ {print $NF}' ` /usr/users/backup_dir #\u683c\u5f0f\u5316\u8f93\u51fa\u5f53\u524d\u7684\u8fdb\u7a0b\u4fe1\u606f ps -ef | awk -v OFS = \"\\n\" '{ for (i=8;i<=NF;i++) line = (line ? line FS : \"\") $i; print NR \":\", $1, $2, $7, line, \"\"; line = \"\" }' #\u67e5\u770b\u8f93\u5165\u6570\u636e\u7684\u7279\u5b9a\u4f4d\u7f6e\u7684\u5355\u4e2a\u5b57\u7b26 echo \"abcdefg\" | awk 'BEGIN {FS=\"''\"} {print $2}' #\u6253\u5370\u884c\u53f7 ls | awk '{print NR \"\\t\" $0}' #\u6253\u5370\u5f53\u524d\u7684ssh \u5ba2\u6237\u7aef netstat -tn | awk '($4 ~ /:22\\s*/) && ($6 ~ /^EST/) {print substr($5, 0, index($5,\":\"))}' #\u6253\u5370\u6587\u4ef6\u7b2c\u4e00\u5217\u4e0d\u540c\u503c\u7684\u884c awk '!array[$1]++' file.txt #\u6253\u5370\u7b2c\u4e8c\u5217\u552f\u4e00\u503c awk '{ a[$2]++ } END { for (b in a) { print b } }' file #\u67e5\u770b\u7cfb\u7edf\u6240\u6709\u5206\u533a awk '{if ($NF ~ \"^[a-zA-Z].*[0-9]$\" && $NF !~ \"c[0-9]+d[0-9]+$\" && $NF !~ \"^loop.*\") print \"/dev/\"$NF}' /proc/partitions #\u67e5\u770b2\u5230100\u6240\u6709\u8d28\u6570 for num in ` seq 2 100 ` ; do if [ ` factor $num | awk '{print $2}' ` == $num ] ; then echo -n \" $num \" ; fi done ; echo #\u67e5\u770b\u7b2c3\u5230\u7b2c6\u884c awk 'NR >= 3 && NR <= 6' /path/to/file #\u9006\u5e8f\u67e5\u770b\u6587\u4ef6 awk '{a[i++]=$0} END {for (j=i-1; j>=0;) print a[j--] }' #\u6253\u537099\u4e58\u6cd5\u8868 seq 9 | sed 'H;g' | awk -v RS = '' '{for(i=1;i<=NF;i++)printf(\"%dx%d=%d%s\", i, NR, i*NR, i==NR?\"\\n\":\"\\t\")}'","title":"AWK"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/bash%E5%91%BD%E4%BB%A4%E5%AE%9E%E4%BE%8B/#log","text":"#\u7edf\u8ba1apache cookie log\u4e2d\u8bbf\u95ee\u9891\u7387\u6700\u9ad8\u768420\u4e2aip\u548c\u8bbf\u95ee\u6b21\u6570 cat cookielog | awk '{ a[$1] += 1; } END { for(i in a) printf(\"%d, %s\\n\", a[i], i ); }' | sort -n | tail -20 #\u7edf\u8ba1apache cookie log\u4e2d\u8fd4\u56de404\u7684url\u5217\u8868 awk '$11 == 404 {print $8}' access_log | uniq -c | sort -rn | head #\u7edf\u8ba1\u4e00\u4e2aip\u8bbf\u95ee\u8d85\u8fc720\u6b21\u7684ip\u548c\u8bbf\u95ee\u6b21\u6570\u5217\u8868\uff0c\u628a$1\u6539\u4e3aurl\u5bf9\u5e94\u7684$9,\u5219\u53ef\u4ee5\u7edf\u8ba1\u6bcf\u4e2aurl\u7684\u8bbf\u95ee\u6b21\u6570 cat access_log | awk '{print $1}' | sort | uniq -c | sort -n | awk '{ if ($1 > 20)print $1,$2}' #\u7edf\u8ba1\u6bcf\u4e2aurl\u7684\u5e73\u5747\u8bbf\u95ee\u65f6\u95f4 cat cookielog | awk '{ a[$6] += 1; b[$6] += $11; } END { for(i in a) printf(\"%d, %d, %s\\n\", a[i],a[i]/b[i] i ); }' | sort -n | tail -20 #\u6253\u5370\u8bbf\u95eeapache\u7684\u65b0ip\u5217\u8868 tail -f access.log | awk -W interactive '!x[$1]++ {print $1}' #\u901a\u8fc7\u65e5\u5fd7\u67e5\u770b\u5f53\u5929\u6307\u5b9aip\u8bbf\u95ee\u6b21\u6570\u8fc7\u7684url\u548c\u8bbf\u95ee\u6b21\u6570: cat access.log | grep \"10.0.21.17\" | awk '{print $7}' | sort | uniq -c | sort \u2013nr #\u901a\u8fc7\u65e5\u5fd7\u67e5\u770b\u5f53\u5929\u8bbf\u95ee\u6b21\u6570\u6700\u591a\u7684\u65f6\u95f4\u6bb5 awk '{print $4}' access.log | grep \"26/Mar/2012\" | cut -c 20 -50 | sort | uniq -c | sort -nr | head #\u67e5\u770b\u67d0\u4e00\u5929\u7684\u8bbf\u95ee\u91cf cat access_log | grep '12/Nov/2012' | grep \"******.htm\" | wc | awk '{print $1}' | uniq #\u67e5\u770b\u8bbf\u95ee\u65f6\u95f4\u8d85\u8fc730ms\u7684url\u5217\u8868 cat access_log | awk \u2018 ( $NF > 30 ){ print $7 } \u2019 | sort -n | uniq -c | sort -nr | head -20 #\u5217\u51fa\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc760m\u7684url\u5217\u8868\u5e76\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570 cat access_log | awk \u2018 ( $NF > 60 && $7 ~/ \\. php/ ){ print $7 } \u2019 | sort -n | uniq -c | sort -nr | head -100 #\u6392\u9664\u641c\u7d22\u5f15\u64ce\u540e\u7684url\u8bbf\u95ee\u6b21\u6570 sed \"/Baiduspider/d;/Googlebot/d;/Sogou web spider/d;\" xxx.log | awk -F ' ' '{print $7}' | sort | uniq -c | sort -k1,2 -nr #\u7edf\u8ba1/index.html\u9875\u9762\u7684\u8bbf\u95eeuv grep \"/index.html\" access.log | cut \u2013d \u201c \u201d \u2013f 4 | sort | uniq | wc \u2013l","title":"\u65e5\u5fd7Log"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/shell%E5%88%9D%E5%AD%A6%E8%80%85%E5%8F%82%E8%80%83/","text":"$(var##*/) \u4ece\u524d\u5220\u9664\u81f3\u6700\u540e\u4e00\u4e2a/\u5904(\u5305\u62ec/),\u9002\u5408\u83b7\u53d6\u8def\u5f84\u4e2d\u7684\u6587\u4ef6\u540d `` \u548c $() \u529f\u80fd\u4e00\u6837,\u540e\u53ef\u4ee5\u5d4c\u5957 echo \u8f93\u51fa\u5230\u53d8\u91cf\u7684\u5199\u6cd5: result=$(echo $varname) sed\u53d8\u91cf\u66ff\u6362 sed -i '' \"$(echo $line_number)s/^.*$/date: $(echo $date_str)/\" $(echo $s) \u8f93\u51fa\u591a\u884c\u5230\u6587\u4ef6 cat>file <<END line1 line2 `echo hello` <<END \u6761\u4ef6\u4e0d\u6210\u7acb if not condition then \u8fd9\u6837 [ ! -e /etc/passwd ] && echo \"noT exists\" shift,\u53c2\u6570\u5de6\u79fb,\u6700\u5de6\u8fb9\u7684\u4e22\u6389 # test.sh a b c d # $1,$2,$3,$4 \u56db\u4e2a\u53c2\u6570\u5206\u522b\u662f a b c d shift # $1,$2,$3 \u53ea\u67093\u4e2a\u53c2\u6570 ,\u503c\u4e3a b c d shift # $1 $2 \u53ea\u67092\u4e2a\u53c2\u6570, \u503c\u4e3a c d $#, \u53c2\u6570\u7684\u4e2a\u6570,\u7c7b\u4f3c\u4e8eC\u91cc\u9762\u7684argc \u50cfrbenv\u4e00\u6837\u5728\u521d\u59cb\u5316\u8fd0\u884c\u65f6\u5b9a\u4e49\u4e00\u4e9bbuit in \u51fd\u6570 eval \"$(rbenv init -)\" \u5224\u65ad\u4e00\u4e2a\u53d8\u91cf\u662f\u5426\u4e3a\u7a7a,\u6ce8\u610f\u52a0\u5f15\u53f7,\u662f = \u4e0d\u662f == [ \" $var \" = \"\" ] && echo \"is empty\" \u5b57\u7b26\u4e32\u622a\u53d6 ${ var : 1 : 70 } \u5f53\u524d\u6267\u884c\u811a\u672c\u6267\u884c\u7684\u76ee\u5f55 CURRENT_SHELL_FOLDER = $( cd \" $( dirname \" $0 \" ) \" ; pwd ) \u6216\u8005 CURRENT_SHELL_FOLDER = $( readlink -f $( dirname $0 )) \u5b9e\u73b0\u8fdb\u5ea6\u6761 #!/bin/bash # \\r \u662f\u56de\u8f66 -en e\u8868\u793a\u8f6c\u4e49,n\u8868\u793a\u4e0d\u6362\u884c echo -en '[### ] 5%\\r' sleep 2 echo -en '[############ ] 25%\\r' sleep 1 echo -en '[############# ] 35%\\r' sleep 1 echo -en '[################## ] 45%' sleep 2 \u4e24\u4e2a\u77ed\u6760\u7684\u4f5c\u7528 gem install mysql -- --with-ldflags = -L/usr/local/opt/openssl/lib --with-cppflags = -I/usr/local/opt/openssl/include \u4e0a\u9762\u7684 -- \u4ee3\u8868\u540e\u9762\u7684\u53c2\u6570 --with-ldflags=-L/usr/local/opt/openssl/lib --with-cppflags=-I/usr/local/opt/openssl/include gem \u547d\u4ee4\u4e0d\u4f5c\u89e3\u6790,\u800c\u76f4\u63a5\u4f20\u9012\u8fdb\u53bb,gem\u7684\u547d\u4ee4\u6267\u884c\u8fc7\u7a0b\u4e2d\u5168\u4f7f\u7528\u8fd9\u4e2a\u53c2\u6570.\u81f3\u4e8e\u5982\u4f55\u4f7f\u7528,\u6709\u65f6\u95f4\u4f5c\u4e2a\u5c0f\u6d4b\u8bd5. shell\u6267\u884c\u8fc7\u7a0b\u4e2d\u663e\u793a\u51fa\u9519\u7684\u884c(\u54ea\u4e00\u884c\u51fa\u9519),\u6700\u597d\u52a0\u4e0a set -x error() { local parent_lineno=\"$1\" local message=\"$2\" local code=\"${3:-1}\" if [[ -n \"$message\" ]] ; then echo \"Error on or near line ${parent_lineno}: ${message}; exiting with status ${code}\" else echo \"Error on or near line ${parent_lineno}; exiting with status ${code}\" fi exit \"${code}\" } trap 'error ${LINENO}' ERR","title":"Shell\u521d\u5b66\u8005\u53c2\u8003"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/%E5%A4%84%E7%90%86utf8/","text":"\u5904\u7406UTF-8 \u00b6 export LC_CTYPE = UTF-8 \u00b6","title":"\u5904\u7406utf8"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/%E5%A4%84%E7%90%86utf8/#utf-8","text":"export LC_CTYPE = UTF-8","title":"\u5904\u7406UTF-8"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/%E5%A4%84%E7%90%86utf8/#_1","text":"","title":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/%E5%A6%82%E4%BD%95%E8%AE%A9ls%E5%A4%A7%E5%B0%8F%E5%86%99%E4%B8%8D%E6%95%8F%E6%84%9F/","text":"\u5982\u4f55\u8ba9ls\u5927\u5c0f\u5199\u4e0d\u654f\u611f \u5728\u5199alfred\u7684\u63d2\u4ef6\u7684\u65f6\u5019,\u9700\u8981ls\u6839\u636e\u901a\u914d\u7b26\u5217\u51fa\u7684\u6587\u4ef6\u540d\u4e0d\u533a\u5206\u5927\u5c0f\u5199. bash\u4e0b\u8bbe\u7f6e: shopt -s nocaseglob zsh: unsetopt CASE_GLOB yash: set +o case-glob \u5982\u679c\u957f\u671f\u4f7f\u7528\u53ef\u4ee5\u653e\u5230 .[shell_name]rc \u6587\u4ef6\u4e2d\u53bb.","title":"\u5982\u4f55\u8ba9ls\u5927\u5c0f\u5199\u4e0d\u654f\u611f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/%E6%93%8D%E4%BD%9C%E5%A4%9A%E8%A1%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E9%87%8F/","text":"\u5f53\u6211\u4eec\u5728 shell \u7684 bash \u91cc\u64cd\u4f5c\u591a\u884c\u5185\u5bb9\u7684\u5b57\u7b26\u4e32,\u6211\u4eec\u5f80\u5f80\u4f1a\u60f3\u5230 \u666e\u901a\u7684\u5b57\u7b26\u4e32\u5904\u7406\u529e\u6cd5 \u4f8b\u5982: string = \"Hello linux\" echo $string \u5176\u5b9e bash \u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u89e3\u51b3\u529e\u6cd5,\u5c31\u662f \"Multi-line\" \u53d8\u91cf\u7684\u57fa\u672c\u4f7f\u7528 \u00b6 e.g. \u5305\u542b\u53d8\u91cf cat > myfile.txt <<EOF this file has $variable $names $inside EOF # \u6ce8\u5165\u6587\u6863\u5230 myfile.txt cat myfile.txt #\u8f93\u5165: #this file has variable = \"ONE\" names = \"TWO\" inside = \"expanded variables\" cat > myfile.txt <<EOF this file has $variable $names $inside EOF #print out the content of myfile.txt cat myfile.txt #\u8f93\u5165: #this file has ONE TWO expanded variables \u65e0\u53d8\u91cf \u00b6 cat > myfile.txt << \"EOF\" this file has $variable $dollar $name $inside EOF cat myfile.txt #\u5f97\u5230 #this file has $variable $dollar $name $inside PS:\u5f15\u7528\u7b26\u53f7 \"EOF\" \u51b3\u5b9a\u662f\u5426\u9700\u8981\u8f93\u5165\u53d8\u91cf \u65e0\u53d8\u91cf \u2013 \u4f8b\u5b50 2 \u00b6 cat > myfile.txt <<EOF this file has $variable \\$dollar \\$name \\$inside EOF cat myfile.txt # \u5f97\u5230 # this file has $variable $dollar $name $inside \u8f6c\u4e49 dollar \"$\" \u7b26\u53f7,bash\u5c06\u53d6\u6d88\u53d8\u91cf\u7684\u89e3\u6790 \u5c06\u4e00\u4e2a\u591a\u884c\u6587\u672c\u8d4b\u503c\u5230\u53d8\u91cf\u91cc\u9762 \u00b6 \u4f8b1: read -d '' stringvar <<- \"_EOF_\" all the leading dollars in the $variable $name are $retained _EOF_ # \u8f93\u5165\u53d8\u91cf echo $stringvar ; # all the leading dollars in the $variable $name are $retained \u4f8b2: read -d '' help <<- \"_EOF_\" usage: up [ --level <n> | -n <levels> ][ --help ][ --version ] Report bugs to: up home page: _EOF_ \u4f8b3: VARIABLE1 = \"<?xml version=\\\"1.0\\\" encoding='UTF-8'?> <report> <img src=\" a-vs-b.jpg \"/> <caption>Thus is a future post on Multi Line Strings in bash <date>1511</date>-<date>1512</date>.</caption> </report>\" \u4f8b4: VARIABLE2 = $( cat <<EOF <?xml version=\"1.0\" encoding='UTF-8'?> <report> <img src=\"a-vs-b.jpg\"/> <caption>Thus is a future post on Multi Line Strings in bash <date>1511</date>-<date>1512</date>.</caption> </report> EOF ) \u4f8b5: VARABLE3 = ` cat <<EOF <?xml version=\"1.0\" encoding='UTF-8'?> <report> <img src=\"a-vs-b.jpg\"/> <caption>Thus is a future post on Multi Line Strings in bash <date>1511</date>-<date>1512</date>.</caption> </report> EOF ` \u4f8b6 (\u76f4\u63a5\u5199\u5165\u6587\u4ef6): cat > heredocfile.txt <<_EOF_ I am line 1 I am line 2 I'm the last line _EOF_ # \u6d4b\u8bd5 cat heredocfile.txt # I am line 1 # I am line 2 # I'm the last line # and then, change your echo statement to include the '-e' option # which will turn on escape sequence processing: echo -e $USAGE > & 2 \u4f8b7: sudo cat > /aaaa.txt <<_EOF_ I am line 1 I am line 2 I'm the last line _EOF_ # sudo and >>: permission denied \u4f8b8: # create sudo tee /aaa.txt << EOF echo \"Hello World 20314\" EOF \u4f8b9(\u53ef\u5411\u6587\u672c\u6587\u4ef6\u8ffd\u52a0): # Append to Sudo sudo tee -a /aaa.txt << EOF echo \"This Line is appended\" EOF \u4f8b\u598210: sudo sh -c \"cat > /aaa.txt\" << \"EOT\" this text gets saved as sudo - $10 - ten dollars ... EOT cat /aaa.txt #this text gets saved as sudo - $10 - ten dollars ... \u4f8b11: cat << \"EOF\" | sudo tee /aaa.txt let 's count $one two $three four EOF cat /aaa.txt #let' s count #$one #two #$three #four \u5173\u4e8e tee > tee --help Usage: tee [ OPTION ] ... [ FILE ] ... Copy standard input to each FILE, and also to standard output. -a, --append append to the given FILEs, do not overwrite -i, --ignore-interrupts ignore interrupt signals --help display this help and exit --version output version information and exit If a FILE is -, copy again to standard output. Report tee bugs to bug-coreutils@gnu.org GNU coreutils home page: <http://www.gnu.org/software/coreutils/> General help using GNU software: <http://www.gnu.org/gethelp/> For complete documentation, run: info coreutils 'tee invocation' \u00b6","title":"\u64cd\u4f5c\u591a\u884c\u5b57\u7b26\u4e32\u53d8\u91cf"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/%E6%93%8D%E4%BD%9C%E5%A4%9A%E8%A1%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E9%87%8F/#_1","text":"e.g. \u5305\u542b\u53d8\u91cf cat > myfile.txt <<EOF this file has $variable $names $inside EOF # \u6ce8\u5165\u6587\u6863\u5230 myfile.txt cat myfile.txt #\u8f93\u5165: #this file has variable = \"ONE\" names = \"TWO\" inside = \"expanded variables\" cat > myfile.txt <<EOF this file has $variable $names $inside EOF #print out the content of myfile.txt cat myfile.txt #\u8f93\u5165: #this file has ONE TWO expanded variables","title":"\u53d8\u91cf\u7684\u57fa\u672c\u4f7f\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/%E6%93%8D%E4%BD%9C%E5%A4%9A%E8%A1%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E9%87%8F/#_2","text":"cat > myfile.txt << \"EOF\" this file has $variable $dollar $name $inside EOF cat myfile.txt #\u5f97\u5230 #this file has $variable $dollar $name $inside PS:\u5f15\u7528\u7b26\u53f7 \"EOF\" \u51b3\u5b9a\u662f\u5426\u9700\u8981\u8f93\u5165\u53d8\u91cf","title":"\u65e0\u53d8\u91cf"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/%E6%93%8D%E4%BD%9C%E5%A4%9A%E8%A1%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E9%87%8F/#2","text":"cat > myfile.txt <<EOF this file has $variable \\$dollar \\$name \\$inside EOF cat myfile.txt # \u5f97\u5230 # this file has $variable $dollar $name $inside \u8f6c\u4e49 dollar \"$\" \u7b26\u53f7,bash\u5c06\u53d6\u6d88\u53d8\u91cf\u7684\u89e3\u6790","title":"\u65e0\u53d8\u91cf \u2013 \u4f8b\u5b50 2"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/%E6%93%8D%E4%BD%9C%E5%A4%9A%E8%A1%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E9%87%8F/#_3","text":"\u4f8b1: read -d '' stringvar <<- \"_EOF_\" all the leading dollars in the $variable $name are $retained _EOF_ # \u8f93\u5165\u53d8\u91cf echo $stringvar ; # all the leading dollars in the $variable $name are $retained \u4f8b2: read -d '' help <<- \"_EOF_\" usage: up [ --level <n> | -n <levels> ][ --help ][ --version ] Report bugs to: up home page: _EOF_ \u4f8b3: VARIABLE1 = \"<?xml version=\\\"1.0\\\" encoding='UTF-8'?> <report> <img src=\" a-vs-b.jpg \"/> <caption>Thus is a future post on Multi Line Strings in bash <date>1511</date>-<date>1512</date>.</caption> </report>\" \u4f8b4: VARIABLE2 = $( cat <<EOF <?xml version=\"1.0\" encoding='UTF-8'?> <report> <img src=\"a-vs-b.jpg\"/> <caption>Thus is a future post on Multi Line Strings in bash <date>1511</date>-<date>1512</date>.</caption> </report> EOF ) \u4f8b5: VARABLE3 = ` cat <<EOF <?xml version=\"1.0\" encoding='UTF-8'?> <report> <img src=\"a-vs-b.jpg\"/> <caption>Thus is a future post on Multi Line Strings in bash <date>1511</date>-<date>1512</date>.</caption> </report> EOF ` \u4f8b6 (\u76f4\u63a5\u5199\u5165\u6587\u4ef6): cat > heredocfile.txt <<_EOF_ I am line 1 I am line 2 I'm the last line _EOF_ # \u6d4b\u8bd5 cat heredocfile.txt # I am line 1 # I am line 2 # I'm the last line # and then, change your echo statement to include the '-e' option # which will turn on escape sequence processing: echo -e $USAGE > & 2 \u4f8b7: sudo cat > /aaaa.txt <<_EOF_ I am line 1 I am line 2 I'm the last line _EOF_ # sudo and >>: permission denied \u4f8b8: # create sudo tee /aaa.txt << EOF echo \"Hello World 20314\" EOF \u4f8b9(\u53ef\u5411\u6587\u672c\u6587\u4ef6\u8ffd\u52a0): # Append to Sudo sudo tee -a /aaa.txt << EOF echo \"This Line is appended\" EOF \u4f8b\u598210: sudo sh -c \"cat > /aaa.txt\" << \"EOT\" this text gets saved as sudo - $10 - ten dollars ... EOT cat /aaa.txt #this text gets saved as sudo - $10 - ten dollars ... \u4f8b11: cat << \"EOF\" | sudo tee /aaa.txt let 's count $one two $three four EOF cat /aaa.txt #let' s count #$one #two #$three #four \u5173\u4e8e tee > tee --help Usage: tee [ OPTION ] ... [ FILE ] ... Copy standard input to each FILE, and also to standard output. -a, --append append to the given FILEs, do not overwrite -i, --ignore-interrupts ignore interrupt signals --help display this help and exit --version output version information and exit If a FILE is -, copy again to standard output. Report tee bugs to bug-coreutils@gnu.org GNU coreutils home page: <http://www.gnu.org/software/coreutils/> General help using GNU software: <http://www.gnu.org/gethelp/> For complete documentation, run: info coreutils 'tee invocation'","title":"\u5c06\u4e00\u4e2a\u591a\u884c\u6587\u672c\u8d4b\u503c\u5230\u53d8\u91cf\u91cc\u9762"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/%E6%93%8D%E4%BD%9C%E5%A4%9A%E8%A1%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E9%87%8F/#_4","text":"","title":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/shell/%E8%A7%A3%E8%AF%BBpyenv%E7%9A%84shell/","text":"#!/usr/bin/env bash set -e [ -n \" $PYENV_DEBUG \" ] && set -x program = \" ${ 0 ##*/ } \" if [[ \" $program \" = \"python\" * ]] ; then for arg ; do case \" $arg \" in -c* | -- ) break ;; */* ) if [ -f \" $arg \" ] ; then export PYENV_FILE_ARG = \" $arg \" break fi ;; esac done fi export PYENV_ROOT = \"/Users/bob/.pyenv\" exec \"/usr/local/Cellar/pyenv/1.2.18/libexec/pyenv\" exec \" $program \" \" $@ \"","title":"\u89e3\u8bfbpyenv\u7684shell"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/","text":"1 \u673a\u5668\u5b66\u4e60 \u00b6 1\u3001 cs229 2\u3001 \u7279\u5f81\u5de5\u7a0b\u5230\u5e95\u662f\u4ec0\u4e48\uff1f 3\u3001 XGBoost/GBDT\u76f8\u5173blog\u63a8\u8350 4\u3001 Ensemble_learning\u96c6\u6210\u5b66\u4e60\u7b97\u6cd5 stacking \u7b97\u6cd5 \u3000 1.1 \u6df1\u5ea6\u5b66\u4e60 \u00b6 1.1.1 \u901a\u7528 \u00b6 1\u3001 \u6df1\u5ea6\u5b66\u4e60\u6700\u5168\u4f18\u5316\u65b9\u6cd5\u603b\u7ed3\u6bd4\u8f83\uff08SGD\uff0cAdagrad\uff0cAdadelta\uff0cAdam\uff0cAdamax\uff0cNadam\uff09 2\u3001 softmax\u51fd\u6570\u8ba1\u7b97\u65f6\u5019\u4e3a\u4ec0\u4e48\u8981\u51cf\u53bb\u4e00\u4e2a\u6700\u5927\u503c\uff1f 3\u3001 \u6df1\u5ea6\u5b66\u4e60\u4e2d\u5e38\u89c1\u7684\u4f18\u5316\u65b9\u6cd5\uff08from SGD to AMSGRAD\uff09\u548c\u6b63\u5219\u5316\u6280\u5de7 4\u3001 \u566a\u58f0\u5bf9\u6bd4\u4f30\u8ba1\u7b97\u6cd5\uff0c\u4f18\u5316softmax\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u4e0d\u53ef\u7b97\u53d8\u53ef\u7b97 1.1.2 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u00b6 1\u3001 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u611f\u53d7\u91ce\u8ba1\u7b97\uff08\u8bd1\uff09 2\u3001 A Beginner's Guide To Understanding Convolutional Neural Networks \u3000\u3000 1.1.3 \u5faa\u73af\u795e\u7ecf\u7f51\u7edc \u00b6 1\u3001 \u4eba\u4eba\u90fd\u80fd\u770b\u61c2\u7684LSTM 2 \u8ba1\u7b97\u673a\u89c6\u89c9 \u00b6 1\u3001 Awesome Deep Vision (\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u5408\u96c6) 2\u3001 \u673a\u5668\u89c6\u89c9\u3001\u56fe\u50cf\u5904\u7406\u3001\u673a\u5668\u5b66\u4e60\u9886\u57df\u76f8\u5173\u4ee3\u7801\u548c\u5de5\u7a0b\u9879\u76ee\u548c\u6570\u636e\u96c6 \u96c6\u5408 2.1 Tracking \u00b6 1\u3001 \u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\uff0c\u76ee\u524d\u6709\u54ea\u4e9b\u7ecf\u5178\u7684\u76ee\u6807\u8ddf\u8e2a\u7b97\u6cd5\uff1f 2\u3001 benchmark_results (Github\u4e0a\u7684\u8d44\u6e90\u5408\u96c6\uff0c\u57fa\u672c\u4e0a\u56ca\u62ec\u4e86\u6240\u6709\u7684\u5355\u76ee\u6807\u8ddf\u8e2a\u7b97\u6cd5) 3\u3001 TBCF (Github\u4e0a\u57fa\u4e8e\u76f8\u5173\u6ee4\u6ce2\u7684\u5355\u76ee\u6807\u8ddf\u8e2a\u8d44\u6e90\u5408\u96c6) 2.2 Detection \u00b6 1\u3001 awesome-object-detection 2\u3001 \u76ee\u6807\u68c0\u6d4b\u4e2d\u7684mAP\u662f\u4ec0\u4e48\u542b\u4e49\uff1f 3\u3001 \u76ee\u6807\u68c0\u6d4b\u6280\u672f\u6f14\u8fdb 4\u3001 faster-rnn\u539f\u7406\u53ca\u6982\u5ff5\u89e3\u91ca 5\u3001 \u5bf9SPP-NET\u7684\u7406\u89e3 3 \u81ea\u7136\u8bed\u8a00\u5904\u7406 \u00b6 3.1 word2vec \u00b6 1\u3001 skip-gram\u8f83\u57fa\u7840\u7684\u7406\u89e3\u7bc7 2\u3001 GloVe\u6a21\u578b\u7684\u7406\u89e3\u7bc7 3\u3001 \u5e03\u6717\u805a\u7c7b 4\u3001 \u7406\u8bba\u7bc7 3.2 seq2seq \u00b6 1\u3001 seq2seq\u6a21\u578b\u4ecb\u7ecd 2\u3001 seq2seq\u4e2d\u7684Beam-Search\u7b97\u6cd5 3.3 \u6ce8\u610f\u529b\u673a\u5236 \u00b6 1\u3001 \u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u6ce8\u610f\u529b\u673a\u5236 2\u3001 \u6df1\u5ea6\u5b66\u4e60\u4e2d \u7684 Attention\u673a\u5236 3\u3001 Translation of Attention is all you need 4\u3001 \u795e\u7ecf\u673a\u5668\u7ffb\u8bd1 \u4e4b \u8c37\u6b4c transformer \u6a21\u578b 5\u3001 Document-transformer 4 \u7f16\u7a0b \u00b6 4.1 Python \u00b6 4.1.1 Python\u57fa\u7840 \u00b6 1\u3001 Effective Python\u793a\u4f8b\u4ee3\u7801 4.1.2 \u6df1\u5ea6\u5b66\u4e60\u6846\u67b6 \u00b6 1\u3001 https://github.com/yunjey/pytorch-tutorial 2\u3001 Pytorch\u76f8\u5173\u8d44\u6e90\u5927\u5408\u96c6 3\u3001 ubuntu16.04.3\u5b89\u88c5Bazel+\u6e90\u7801\u7f16\u8bd1\u5b89\u88c5tensorflow(CUDA9.0) 4\u3001 \u6e90\u7801\u5b89\u88c5tensorflow\u4e00\u4e9b\u7ec6\u8282\u7684\u9009\u62e9 5\u3001 bazel\u7f16\u8bd1tensorflow\u5de5\u5177\u7684\u4f7f\u7528\u65b9\u6cd5 6\u3001 TensorFlow Lite\u6a21\u578b\u751f\u6210\u4ee5\u53cabazel\u7684\u5b89\u88c5\u4f7f\u7528\u3001\u51fa\u73b0\u7684\u95ee\u9898\u53ca\u89e3\u51b3\u65b9\u6848\u6574\u5408 7\u3001 Tensorflow Lite\u4e4b\u7f16\u8bd1\u751f\u6210tflite\u6587\u4ef6\uff08\u4f7f\u7528\u6e90\u7801\u5b8c\u6210\uff09 8\u3001 tensorflow \u591aGPU\u8bad\u7ec3 9\u3001 caffe\u6a21\u578b\u53ef\u89c6\u5316 10\u3001 Pycharm\u65e0\u6cd5import tensorflow 11\u3001 Ubuntu14+caffe\u7f16\u8bd1\uff1a\u6700\u597d\u7f16\u8bd1Python2.7\u7248\u672c\uff0cPython3\u5f88\u96be\u7f16\u8bd1\u901a\u8fc7 12\u3001Pytorch\u51fa\u73b0\u7c7b\u4f3c\u4e8ecore-dump\u7684\u95ee\u9898\uff1a\u68c0\u67e5\u662f\u4e0d\u662fPytorch\u7684\u7248\u672c\u548c\u7cfb\u7edf\u7f16\u8bd1\u5668\u7248\u672c\u662f\u4e0d\u662f\u517c\u5bb9 4.2 OpenCV\u76f8\u5173 \u00b6 5 Linux\u4f7f\u7528 \u00b6 1\u3001 linux\u4fee\u6539\u78c1\u76d8\u6302\u8f7d\u76ee\u5f55 2\u3001 NextCloud: Change data directory to use another disk partition 3\u3001 linux\u4f7f\u7528LVM\u5408\u5e76\u786c\u76d8 4\u3001 linux\u591a\u4e2a\u5206\u533a\u5408\u5e76\u4e3a\u4e00\u4e2a\u5206\u533a 5\u3001 Linux\u4e2d\u5e38\u7528\u64cd\u4f5c\u547d\u4ee4","title":"\u8ba1\u7b97\u673a\u76f8\u5173\u8d44\u6e90\u6574\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#1","text":"1\u3001 cs229 2\u3001 \u7279\u5f81\u5de5\u7a0b\u5230\u5e95\u662f\u4ec0\u4e48\uff1f 3\u3001 XGBoost/GBDT\u76f8\u5173blog\u63a8\u8350 4\u3001 Ensemble_learning\u96c6\u6210\u5b66\u4e60\u7b97\u6cd5 stacking \u7b97\u6cd5","title":"1 \u673a\u5668\u5b66\u4e60"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#11","text":"","title":"1.1 \u6df1\u5ea6\u5b66\u4e60"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#111","text":"1\u3001 \u6df1\u5ea6\u5b66\u4e60\u6700\u5168\u4f18\u5316\u65b9\u6cd5\u603b\u7ed3\u6bd4\u8f83\uff08SGD\uff0cAdagrad\uff0cAdadelta\uff0cAdam\uff0cAdamax\uff0cNadam\uff09 2\u3001 softmax\u51fd\u6570\u8ba1\u7b97\u65f6\u5019\u4e3a\u4ec0\u4e48\u8981\u51cf\u53bb\u4e00\u4e2a\u6700\u5927\u503c\uff1f 3\u3001 \u6df1\u5ea6\u5b66\u4e60\u4e2d\u5e38\u89c1\u7684\u4f18\u5316\u65b9\u6cd5\uff08from SGD to AMSGRAD\uff09\u548c\u6b63\u5219\u5316\u6280\u5de7 4\u3001 \u566a\u58f0\u5bf9\u6bd4\u4f30\u8ba1\u7b97\u6cd5\uff0c\u4f18\u5316softmax\u8ba1\u7b97\u590d\u6742\u5ea6\uff0c\u4e0d\u53ef\u7b97\u53d8\u53ef\u7b97","title":"1.1.1 \u901a\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#112","text":"1\u3001 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4e2d\u7684\u611f\u53d7\u91ce\u8ba1\u7b97\uff08\u8bd1\uff09 2\u3001 A Beginner's Guide To Understanding Convolutional Neural Networks","title":"1.1.2 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#113","text":"1\u3001 \u4eba\u4eba\u90fd\u80fd\u770b\u61c2\u7684LSTM","title":"1.1.3 \u5faa\u73af\u795e\u7ecf\u7f51\u7edc"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#2","text":"1\u3001 Awesome Deep Vision (\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u5408\u96c6) 2\u3001 \u673a\u5668\u89c6\u89c9\u3001\u56fe\u50cf\u5904\u7406\u3001\u673a\u5668\u5b66\u4e60\u9886\u57df\u76f8\u5173\u4ee3\u7801\u548c\u5de5\u7a0b\u9879\u76ee\u548c\u6570\u636e\u96c6 \u96c6\u5408","title":"2 \u8ba1\u7b97\u673a\u89c6\u89c9"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#21-tracking","text":"1\u3001 \u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\uff0c\u76ee\u524d\u6709\u54ea\u4e9b\u7ecf\u5178\u7684\u76ee\u6807\u8ddf\u8e2a\u7b97\u6cd5\uff1f 2\u3001 benchmark_results (Github\u4e0a\u7684\u8d44\u6e90\u5408\u96c6\uff0c\u57fa\u672c\u4e0a\u56ca\u62ec\u4e86\u6240\u6709\u7684\u5355\u76ee\u6807\u8ddf\u8e2a\u7b97\u6cd5) 3\u3001 TBCF (Github\u4e0a\u57fa\u4e8e\u76f8\u5173\u6ee4\u6ce2\u7684\u5355\u76ee\u6807\u8ddf\u8e2a\u8d44\u6e90\u5408\u96c6)","title":"2.1 Tracking"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#22-detection","text":"1\u3001 awesome-object-detection 2\u3001 \u76ee\u6807\u68c0\u6d4b\u4e2d\u7684mAP\u662f\u4ec0\u4e48\u542b\u4e49\uff1f 3\u3001 \u76ee\u6807\u68c0\u6d4b\u6280\u672f\u6f14\u8fdb 4\u3001 faster-rnn\u539f\u7406\u53ca\u6982\u5ff5\u89e3\u91ca 5\u3001 \u5bf9SPP-NET\u7684\u7406\u89e3","title":"2.2 Detection"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#3","text":"","title":"3 \u81ea\u7136\u8bed\u8a00\u5904\u7406"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#31-word2vec","text":"1\u3001 skip-gram\u8f83\u57fa\u7840\u7684\u7406\u89e3\u7bc7 2\u3001 GloVe\u6a21\u578b\u7684\u7406\u89e3\u7bc7 3\u3001 \u5e03\u6717\u805a\u7c7b 4\u3001 \u7406\u8bba\u7bc7","title":"3.1 word2vec"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#32-seq2seq","text":"1\u3001 seq2seq\u6a21\u578b\u4ecb\u7ecd 2\u3001 seq2seq\u4e2d\u7684Beam-Search\u7b97\u6cd5","title":"3.2 seq2seq"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#33","text":"1\u3001 \u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u6ce8\u610f\u529b\u673a\u5236 2\u3001 \u6df1\u5ea6\u5b66\u4e60\u4e2d \u7684 Attention\u673a\u5236 3\u3001 Translation of Attention is all you need 4\u3001 \u795e\u7ecf\u673a\u5668\u7ffb\u8bd1 \u4e4b \u8c37\u6b4c transformer \u6a21\u578b 5\u3001 Document-transformer","title":"3.3 \u6ce8\u610f\u529b\u673a\u5236"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#4","text":"","title":"4 \u7f16\u7a0b"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#41-python","text":"","title":"4.1 Python"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#411-python","text":"1\u3001 Effective Python\u793a\u4f8b\u4ee3\u7801","title":"4.1.1 Python\u57fa\u7840"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#412","text":"1\u3001 https://github.com/yunjey/pytorch-tutorial 2\u3001 Pytorch\u76f8\u5173\u8d44\u6e90\u5927\u5408\u96c6 3\u3001 ubuntu16.04.3\u5b89\u88c5Bazel+\u6e90\u7801\u7f16\u8bd1\u5b89\u88c5tensorflow(CUDA9.0) 4\u3001 \u6e90\u7801\u5b89\u88c5tensorflow\u4e00\u4e9b\u7ec6\u8282\u7684\u9009\u62e9 5\u3001 bazel\u7f16\u8bd1tensorflow\u5de5\u5177\u7684\u4f7f\u7528\u65b9\u6cd5 6\u3001 TensorFlow Lite\u6a21\u578b\u751f\u6210\u4ee5\u53cabazel\u7684\u5b89\u88c5\u4f7f\u7528\u3001\u51fa\u73b0\u7684\u95ee\u9898\u53ca\u89e3\u51b3\u65b9\u6848\u6574\u5408 7\u3001 Tensorflow Lite\u4e4b\u7f16\u8bd1\u751f\u6210tflite\u6587\u4ef6\uff08\u4f7f\u7528\u6e90\u7801\u5b8c\u6210\uff09 8\u3001 tensorflow \u591aGPU\u8bad\u7ec3 9\u3001 caffe\u6a21\u578b\u53ef\u89c6\u5316 10\u3001 Pycharm\u65e0\u6cd5import tensorflow 11\u3001 Ubuntu14+caffe\u7f16\u8bd1\uff1a\u6700\u597d\u7f16\u8bd1Python2.7\u7248\u672c\uff0cPython3\u5f88\u96be\u7f16\u8bd1\u901a\u8fc7 12\u3001Pytorch\u51fa\u73b0\u7c7b\u4f3c\u4e8ecore-dump\u7684\u95ee\u9898\uff1a\u68c0\u67e5\u662f\u4e0d\u662fPytorch\u7684\u7248\u672c\u548c\u7cfb\u7edf\u7f16\u8bd1\u5668\u7248\u672c\u662f\u4e0d\u662f\u517c\u5bb9","title":"4.1.2 \u6df1\u5ea6\u5b66\u4e60\u6846\u67b6"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#42-opencv","text":"","title":"4.2 OpenCV\u76f8\u5173"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%85%B6%E4%BB%96/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9B%B8%E5%85%B3%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/#5-linux","text":"1\u3001 linux\u4fee\u6539\u78c1\u76d8\u6302\u8f7d\u76ee\u5f55 2\u3001 NextCloud: Change data directory to use another disk partition 3\u3001 linux\u4f7f\u7528LVM\u5408\u5e76\u786c\u76d8 4\u3001 linux\u591a\u4e2a\u5206\u533a\u5408\u5e76\u4e3a\u4e00\u4e2a\u5206\u533a 5\u3001 Linux\u4e2d\u5e38\u7528\u64cd\u4f5c\u547d\u4ee4","title":"5 Linux\u4f7f\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%89%8D%E7%AB%AF/javascript%E4%B8%AD%E7%9A%84this/","text":"this\u662f\u6c38\u8fdc\u4e0d\u4f1a\u5ef6\u4f5c\u7528\u57df\u94fe\u6216\u539f\u578b\u94fe\u51fa\u73b0\u4e00\u4e2a\u201c\u67e5\u627e\u201d\u7684\u8fc7\u7a0b\u7684\uff0c\u53ea\u4f1a\u5728\u51fd\u6570\u8c03\u7528\u65f6\u5c31\u5b8c\u5168\u786e\u8ba4 \u53ea\u67095\u79cd\u60c5\u51b5: ()=>(){console.log(this);} \u7bad\u5934\u51fd\u6570\u5728\u8bbe\u8ba1\u4e2d\u4f7f\u7528\u7684\u662fLexical this\uff0c\u5373\u8fd9\u4e2a\u51fd\u6570\u88ab\u521b\u5efa\u65f6\u7684this\u5c31\u662f\u51fd\u6570\u5185\u90e8\u7684this. \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c \u8fd9\u4e2a\u51fd\u6570\u521b\u5efa\u65f6\u5e76\u4e0d\u662f\u4e00\u4e2a\u8bfb\u4ee3\u7801\u7684\u4eba\u8089\u773c\u80fd\u770b\u5230\u8fd9\u4e2a\u51fd\u6570\u7684\u65f6\u5019 \uff0c\u5f88\u591a\u4eba\u6709\u8fd9\u6837\u7684\u8bef\u89e3\uff0c\u6bd4\u5982\u8fd9\u6837\u7684\u4ee3\u7801\uff1a function printThis () { let print = () => console . log ( this ); print (); } printThis . call ([ 1 ]); printThis . call ([ 2 ]); \u6709\u4e9b\u4eba\u4f1a\u7406\u89e3\u90fd\u4e00\u6837\uff0c\u8f93\u51fa\u7684\u662fWindow\uff0c\u56e0\u4e3a\u770b\u5230print\u51fd\u6570\u7684\u65f6\u5019\u662f\u9876\u7ea7\u4f5c\u7528\u57df\u3002\u4f46\u5176\u5b9eprint\u51fd\u6570\u662f\u5728printThis\u88ab\u8c03\u7528\u7684\u65f6\u5019\u624d\u4f1a\u88ab\u521b\u5efa\u7684\uff0c\u800cprintThis\u7684this\u7531\u5916\u90e8\u7684call\u51b3\u5b9a\u7740\uff0c\u6240\u4ee5\u8f93\u51fa\u81ea\u7136\u662f[1]\u548c[2] function f(){console.log(this);} \u8fd9\u79cd\u51fd\u6570\u76f4\u63a5\u8c03\u7528(Function Invocation Pattern)\u60c5\u51b5\u7684\u8c03\u7528, f\u4f5c\u4e3a\u72ec\u7acb\u7684\u53d8\u91cf\u4f7f\u7528 ,\u800c\u4e0d\u662f\u5c5e\u6027, this\u6c38\u8fdc\u90fd\u662f\u5168\u5c40\u5bf9\u8c61. foo.bar()\u7684\u8c03\u7528\u65b9\u5f0f(Method Invocation Pattern),\u8fd9\u79cd\u5f62\u5f0f\u4e00\u822c\u6709 . \u6216 [] ,this\u4e00\u5b9a\u662f . [] \u524d\u9762\u7684\u5bf9\u8c61. new foo() \u8c03\u7528\u65b9\u5f0f(Constructor Pattern),\u51fd\u6570\u5185\u90e8\u7684this\u4e00\u5b9a\u662fnew\u8fd4\u56de\u7684\u8fd9\u4e2a\u5bf9\u8c61. foo.call(thisObj),foo.apply(thisObj) \u8c03\u7528\u65b9\u5f0f(Apply Pattern),\u8fd9\u79cd\u60c5\u51b5this\u4e00\u5b9a\u662fcall\u6216\u662fapply\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570thisObj,\u5982\u679cthisObj\u4e3anull\u6216\u662fundefined,\u5219this\u4e3a\u5168\u5c40\u5bf9\u8c61( \u56e0\u4e3athis\u4e0d\u80fd\u4e3anull\u6216undefined ) call\u6216apply\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u5982\u679c\u4e3anull\u6216undefined\uff0c\u9ed8\u8ba4\u662f\u53d8\u6210global\u5bf9\u8c61\uff0c\u5728\u4e25\u683c\u6a21\u5f0f\u4e0b\u4e0d\u4f1a\u53d1\u751f\u8fd9\u4e00\u8f6c\u6362\u3002???","title":"Javascript\u4e2d\u7684this"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%B0%8F%E4%BC%97%E8%AF%AD%E8%A8%80/Crystal%E8%AF%AD%E8%A8%80%E5%AE%89%E8%A3%85/","text":"\u5173\u4e8ecrystal\u8bed\u8a00\u7684\u4e00\u4e9b\u8bb0\u5f55 brew \u5b89\u88c5\u65f6\u663e\u793a\u7684\u4f9d\u8d56 \u00b6 brew info crystal crystal: stable 0 .31.1 ( bottled ) , HEAD Fast and statically typed, compiled language with Ruby-like syntax https://crystal-lang.org/ Not installed From: https://mirrors.ustc.edu.cn/homebrew-core.git/Formula/crystal.rb == > Dependencies Build: autoconf \u2714, automake \u2714, libatomic_ops \u2718, libtool \u2714 Required: gmp \u2714, libevent \u2714, libyaml \u2718, llvm@8 \u2718, pcre \u2714, pkg-config \u2714 == > Options --HEAD Install HEAD version == > Analytics install: 954 ( 30 days ) , 5 ,434 ( 90 days ) , 20 ,040 ( 365 days ) install_on_request: 880 ( 30 days ) , 4 ,978 ( 90 days ) , 18 ,284 ( 365 days ) build_error: 0 ( 30 days ) libssl\u7684\u95ee\u9898 \u00b6 crystal run xxx.cr \u7684\u65f6\u5019\u663e\u793a cr build httpd.cr ld: library not found for -lssl ( this usually means you need to install the development package for libssl ) clang: error: linker command failed with exit code 1 ( use -v to see invocation ) Error: execution of command failed with code: 1 : ` cc \" ${ @ } \" -o '/Users/bob/Develop/practice/crystal/scratch/httpd' -rdynamic ` command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libssl || printf %s '-lssl -lcrypto' ` ` command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libcrypto || printf %s '-lcrypto' ` -lz -lpcre /usr/local/Cellar/crystal/0.31.1/embedded/lib/libgc.a -lpthread /usr/local/Cellar/crystal/0.31.1/src/ext/libcrystal.a -levent -liconv -ldl -L/usr/local/Cellar/crystal/0.31.1/embedded/lib -L/usr/lib -L/usr/local/lib ` \u89e3\u51b3: ln -s /usr/local/opt/openssl/lib/libcrypto.dylib /usr/local/lib ln -s /usr/local/Cellar/openssl/1.0.2q/lib/libssl.dylib /usr/local/lib/ \u7f16\u8bd1\u65f6static\u7684\u95ee\u9898 \u00b6 crystal build hello.cr --release --link-flags -static ld: library not found for -lcrt0.o ( this usually means you need to install the development package for libcrt0.o ) \u67e5\u5f97\u7b54\u6848 This option will not work on Mac OS X unless all libraries (including libgcc.a) have also been compiled with -static. Since neither a static version of libSystem.dylib nor crt0.o are provided, this option is not useful to most people. -static \u5728macOS\u4e0b\u4e0d\u652f\u6301,\u4e0d\u8981\u4f7f\u7528. Amber\u8fd0\u884c\u65f6\u95ee\u9898 \u00b6 amber\u662fcrystal\u4e0b\u7684web\u6846\u67b6,\u5bf9\u6807ruby\u4e0b\u7684rails. LIBRARY_PATH\u548cLD_LIBRARY_PATH\u73af\u5883\u53d8\u91cf ld: library not found for -lssl ( this usually means you need to install the development package for libssl ) clang: error: linker command failed with exit code 1 ( use -v to see invocation ) Error: execution of command failed with code: 1 : ` cc \" ${ @ } \" -o '/Users/bob/develop/practice/crystal/pet-tracker/bin/pet-tracker' -rdynamic -lyaml -lz ` command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libssl || printf %s '-lssl -lcrypto' ` ` command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libcrypto || printf %s '-lcrypto' ` -lpcre /usr/local/Cellar/crystal/0.31.1/embedded/lib/libgc.a -lpthread /usr/local/Cellar/crystal/0.31.1/src/ext/libcrystal.a -levent -liconv -ldl -L/usr/local/Cellar/crystal/0.31.1/embedded/lib -L/usr/lib -L/usr/local/lib ` 07 :39:14 Watch run | ( INFO ) Compile time errors detected, exiting... \u89e3\u51b3 export LIBRARY_PATH = /usr/local/Cellar/openssl/1.0.2s/lib: $LIBRARY_PATH","title":"Crystal\u8bed\u8a00\u5b89\u88c5"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%B0%8F%E4%BC%97%E8%AF%AD%E8%A8%80/Crystal%E8%AF%AD%E8%A8%80%E5%AE%89%E8%A3%85/#brew","text":"brew info crystal crystal: stable 0 .31.1 ( bottled ) , HEAD Fast and statically typed, compiled language with Ruby-like syntax https://crystal-lang.org/ Not installed From: https://mirrors.ustc.edu.cn/homebrew-core.git/Formula/crystal.rb == > Dependencies Build: autoconf \u2714, automake \u2714, libatomic_ops \u2718, libtool \u2714 Required: gmp \u2714, libevent \u2714, libyaml \u2718, llvm@8 \u2718, pcre \u2714, pkg-config \u2714 == > Options --HEAD Install HEAD version == > Analytics install: 954 ( 30 days ) , 5 ,434 ( 90 days ) , 20 ,040 ( 365 days ) install_on_request: 880 ( 30 days ) , 4 ,978 ( 90 days ) , 18 ,284 ( 365 days ) build_error: 0 ( 30 days )","title":"brew \u5b89\u88c5\u65f6\u663e\u793a\u7684\u4f9d\u8d56"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%B0%8F%E4%BC%97%E8%AF%AD%E8%A8%80/Crystal%E8%AF%AD%E8%A8%80%E5%AE%89%E8%A3%85/#libssl","text":"crystal run xxx.cr \u7684\u65f6\u5019\u663e\u793a cr build httpd.cr ld: library not found for -lssl ( this usually means you need to install the development package for libssl ) clang: error: linker command failed with exit code 1 ( use -v to see invocation ) Error: execution of command failed with code: 1 : ` cc \" ${ @ } \" -o '/Users/bob/Develop/practice/crystal/scratch/httpd' -rdynamic ` command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libssl || printf %s '-lssl -lcrypto' ` ` command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libcrypto || printf %s '-lcrypto' ` -lz -lpcre /usr/local/Cellar/crystal/0.31.1/embedded/lib/libgc.a -lpthread /usr/local/Cellar/crystal/0.31.1/src/ext/libcrystal.a -levent -liconv -ldl -L/usr/local/Cellar/crystal/0.31.1/embedded/lib -L/usr/lib -L/usr/local/lib ` \u89e3\u51b3: ln -s /usr/local/opt/openssl/lib/libcrypto.dylib /usr/local/lib ln -s /usr/local/Cellar/openssl/1.0.2q/lib/libssl.dylib /usr/local/lib/","title":"libssl\u7684\u95ee\u9898"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%B0%8F%E4%BC%97%E8%AF%AD%E8%A8%80/Crystal%E8%AF%AD%E8%A8%80%E5%AE%89%E8%A3%85/#static","text":"crystal build hello.cr --release --link-flags -static ld: library not found for -lcrt0.o ( this usually means you need to install the development package for libcrt0.o ) \u67e5\u5f97\u7b54\u6848 This option will not work on Mac OS X unless all libraries (including libgcc.a) have also been compiled with -static. Since neither a static version of libSystem.dylib nor crt0.o are provided, this option is not useful to most people. -static \u5728macOS\u4e0b\u4e0d\u652f\u6301,\u4e0d\u8981\u4f7f\u7528.","title":"\u7f16\u8bd1\u65f6static\u7684\u95ee\u9898"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%B0%8F%E4%BC%97%E8%AF%AD%E8%A8%80/Crystal%E8%AF%AD%E8%A8%80%E5%AE%89%E8%A3%85/#amber","text":"amber\u662fcrystal\u4e0b\u7684web\u6846\u67b6,\u5bf9\u6807ruby\u4e0b\u7684rails. LIBRARY_PATH\u548cLD_LIBRARY_PATH\u73af\u5883\u53d8\u91cf ld: library not found for -lssl ( this usually means you need to install the development package for libssl ) clang: error: linker command failed with exit code 1 ( use -v to see invocation ) Error: execution of command failed with code: 1 : ` cc \" ${ @ } \" -o '/Users/bob/develop/practice/crystal/pet-tracker/bin/pet-tracker' -rdynamic -lyaml -lz ` command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libssl || printf %s '-lssl -lcrypto' ` ` command -v pkg-config > /dev/null && pkg-config --libs --silence-errors libcrypto || printf %s '-lcrypto' ` -lpcre /usr/local/Cellar/crystal/0.31.1/embedded/lib/libgc.a -lpthread /usr/local/Cellar/crystal/0.31.1/src/ext/libcrystal.a -levent -liconv -ldl -L/usr/local/Cellar/crystal/0.31.1/embedded/lib -L/usr/lib -L/usr/local/lib ` 07 :39:14 Watch run | ( INFO ) Compile time errors detected, exiting... \u89e3\u51b3 export LIBRARY_PATH = /usr/local/Cellar/openssl/1.0.2s/lib: $LIBRARY_PATH","title":"Amber\u8fd0\u884c\u65f6\u95ee\u9898"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/Keyboard_Maestro%E7%9B%B8%E5%85%B3/","text":"Keyboard Maestro\u76f8\u5173 \u00b6 \u8d44\u6e90 \u00b6 Full-featured library for writing Alfred workflows https://github.com/deanishe/alfred-workflow http://www.deanishe.net/alfred-workflow/index.html \u53d8\u91cf\u5f15\u7528\u65b9\u5f0f \u00b6 %Variable%blogPostPath% \u5982\u4f55\u6307\u5b9a\u8fd0\u884c\u811a\u672c\u7684\u6570\u636e\u7f16\u7801 \u00b6 \u811a\u672c\u8fd0\u884c\u524d\u589e\u52a0 export LC_CTYPE = UTF-8 \u5982\u4f55\u8f93\u5165\u4e00\u4e2a\u53c2\u6570 \u00b6 Prompt \u8f93\u5165\u7684\u53c2\u6570\u5982\u4f55\u4f20\u9012\u81f3\u6267\u884c\u7684\u811a\u672c\u4e2d \u00b6 Python: Ruby: \u53d8\u91cf\u4e0e\u73af\u5883\u53d8\u91cf \u00b6 KM\u4e2d\u7684\u5b9a\u4e49\u7684\u53d8\u91cf\u53ef\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u83b7\u53d6,\u73af\u5883\u53d8\u91cf\u662f\u5728\u53d8\u91cf\u524d\u589e\u52a0\u524d\u7f00 KMVAR_\u53d8\u91cf\u540d","title":"Keyboard Maestro\u76f8\u5173"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/Keyboard_Maestro%E7%9B%B8%E5%85%B3/#keyboard-maestro","text":"","title":"Keyboard Maestro\u76f8\u5173"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/Keyboard_Maestro%E7%9B%B8%E5%85%B3/#_1","text":"Full-featured library for writing Alfred workflows https://github.com/deanishe/alfred-workflow http://www.deanishe.net/alfred-workflow/index.html","title":"\u8d44\u6e90"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/Keyboard_Maestro%E7%9B%B8%E5%85%B3/#_2","text":"%Variable%blogPostPath%","title":"\u53d8\u91cf\u5f15\u7528\u65b9\u5f0f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/Keyboard_Maestro%E7%9B%B8%E5%85%B3/#_3","text":"\u811a\u672c\u8fd0\u884c\u524d\u589e\u52a0 export LC_CTYPE = UTF-8","title":"\u5982\u4f55\u6307\u5b9a\u8fd0\u884c\u811a\u672c\u7684\u6570\u636e\u7f16\u7801"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/Keyboard_Maestro%E7%9B%B8%E5%85%B3/#_4","text":"Prompt","title":"\u5982\u4f55\u8f93\u5165\u4e00\u4e2a\u53c2\u6570"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/Keyboard_Maestro%E7%9B%B8%E5%85%B3/#_5","text":"Python: Ruby:","title":"\u8f93\u5165\u7684\u53c2\u6570\u5982\u4f55\u4f20\u9012\u81f3\u6267\u884c\u7684\u811a\u672c\u4e2d"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/Keyboard_Maestro%E7%9B%B8%E5%85%B3/#_6","text":"KM\u4e2d\u7684\u5b9a\u4e49\u7684\u53d8\u91cf\u53ef\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u83b7\u53d6,\u73af\u5883\u53d8\u91cf\u662f\u5728\u53d8\u91cf\u524d\u589e\u52a0\u524d\u7f00 KMVAR_\u53d8\u91cf\u540d","title":"\u53d8\u91cf\u4e0e\u73af\u5883\u53d8\u91cf"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/alfred%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/","text":"\u73af\u5883\u53d8\u91cf\u6700\u540e\u5b9a\u4e49\u5728info.plist\u4e2d arg and vars\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf,\u53ef\u4ee5\u540e\u7eed\u7684script\u4e2d\u4ee5 $var\u7684\u65b9\u5f0f\u83b7\u53d6,\u975e\u811a\u672c\u4e2d\u4ee5{var:varname}\u65b9\u5f0f\u83b7\u53d6 \u7ec8\u7aef\u4e2d\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\u7684\u8bdd,\u53ef\u4ee5\u5728\u524d\u9762\u63a5\u4e00\u4e2arun script\u7ec4\u4ef6,\u8fd9\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u5f97\u5230\u5168\u5c40\u5b9a\u4e49\u7684\u53d8\u91cf,\u7136\u540e\u8fde\u63a5\u5230\u7684\u7ec8\u7aef\u7ec4\u4ef6\u4e2d\u5c31\u53ef\u4ee5\u7528{query}\u5f97\u5230\u8fd9\u4e2a\u503c . \u00b6","title":"Alfred\u73af\u5883\u53d8\u91cf\u4f7f\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/alfred%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%BD%BF%E7%94%A8/#_1","text":"","title":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/togglecapslock%E5%BC%80%E5%85%B3%E6%8E%A7%E5%88%B6asdw%E6%96%B9%E5%90%91%E9%94%AE/","text":"toggle capslock\u5f00\u5173,\u63a7\u5236asdw\u65b9\u5411\u952e \u00b6 { \"description\" : \"WASD arrow Keys toggled by Capslock\" , \"manipulators\" : [ { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_unless\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"caps_lock\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"set_variable\" : { \"name\" : \"wasd_arrow_keys_mode\" , \"value\" : 1 } } ], \"type\" : \"basic\" }, { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_if\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"caps_lock\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"set_variable\" : { \"name\" : \"wasd_arrow_keys_mode\" , \"value\" : 0 } } ], \"type\" : \"basic\" }, { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_if\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"a\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"key_code\" : \"left_arrow\" } ], \"type\" : \"basic\" }, { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_if\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"s\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"key_code\" : \"down_arrow\" } ], \"type\" : \"basic\" }, { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_if\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"w\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"key_code\" : \"up_arrow\" } ], \"type\" : \"basic\" }, { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_if\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"d\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"key_code\" : \"right_arrow\" } ], \"type\" : \"basic\" } ] }","title":"Togglecapslock\u5f00\u5173\u63a7\u5236asdw\u65b9\u5411\u952e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7/togglecapslock%E5%BC%80%E5%85%B3%E6%8E%A7%E5%88%B6asdw%E6%96%B9%E5%90%91%E9%94%AE/#toggle-capslockasdw","text":"{ \"description\" : \"WASD arrow Keys toggled by Capslock\" , \"manipulators\" : [ { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_unless\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"caps_lock\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"set_variable\" : { \"name\" : \"wasd_arrow_keys_mode\" , \"value\" : 1 } } ], \"type\" : \"basic\" }, { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_if\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"caps_lock\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"set_variable\" : { \"name\" : \"wasd_arrow_keys_mode\" , \"value\" : 0 } } ], \"type\" : \"basic\" }, { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_if\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"a\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"key_code\" : \"left_arrow\" } ], \"type\" : \"basic\" }, { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_if\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"s\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"key_code\" : \"down_arrow\" } ], \"type\" : \"basic\" }, { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_if\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"w\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"key_code\" : \"up_arrow\" } ], \"type\" : \"basic\" }, { \"conditions\" : [ { \"name\" : \"wasd_arrow_keys_mode\" , \"type\" : \"variable_if\" , \"value\" : 1 } ], \"from\" : { \"key_code\" : \"d\" , \"modifiers\" : { \"optional\" : [ \"any\" ] } }, \"to\" : [ { \"key_code\" : \"right_arrow\" } ], \"type\" : \"basic\" } ] }","title":"toggle capslock\u5f00\u5173,\u63a7\u5236asdw\u65b9\u5411\u952e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","text":"#/bin/sh #\u68c0\u6d4bmysql server\u662f\u5426\u6b63\u5e38\u63d0\u4f9b\u670d\u52a1 mysqladmin -u sky -ppwd -h localhost ping #\u83b7\u53d6mysql\u5f53\u524d\u7684\u51e0\u4e2a\u72b6\u6001\u503c mysqladmin -u sky -ppwd -h localhost status #\u83b7\u53d6\u6570\u636e\u5e93\u5f53\u524d\u7684\u8fde\u63a5\u4fe1\u606f mysqladmin -u sky -ppwd -h localhost processlist #\u83b7\u53d6\u5f53\u524d\u6570\u636e\u5e93\u7684\u8fde\u63a5\u6570 mysql -u root -p123456 -BNe \"select host,count(host) from processlist group by host;\" information_schema #\u663e\u793amysql\u7684uptime mysql -e \"SHOW STATUS LIKE '%uptime%'\" | awk '/ptime/{ calc = $NF / 3600;print $(NF-1), calc\"Hour\" }' #\u67e5\u770b\u6570\u636e\u5e93\u7684\u5927\u5c0f mysql -u root -p123456-e 'select table_schema,round(sum(data_length+index_length)/1024/1024,4) from information_schema.tables group by table_schema;' #\u67e5\u770b\u67d0\u4e2a\u8868\u7684\u5217\u4fe1\u606f mysql -u <user> --password = <password> -e \"SHOW COLUMNS FROM <table>\" <database> | awk '{print $1}' | tr \"\\n\" \",\" | sed 's/,$//g' #\u6267\u884cmysql\u811a\u672c mysql -u user-name -p password < script.sql #mysql dump\u6570\u636e\u5bfc\u51fa mysqldump -uroot -T/tmp/mysqldump test test_outfile --fields-enclosed-by = \\\" --fields-terminated-by = , #mysql\u6570\u636e\u5bfc\u5165 mysqlimport --user = name --password = pwd test --fields-enclosed-by = \\\" --fields-terminated-by = , /tmp/test_outfile.txt LOAD DATA INFILE '/tmp/test_outfile.txt' INTO TABLE test_outfile FIELDS TERMINATED BY '\"' ENCLOSED BY ',' ; #mysql\u8fdb\u7a0b\u76d1\u63a7 ps -ef | grep \"mysqld_safe\" | grep -v \"grep\" ps -ef | grep \"mysqld\" | grep -v \"mysqld_safe\" | grep -v \"grep\" #\u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u7684\u72b6\u6001 mysql -u root -p123456 -e 'show status' #mysqlcheck \u5de5\u5177\u7a0b\u5e8f\u53ef\u4ee5\u68c0\u67e5(check),\u4fee \u590d( repair),\u5206 \u6790( analyze)\u548c\u4f18\u5316(optimize)MySQL Server \u4e2d\u7684\u8868 mysqlcheck -u root -p123456 --all-databases #mysql qps\u67e5\u8be2 QPS = Questions(or Queries) / Seconds mysql -u root -p123456 -e 'SHOW /*!50000 GLOBAL */ STATUS LIKE \"Questions\"' mysql -u root -p123456 -e 'SHOW /*!50000 GLOBAL */ STATUS LIKE \"Queries\"' #mysql Key Buffer \u547d\u4e2d\u7387 key_buffer_read_hits = (1 - Key_reads / Key_read_requests) * 100% key_buffer_write_hits= (1 - Key_writes / Key_write_requests) * 100% mysql -u root -p123456 -e 'SHOW /*!50000 GLOBAL */ STATUS LIKE \"Key%\"' #mysql Innodb Buffer \u547d\u4e2d\u7387 innodb_buffer_read_hits=(1-Innodb_buffer_pool_reads/Innodb_buffer_pool_read_requests) * 100% mysql -u root -p123456 -e 'SHOW /*!50000 GLOBAL */ STATUS LIKE \"Innodb_buffer_pool_read%\"' #mysql Query Cache \u547d\u4e2d\u7387 Query_cache_hits= (Qcache_hits / (Qcache_hits + Qcache_inserts)) * 100% mysql -u root -p123456 -e 'SHOW /*!50000 GLOBAL */ STATUS LIKE \"Qcache%\"' #mysql Table Cache \u72b6\u6001\u91cf mysql -u root -p123456 -e 'SHOW /*!50000 GLOBAL */ STATUS LIKE \"Open%\"' #mysql Thread Cache \u547d\u4e2d\u7387 Thread_cache_hits = (1 - Threads_created / Connections) * 100% \u6b63\u5e38\u6765\u8bf4,Thread Cache \u547d\u4e2d\u7387\u8981\u5728 90% \u4ee5\u4e0a\u624d\u7b97\u6bd4\u8f83\u5408\u7406\u3002 mysql -u root -p123456 -e 'SHOW /*!50000 GLOBAL */ STATUS LIKE \"Thread%\"' #mysql \u9501\u5b9a\u72b6\u6001:\u9501\u5b9a\u72b6\u6001\u5305\u62ec\u8868\u9501\u548c\u884c\u9501\u4e24\u79cd,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7cfb\u7edf\u72b6\u6001\u53d8\u91cf\u83b7\u5f97\u9501\u5b9a\u603b\u6b21\u6570,\u9501\u5b9a\u9020\u6210\u5176\u4ed6\u7ebf\u7a0b\u7b49\u5f85\u7684\u6b21\u6570,\u4ee5\u53ca\u9501\u5b9a\u7b49\u5f85\u65f6\u95f4\u4fe1\u606f mysql -u root -p123456 -e 'SHOW /*!50000 GLOBAL */ STATUS LIKE \"%lock%\"' #mysql \u590d\u5236\u5ef6\u65f6\u91cf \u5728slave\u8282\u70b9\u6267\u884c mysql -u root -p123456 -e 'SHOW SLAVE STATUS' #mysql Tmp table \u72b6\u51b5 Tmp Table \u7684\u72b6\u51b5\u4e3b\u8981\u662f\u7528\u4e8e\u76d1\u63a7 MySQL \u4f7f\u7528\u4e34\u65f6\u8868\u7684\u91cf\u662f\u5426\u8fc7\u591a,\u662f\u5426\u6709\u4e34\u65f6\u8868\u8fc7\u5927\u800c\u4e0d\u5f97\u4e0d\u4ece\u5185\u5b58\u4e2d\u6362\u51fa\u5230\u78c1\u76d8\u6587\u4ef6\u4e0a mysql -u root -p123456 -e 'SHOW /*!50000 GLOBAL */ STATUS LIKE \"Created_tmp%\"' #mysql Binlog Cache \u4f7f\u7528\u72b6\u51b5:Binlog Cache \u7528\u4e8e\u5b58\u653e\u8fd8\u672a\u5199\u5165\u78c1\u76d8\u7684 Binlog \u4fe1 \u606f \u3002 mysql -u root -p123456 -e 'SHOW /*!50000 GLOBAL */ STATUS LIKE \"Binlog_cache%\"' #mysql nnodb_log_waits \u91cf:Innodb_log_waits \u72b6\u6001\u53d8\u91cf\u76f4\u63a5\u53cd\u5e94\u51fa Innodb Log Buffer \u7a7a\u95f4\u4e0d\u8db3\u9020\u6210\u7b49\u5f85\u7684\u6b21\u6570 mysql -u root -p123456 -e 'SHOW /*!50000 GLOBAL */ STATUS LIKE \"Innodb_log_waits'","title":"MySQL\u5e38\u7528\u547d\u4ee4"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql%E4%B8%ADjoin%E7%9A%84%E5%8C%BA%E5%88%AB/","text":"","title":"Mysql\u4e2djoin\u7684\u533a\u522b"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/","text":"\u6bd4\u8f83\u6709\u7528\u7684\u793a\u4f8b \u00b6 \u5982\u4f55\u83b7\u53d6\u4e00\u884c\u4e2d\u6700\u540e\u4e00\u4e2a\u5339\u914d xxx(?!xxx) \u5176\u5b9e\u5c31\u662f\u73af\u89c6\u7684\u5e94\u7528,\u5c31\u662fxxx\u540e\u9762\u4e0d\u80fd\u518d\u6709xxx\u7684\u5339\u914d\u4e86 \u5b66\u4e60\u6b63\u5219\u5148\u4e86\u89e3\u8fd9\u51e0\u4e2a\u6982\u5ff5 \u00b6 \u4efb\u610f\u5b57\u7b26 . \u4efb\u610f\u5b57\u7b26\u4f46\u4e0d\u5305\u62ec\u6362\u884c [\\s\\S] \u5339\u914d\u4efb\u610f\u5b57\u7b26.\u8ddf . \u7684\u533a\u522b\u5c31\u662f\u591a\u4e86\u6362\u884c \\s \u7a7a\u683c,tab,\u6362\u884c \\S (\u5927\u5199S)\u662f \\s \u7684\u53cd\u4e49,\u9664\u4e86\\s\u7684\u4e09\u4e2a\u4ee5\u5916\u7684\u5176\u4ed6\u5b57\u7b26 \u5339\u914d>=0 * \u5339\u914d>=1 + \u5339\u914d 0 or 1 ? /https?/ \u5339\u914d https (\u4e00\u4e2as) \u6216 http (0\u4e2as) >\u975e\u8d2a\u5a6a\u6a21\u5f0f ,\u5e94\u8be5\u53eb\u6700\u5c0f\u5339\u914d\u66f4\u5bb9\u6613\u7406\u89e3 > >\u6709\u95ee\u53f7\u5c31\u662f\u6700\u5c0f\u8303\u56f4\u5185\u5339\u914d,\u53cd\u4e4b\u5c31\u6700\u5927\u8303\u56f4\u5185\u5339\u914d > >`<div>a</div><div>b</div>` > >/<div>(.*?)</div>/ > >\u52a0?\u53f7\u5c31\u662f2\u4e2a\u5339\u914d,\u4e0d\u52a0?\u5339\u914d\u6574\u4e2a\u5b57\u7b26\u4e32 \u8f6c\u4e49 \\ [] \u5355\u5b57\u7b26\u53d6\u4e00\u4e2a,[abc]\u4f1a\u5339\u914d a\u6216b\u6216c [0-9],[z-zA-Z] ^ \u5b57\u7b26\u5f00\u59cb ^ \u5982\u679c\u5728 [] \u91cc,\u4ee3\u8868 \u975e ,\u8868\u793a\u5339\u914d\u4e0d\u5728\u62ec\u53f7\u91cc\u7684\u5b57\u7b26 $ \u5b57\u7b26\u4e32\u7ed3\u675f \u5faa\u73af\u6b21\u6570 {n1,n2} \u4e0d\u592a\u660e\u767d? [0-9]{1,3} \u8868\u793a\u57280-9\u7684\u8303\u56f4\u91cc\u9762\u5faa\u73af1\u4e2a\u30012\u4e2a\u6216\u80053\u4e2a\uff0c\u53ef\u80fd\u7ed3\u679c\u67095\u300120\u3001415\u7b49\u3002 \u5982\u679c\u5faa\u73af\u6307\u5b9a\u6b21\u6570\uff0c\u59823\u6b21\uff0c\u5219 {3,3} \u53ef\u4ee5\u7b80\u5199\u6210 {3} \u3002 \u5982\u679c\u521a\u597d\u9700\u8981\u5339\u914d\u5b57\u7b26 {1} \uff0c\u5219\u6b63\u5219\u9700\u8981\u7ed9 { \u8fdb\u884c\u8f6c\u4e49\uff0c\u5f97\u5230 \\{1} \u7684\u6b63\u5219\u3002 \u5982\u679c {} \u4e2d\u95f4\u4e0d\u662f\u6570\u5b57\uff0c\u5219 {} \u672c\u8eab\u4e0d\u9700\u8981\u8f6c\u4e49\u3002 ? \u7684\u7528\u6cd5,\u53c2\u80034 \u591a\u9009\u4e00 (http|ftp) () (?:) \u5206\u9694\u7b26 / \u6a21\u5f0f\u4fee\u9970\u7b26 \u5982i,\u4e0d\u533a\u5206\u5927\u5c0f\u5b9a /[a-z]/i \u5b50\u6a21\u5f0f\u662f\u4ec0\u4e48? \u5176\u4ed6 \\1 $1 \u6b63\u5219\u8868\u8fbe\u5f0f\u5982\u4f55\u5b66\u4e60 \u00b6 \u5339\u914d\u5355\u4e2a\u5b57\u7b26 \u5339\u914d\u4e00\u7ec4\u5b57\u7b26 \u5143\u5b57\u7b26 \u91cd\u590d\u5339\u914d \u4f4d\u7f6e\u5339\u914d \u5b50\u8868\u8fbe\u5f0f \u56de\u6eaf\u5f15\u7528 \u524d\u540e\u67e5\u627e \u5d4c\u5165\u6761\u4ef6 \u300e\u5b66\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f\u300f\u7b14\u8bb0 \u00b6 \u5168\u5c40\u8bbe\u7f6e \u00b6 //gi\u7b49 \u4e00\u8bcd\u591a\u4e49 \u00b6 /^/ [^] /https?/ \\d? [\\b] \\b \u6355\u83b7\u5206\u7ec4 \u00b6 () \u5185\u7684\u5185\u5bb9\u8868\u793a\u5206\u7ec4 707|827|7019 (\\d)\\d\\1 \u89e3\u91ca: \u7b2c\u4e00\u4e2a\u62ec\u53f7\u5185\u7684\\d\u5339\u914d\u4e86 7 ,\u5e76\u5c06\u8fd9\u4e2a\u5339\u914d\u6355\u83b7(\u4fdd\u5b58),\\1\u5bf9\u524d\u9762\u7b2c\u4e00\u4e2a\u6355\u83b7(\u4fdd\u5b58)\u8fdb\u884c\u5f15\u7528,\u5b9e\u9645\u4e0a\u662f\u52a8\u6001\u7684\u5f15\u7528\u4e86\u62ec\u53f7\u5185(\\d)\u5185\u5bb9,\u6709\u70b9\u7c7b\u4f3c bash\u5b57\u7b26\u4e32\u4e2d\u7684\u53d8\u91cf\u5f15\u7528. \u6355\u83b7\u5206\u7ec4\u8fd9\u6837\u7684\u7ffb\u8bd1\u4e0d\u6613\u61c2,\u5e94\u8be5\u6709\u66f4\u597d\u7684\u65b9\u5f0f \u5339\u914d\u5b57\u7b26 \u00b6 \u6570\u5b57\u5b57\u7b26, \\d \u975e\u6570\u5b57\u5b57\u7b26 \\D , \u6709\u70b9\u50cfvi\u91cc\u7684\u547d\u4ee4,\u5927\u5c0f\u5199\u6709\u65f6\u5019\u8868\u793a\u53cd\u4e49,\u5982 gg G \u5355\u8bcd \\w \u8fd9\u91cc\u6307\u7684\u662f\u5b57\u6bcd\u548c\u6570\u5b57,\u5bf9\u4e2d\u6587\u65e0\u6548 \u975e\u5355\u8bcd \\W \u975e\u5b57\u6bcd\u548c\u6570\u5b57,\u7b26\u53f7\u7a7a\u683c\u90fd\u5305\u62ec,\u4e2d\u6587\u4e5f\u5305\u62ec\u4e86 \u7a7a\u767d \\s \u4f1a\u5339\u914d \u7a7a\u683c,\u5236\u8868\u7b26,\u6362\u884c,\u56de\u8f66.( \u6ce8\u610f\u7a7a\u767d\u4e0d\u662f\u7a7a\u683c ) \u975e\u7a7a\u767d \\S \u8fd9\u91cc\u53ea\u6709 \\s\\S\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528,\u5339\u914d\u6240\u6709\u7684\u5b57\u7b26,\u5176\u4ed6\u7684\u7ec4\u5408\u50cf\\d\\D\u5b9a\u4e49\u5c31\u662f\u9519\u8bef\u7684,\u4e00\u4e2a\u5b57\u7b26\u4e0d\u53ef\u80fd\u662f\u6570\u5b57\u53c8\u4e0d\u662f\u6570\u5b57 [^\\t\\n\\r] \u548c [^\\s] \u662f\u7b49\u4ef7\u7684 ^ \u5728[]\u91cc\u8868\u793a \u975e \u91cf\u8bcd \u00b6 \u8d2a\u5fc3,\u61d2\u60f0\u548c\u5360\u6709 lazy\u6a21\u5f0f\u7684\u5728\u4e0d\u540c\u7684\u5f15\u64ce\u4e0b\u8868\u73b0\u6709\u53ef\u80fd\u4e0d\u4e00\u6837 \u6bd4\u5982 5*? \u6709\u7684\u662f\u5c31\u4e00\u4e2a\u4e5f\u4e0d\u5339\u914d,\u6709\u7684\u662f\u81f3\u5c11\u5339\u914d\u4e00\u4e2a. \u5339\u914d\u7684\u6570\u91cf,\u6709\u70b9\u50cfvi\u91cc\u7684 dd3\u4e2d\u76843 0|1 ? >=0 * >=1 + \u6307\u5b9a\u6570\u91cf {n} \u6307\u5b9a\u6700\u5c0f\u6570\u91cf\u6700\u5927\u6570\u91cf {n1,n2} \u95ee\u53f7\u6709\u4e24\u79cd\u4f7f\u7528\u6a21\u5f0f \u5bf9\u4e8e\u666e\u901a\u5b57\u7b26,\u8868\u793a\u524d\u4e00\u4e2a\u5b57\u7b26\u53ef\u6709\u53ef\u65e0 \u5bf9\u4e8e\u5339\u914d\u6a21\u5f0f\u8868\u793a\u6700\u5c0f\u5339\u914d(\u975e\u8d2a\u5a6a\u6a21\u5f0f) \u8fb9\u754c \u00b6 \u884c\u7684\u8d77\u59cb\u7ed3\u675f ^ $ \u5355\u8bcd\u8fb9\u754c \\b , \u6ce8\u610f:\u5728[]\u91cc\u7684[\\b]\u662f\u9000\u683c\u7b26 \u975e\u5355\u8bcd\u8fb9\u754c \\B \u975e\u5355\u8bcd\u8fb9\u754c\u5176\u5b9e\u5c31\u662f\u5f53\u524d\u7684\u5b57\u7b26\u4e0d\u80fd\u662f\u5b57\u7b26\u6570\u5b57\u4e4b\u5916\u7684\u7b26\u53f7,\u4e3b\u8981\u7528\u4e8e\u5339\u914d\u4e00\u4e2a\u8bcd\u7684\u4e2d\u95f4\u8d77\u59cb\u90e8\u5206(\u53ef\u4e0d\u591f\u51c6\u786e) \\z \\Z \u9700\u8981\u4e86\u89e3\u4e00\u4e0b,\u4e0d\u662f\u6240\u6709\u7684\u8bed\u8a00\u4e2d\u90fd\u53ef\u7528 \u4f7f\u7528\u5143\u5b57\u7b26\u5b57\u9762\u91cf \\Q $*+? \\E \u4e4b\u95f4\u5143\u5b57\u7b26\u53ef\u4ee5\u4e0d\u7528\u4f7f\u7528\u8f6c\u4e49,\u7c7b\u4f3c\u4e8eruby\u4e2d\u7684 %Q(hello,\"world\"),\u91cc\u9762\u7684\u53cc\u5f15\u53f7\u4e0d\u7528\u8f6c\u4e49. \u9009\u62e9 \u00b6 (the|The|THE) \u9009\u9879 (?i)the \u8fd9\u4e2a\u5e94\u7528\u7684\u8303\u56f4\u5982\u4f55\u7406\u89e3?? \u5f15\u7528 \u00b6 \u5b50\u6a21\u5f0f , (the|The|THE) \u5c31\u67093\u4e2a\u5b50\u6a21\u5f0f,\u4e09\u4e2a\u6a21\u5f0f\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb,\u800c(t|T)h(e|E),\u5c31\u6709\u4f9d\u8d56\u5173\u7cfb\u4e86. \u6355\u83b7\u5206\u7ec4\u548c\u5411\u540e\u5f15\u7528 ,\u662f\u6279\u524d\u9762\u5339\u914d\u7684\u89c4\u5219,\u540e\u9762\u901a\u8fc7\u7b80\u79f0\u6765\u5f15\u7528\u8fd9\u4e2a\u89c4\u5219,\u800c\u4e0d\u7528\u91cd\u590d\u5199,\u8ddf\u4ee3\u7801\u5199\u4e2a\u51fd\u6570\u5c01\u88c5\u4e00\u4e2a\u9053\u7406. this is a book this /(this is) (a book) \\1/ \\1 \u6307\u7684\u662f\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5206\u7ec4this is, \u7f16\u8f91\u5668\u66ff\u6362\u7684\u65f6\u5019\u4e5f\u53ef\u4f7f\u7528\u8fd9\u4e2a\\1,\u4e00\u822c\u7f16\u8f91\u5668\u662f\u4f7f\u7528 $1 $2 \u547d\u540d\u5206\u7ec4 (\u5728\u4e0d\u540c\u7684\u8bed\u8a00\u4e2d\u4f7f\u7528\u4e5f\u4e0d\u4e00\u6837) \u7ed9\u5206\u7ec4\u8d77\u4e2a\u540d\u5b50,\u800c\u4e0d\u662f\u4e0a\u9762\u7684\u6309\u6570\u5b57\u6765\u547d\u540d,\u9002\u914d\u6bd4\u8f83\u957f\u7684\u6b63\u5219,\u6216\u9700\u8981\u66f4\u6e05\u695a\u7684\u5b9a\u4e49,\u8ddf\u7a0b\u5e8f\u4e2d\u8d77\u6709\u610f\u4e49\u7684\u53d8\u91cf\u540d\u5dee\u4e0d\u591a. / (? this is) (? a book)/ \u5f15\u7528\u7684\u65f6\u5019\u4f7f\u7528 $+{one} $+{two} \u975e\u6355\u83b7\u5206\u7ec4 \u63d0\u9ad8\u6548\u7387,\u9664\u975e\u5bf9\u6548\u7387\u975e\u5e38\u654f\u611f\u6bd4\u5982\u722c\u866b\u4e4b\u7c7b,\u5426\u5219\u4e0d\u5efa\u8bae\u4f7f\u7528,\u5f71\u54cd\u53ef\u9605\u8bfb\u6027(\u6b63\u5219\u6709\u53ef\u9605\u8bfb\u6027\u5417?) (?:the|The|THE) \u5728\u4e00\u4e2a\u5206\u7ec4\u62ec\u53f7\u524d\u52a0 ?: \u539f\u5b50\u5206\u7ec4 \u4e0d\u4e86\u89e3\u5e94\u7528\u573a\u666f \u5e76\u96c6\u4e0e\u5dee\u96c6 \u00b6 \u5e76\u96c6 [0-3][6-9] \u5dee\u96c6 [a-z&&[^m-r]] a\u5230z,\u4f46m\u5230r\u9664\u5916 POSIX\u5b57\u7b26\u7ec4 \u00b6 [[:alnum]] \u5b57\u6bcd\u6570\u5b57 [[:ascii]] [[:^ascii]] [[:space]] \u7a7a\u683c\u6216\u5236\u8868\u7b26 Unicode \u00b6 \\u2014 \u957f\u7834\u6298\u53f7 \u73af\u89c6 \u00b6 \u73af\u89c6\u5c31\u662f\u9644\u52a0\u6761\u4ef6,\u770b\u770b\u5339\u914d\u7684\u5b57\u7b26\u5468\u56f4\u5fc5\u987b\u8981\u6709\u4ec0\u4e48,\u6ca1\u4ec0\u4e48\u4e4b\u7c7b\u7684\u6761\u4ef6,\u73af\u89c6\u7684\u6761\u4ef6\u5e76\u4e0d\u6210\u4e3a\u5339\u914d\u7684\u5185\u5bb9\u7684\u4e00\u90e8\u5206,\u53ea\u662f\u6761\u4ef6 /hello (?=world)/ \u6b63\u524d\u77bb,\u8fd9\u540d\u5b50\u8d77\u7684,\u5c31\u662f\u540e\u9762\u8981\u6709\u4ec0\u4e48 /hello (?!world)/ \u53cd\u524d\u77bb,\u5c31\u662f\u540e\u9762\u4e0d\u8981\u6709\u4ec0\u4e48 /(?<=hello) world/ \u6b63\u540e\u987e,\u5c31\u662f\u524d\u8981\u8981\u6709\u4ec0\u4e48, ?<= \u63d0\u793a\u4f60\u662f\u5f80\u5de6\u9762\u7684\u65b9\u5411,\u5176\u5b9e\u8bbe\u8ba1\u8005\u60f3\u5f97\u6709\u4e9b\u591a\u4e86 /(?<!hello) world/ \u53cd\u540e\u987e, \u5c31\u662f\u524d\u9762\u4e0d\u8981\u6709\u4ec0\u4e48","title":"\u6b63\u5219\u7b14\u8bb0"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_1","text":"\u5982\u4f55\u83b7\u53d6\u4e00\u884c\u4e2d\u6700\u540e\u4e00\u4e2a\u5339\u914d xxx(?!xxx) \u5176\u5b9e\u5c31\u662f\u73af\u89c6\u7684\u5e94\u7528,\u5c31\u662fxxx\u540e\u9762\u4e0d\u80fd\u518d\u6709xxx\u7684\u5339\u914d\u4e86","title":"\u6bd4\u8f83\u6709\u7528\u7684\u793a\u4f8b"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_2","text":"\u4efb\u610f\u5b57\u7b26 . \u4efb\u610f\u5b57\u7b26\u4f46\u4e0d\u5305\u62ec\u6362\u884c [\\s\\S] \u5339\u914d\u4efb\u610f\u5b57\u7b26.\u8ddf . \u7684\u533a\u522b\u5c31\u662f\u591a\u4e86\u6362\u884c \\s \u7a7a\u683c,tab,\u6362\u884c \\S (\u5927\u5199S)\u662f \\s \u7684\u53cd\u4e49,\u9664\u4e86\\s\u7684\u4e09\u4e2a\u4ee5\u5916\u7684\u5176\u4ed6\u5b57\u7b26 \u5339\u914d>=0 * \u5339\u914d>=1 + \u5339\u914d 0 or 1 ? /https?/ \u5339\u914d https (\u4e00\u4e2as) \u6216 http (0\u4e2as) >\u975e\u8d2a\u5a6a\u6a21\u5f0f ,\u5e94\u8be5\u53eb\u6700\u5c0f\u5339\u914d\u66f4\u5bb9\u6613\u7406\u89e3 > >\u6709\u95ee\u53f7\u5c31\u662f\u6700\u5c0f\u8303\u56f4\u5185\u5339\u914d,\u53cd\u4e4b\u5c31\u6700\u5927\u8303\u56f4\u5185\u5339\u914d > >`<div>a</div><div>b</div>` > >/<div>(.*?)</div>/ > >\u52a0?\u53f7\u5c31\u662f2\u4e2a\u5339\u914d,\u4e0d\u52a0?\u5339\u914d\u6574\u4e2a\u5b57\u7b26\u4e32 \u8f6c\u4e49 \\ [] \u5355\u5b57\u7b26\u53d6\u4e00\u4e2a,[abc]\u4f1a\u5339\u914d a\u6216b\u6216c [0-9],[z-zA-Z] ^ \u5b57\u7b26\u5f00\u59cb ^ \u5982\u679c\u5728 [] \u91cc,\u4ee3\u8868 \u975e ,\u8868\u793a\u5339\u914d\u4e0d\u5728\u62ec\u53f7\u91cc\u7684\u5b57\u7b26 $ \u5b57\u7b26\u4e32\u7ed3\u675f \u5faa\u73af\u6b21\u6570 {n1,n2} \u4e0d\u592a\u660e\u767d? [0-9]{1,3} \u8868\u793a\u57280-9\u7684\u8303\u56f4\u91cc\u9762\u5faa\u73af1\u4e2a\u30012\u4e2a\u6216\u80053\u4e2a\uff0c\u53ef\u80fd\u7ed3\u679c\u67095\u300120\u3001415\u7b49\u3002 \u5982\u679c\u5faa\u73af\u6307\u5b9a\u6b21\u6570\uff0c\u59823\u6b21\uff0c\u5219 {3,3} \u53ef\u4ee5\u7b80\u5199\u6210 {3} \u3002 \u5982\u679c\u521a\u597d\u9700\u8981\u5339\u914d\u5b57\u7b26 {1} \uff0c\u5219\u6b63\u5219\u9700\u8981\u7ed9 { \u8fdb\u884c\u8f6c\u4e49\uff0c\u5f97\u5230 \\{1} \u7684\u6b63\u5219\u3002 \u5982\u679c {} \u4e2d\u95f4\u4e0d\u662f\u6570\u5b57\uff0c\u5219 {} \u672c\u8eab\u4e0d\u9700\u8981\u8f6c\u4e49\u3002 ? \u7684\u7528\u6cd5,\u53c2\u80034 \u591a\u9009\u4e00 (http|ftp) () (?:) \u5206\u9694\u7b26 / \u6a21\u5f0f\u4fee\u9970\u7b26 \u5982i,\u4e0d\u533a\u5206\u5927\u5c0f\u5b9a /[a-z]/i \u5b50\u6a21\u5f0f\u662f\u4ec0\u4e48? \u5176\u4ed6 \\1 $1","title":"\u5b66\u4e60\u6b63\u5219\u5148\u4e86\u89e3\u8fd9\u51e0\u4e2a\u6982\u5ff5"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_3","text":"\u5339\u914d\u5355\u4e2a\u5b57\u7b26 \u5339\u914d\u4e00\u7ec4\u5b57\u7b26 \u5143\u5b57\u7b26 \u91cd\u590d\u5339\u914d \u4f4d\u7f6e\u5339\u914d \u5b50\u8868\u8fbe\u5f0f \u56de\u6eaf\u5f15\u7528 \u524d\u540e\u67e5\u627e \u5d4c\u5165\u6761\u4ef6","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u5982\u4f55\u5b66\u4e60"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_4","text":"","title":"\u300e\u5b66\u4e60\u6b63\u5219\u8868\u8fbe\u5f0f\u300f\u7b14\u8bb0"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_5","text":"//gi\u7b49","title":"\u5168\u5c40\u8bbe\u7f6e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_6","text":"/^/ [^] /https?/ \\d? [\\b] \\b","title":"\u4e00\u8bcd\u591a\u4e49"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_7","text":"() \u5185\u7684\u5185\u5bb9\u8868\u793a\u5206\u7ec4 707|827|7019 (\\d)\\d\\1 \u89e3\u91ca: \u7b2c\u4e00\u4e2a\u62ec\u53f7\u5185\u7684\\d\u5339\u914d\u4e86 7 ,\u5e76\u5c06\u8fd9\u4e2a\u5339\u914d\u6355\u83b7(\u4fdd\u5b58),\\1\u5bf9\u524d\u9762\u7b2c\u4e00\u4e2a\u6355\u83b7(\u4fdd\u5b58)\u8fdb\u884c\u5f15\u7528,\u5b9e\u9645\u4e0a\u662f\u52a8\u6001\u7684\u5f15\u7528\u4e86\u62ec\u53f7\u5185(\\d)\u5185\u5bb9,\u6709\u70b9\u7c7b\u4f3c bash\u5b57\u7b26\u4e32\u4e2d\u7684\u53d8\u91cf\u5f15\u7528. \u6355\u83b7\u5206\u7ec4\u8fd9\u6837\u7684\u7ffb\u8bd1\u4e0d\u6613\u61c2,\u5e94\u8be5\u6709\u66f4\u597d\u7684\u65b9\u5f0f","title":"\u6355\u83b7\u5206\u7ec4"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_8","text":"\u6570\u5b57\u5b57\u7b26, \\d \u975e\u6570\u5b57\u5b57\u7b26 \\D , \u6709\u70b9\u50cfvi\u91cc\u7684\u547d\u4ee4,\u5927\u5c0f\u5199\u6709\u65f6\u5019\u8868\u793a\u53cd\u4e49,\u5982 gg G \u5355\u8bcd \\w \u8fd9\u91cc\u6307\u7684\u662f\u5b57\u6bcd\u548c\u6570\u5b57,\u5bf9\u4e2d\u6587\u65e0\u6548 \u975e\u5355\u8bcd \\W \u975e\u5b57\u6bcd\u548c\u6570\u5b57,\u7b26\u53f7\u7a7a\u683c\u90fd\u5305\u62ec,\u4e2d\u6587\u4e5f\u5305\u62ec\u4e86 \u7a7a\u767d \\s \u4f1a\u5339\u914d \u7a7a\u683c,\u5236\u8868\u7b26,\u6362\u884c,\u56de\u8f66.( \u6ce8\u610f\u7a7a\u767d\u4e0d\u662f\u7a7a\u683c ) \u975e\u7a7a\u767d \\S \u8fd9\u91cc\u53ea\u6709 \\s\\S\u53ef\u4ee5\u7ec4\u5408\u4f7f\u7528,\u5339\u914d\u6240\u6709\u7684\u5b57\u7b26,\u5176\u4ed6\u7684\u7ec4\u5408\u50cf\\d\\D\u5b9a\u4e49\u5c31\u662f\u9519\u8bef\u7684,\u4e00\u4e2a\u5b57\u7b26\u4e0d\u53ef\u80fd\u662f\u6570\u5b57\u53c8\u4e0d\u662f\u6570\u5b57 [^\\t\\n\\r] \u548c [^\\s] \u662f\u7b49\u4ef7\u7684 ^ \u5728[]\u91cc\u8868\u793a \u975e","title":"\u5339\u914d\u5b57\u7b26"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_9","text":"\u8d2a\u5fc3,\u61d2\u60f0\u548c\u5360\u6709 lazy\u6a21\u5f0f\u7684\u5728\u4e0d\u540c\u7684\u5f15\u64ce\u4e0b\u8868\u73b0\u6709\u53ef\u80fd\u4e0d\u4e00\u6837 \u6bd4\u5982 5*? \u6709\u7684\u662f\u5c31\u4e00\u4e2a\u4e5f\u4e0d\u5339\u914d,\u6709\u7684\u662f\u81f3\u5c11\u5339\u914d\u4e00\u4e2a. \u5339\u914d\u7684\u6570\u91cf,\u6709\u70b9\u50cfvi\u91cc\u7684 dd3\u4e2d\u76843 0|1 ? >=0 * >=1 + \u6307\u5b9a\u6570\u91cf {n} \u6307\u5b9a\u6700\u5c0f\u6570\u91cf\u6700\u5927\u6570\u91cf {n1,n2} \u95ee\u53f7\u6709\u4e24\u79cd\u4f7f\u7528\u6a21\u5f0f \u5bf9\u4e8e\u666e\u901a\u5b57\u7b26,\u8868\u793a\u524d\u4e00\u4e2a\u5b57\u7b26\u53ef\u6709\u53ef\u65e0 \u5bf9\u4e8e\u5339\u914d\u6a21\u5f0f\u8868\u793a\u6700\u5c0f\u5339\u914d(\u975e\u8d2a\u5a6a\u6a21\u5f0f)","title":"\u91cf\u8bcd"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_10","text":"\u884c\u7684\u8d77\u59cb\u7ed3\u675f ^ $ \u5355\u8bcd\u8fb9\u754c \\b , \u6ce8\u610f:\u5728[]\u91cc\u7684[\\b]\u662f\u9000\u683c\u7b26 \u975e\u5355\u8bcd\u8fb9\u754c \\B \u975e\u5355\u8bcd\u8fb9\u754c\u5176\u5b9e\u5c31\u662f\u5f53\u524d\u7684\u5b57\u7b26\u4e0d\u80fd\u662f\u5b57\u7b26\u6570\u5b57\u4e4b\u5916\u7684\u7b26\u53f7,\u4e3b\u8981\u7528\u4e8e\u5339\u914d\u4e00\u4e2a\u8bcd\u7684\u4e2d\u95f4\u8d77\u59cb\u90e8\u5206(\u53ef\u4e0d\u591f\u51c6\u786e) \\z \\Z \u9700\u8981\u4e86\u89e3\u4e00\u4e0b,\u4e0d\u662f\u6240\u6709\u7684\u8bed\u8a00\u4e2d\u90fd\u53ef\u7528 \u4f7f\u7528\u5143\u5b57\u7b26\u5b57\u9762\u91cf \\Q $*+? \\E \u4e4b\u95f4\u5143\u5b57\u7b26\u53ef\u4ee5\u4e0d\u7528\u4f7f\u7528\u8f6c\u4e49,\u7c7b\u4f3c\u4e8eruby\u4e2d\u7684 %Q(hello,\"world\"),\u91cc\u9762\u7684\u53cc\u5f15\u53f7\u4e0d\u7528\u8f6c\u4e49.","title":"\u8fb9\u754c"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_11","text":"(the|The|THE) \u9009\u9879 (?i)the \u8fd9\u4e2a\u5e94\u7528\u7684\u8303\u56f4\u5982\u4f55\u7406\u89e3??","title":"\u9009\u62e9"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_12","text":"\u5b50\u6a21\u5f0f , (the|The|THE) \u5c31\u67093\u4e2a\u5b50\u6a21\u5f0f,\u4e09\u4e2a\u6a21\u5f0f\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb,\u800c(t|T)h(e|E),\u5c31\u6709\u4f9d\u8d56\u5173\u7cfb\u4e86. \u6355\u83b7\u5206\u7ec4\u548c\u5411\u540e\u5f15\u7528 ,\u662f\u6279\u524d\u9762\u5339\u914d\u7684\u89c4\u5219,\u540e\u9762\u901a\u8fc7\u7b80\u79f0\u6765\u5f15\u7528\u8fd9\u4e2a\u89c4\u5219,\u800c\u4e0d\u7528\u91cd\u590d\u5199,\u8ddf\u4ee3\u7801\u5199\u4e2a\u51fd\u6570\u5c01\u88c5\u4e00\u4e2a\u9053\u7406. this is a book this /(this is) (a book) \\1/ \\1 \u6307\u7684\u662f\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5206\u7ec4this is, \u7f16\u8f91\u5668\u66ff\u6362\u7684\u65f6\u5019\u4e5f\u53ef\u4f7f\u7528\u8fd9\u4e2a\\1,\u4e00\u822c\u7f16\u8f91\u5668\u662f\u4f7f\u7528 $1 $2 \u547d\u540d\u5206\u7ec4 (\u5728\u4e0d\u540c\u7684\u8bed\u8a00\u4e2d\u4f7f\u7528\u4e5f\u4e0d\u4e00\u6837) \u7ed9\u5206\u7ec4\u8d77\u4e2a\u540d\u5b50,\u800c\u4e0d\u662f\u4e0a\u9762\u7684\u6309\u6570\u5b57\u6765\u547d\u540d,\u9002\u914d\u6bd4\u8f83\u957f\u7684\u6b63\u5219,\u6216\u9700\u8981\u66f4\u6e05\u695a\u7684\u5b9a\u4e49,\u8ddf\u7a0b\u5e8f\u4e2d\u8d77\u6709\u610f\u4e49\u7684\u53d8\u91cf\u540d\u5dee\u4e0d\u591a. / (? this is) (? a book)/ \u5f15\u7528\u7684\u65f6\u5019\u4f7f\u7528 $+{one} $+{two} \u975e\u6355\u83b7\u5206\u7ec4 \u63d0\u9ad8\u6548\u7387,\u9664\u975e\u5bf9\u6548\u7387\u975e\u5e38\u654f\u611f\u6bd4\u5982\u722c\u866b\u4e4b\u7c7b,\u5426\u5219\u4e0d\u5efa\u8bae\u4f7f\u7528,\u5f71\u54cd\u53ef\u9605\u8bfb\u6027(\u6b63\u5219\u6709\u53ef\u9605\u8bfb\u6027\u5417?) (?:the|The|THE) \u5728\u4e00\u4e2a\u5206\u7ec4\u62ec\u53f7\u524d\u52a0 ?: \u539f\u5b50\u5206\u7ec4 \u4e0d\u4e86\u89e3\u5e94\u7528\u573a\u666f","title":"\u5f15\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_13","text":"\u5e76\u96c6 [0-3][6-9] \u5dee\u96c6 [a-z&&[^m-r]] a\u5230z,\u4f46m\u5230r\u9664\u5916","title":"\u5e76\u96c6\u4e0e\u5dee\u96c6"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#posix","text":"[[:alnum]] \u5b57\u6bcd\u6570\u5b57 [[:ascii]] [[:^ascii]] [[:space]] \u7a7a\u683c\u6216\u5236\u8868\u7b26","title":"POSIX\u5b57\u7b26\u7ec4"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#unicode","text":"\\u2014 \u957f\u7834\u6298\u53f7","title":"Unicode"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/%E6%AD%A3%E5%88%99%E7%AC%94%E8%AE%B0/#_14","text":"\u73af\u89c6\u5c31\u662f\u9644\u52a0\u6761\u4ef6,\u770b\u770b\u5339\u914d\u7684\u5b57\u7b26\u5468\u56f4\u5fc5\u987b\u8981\u6709\u4ec0\u4e48,\u6ca1\u4ec0\u4e48\u4e4b\u7c7b\u7684\u6761\u4ef6,\u73af\u89c6\u7684\u6761\u4ef6\u5e76\u4e0d\u6210\u4e3a\u5339\u914d\u7684\u5185\u5bb9\u7684\u4e00\u90e8\u5206,\u53ea\u662f\u6761\u4ef6 /hello (?=world)/ \u6b63\u524d\u77bb,\u8fd9\u540d\u5b50\u8d77\u7684,\u5c31\u662f\u540e\u9762\u8981\u6709\u4ec0\u4e48 /hello (?!world)/ \u53cd\u524d\u77bb,\u5c31\u662f\u540e\u9762\u4e0d\u8981\u6709\u4ec0\u4e48 /(?<=hello) world/ \u6b63\u540e\u987e,\u5c31\u662f\u524d\u8981\u8981\u6709\u4ec0\u4e48, ?<= \u63d0\u793a\u4f60\u662f\u5f80\u5de6\u9762\u7684\u65b9\u5411,\u5176\u5b9e\u8bbe\u8ba1\u8005\u60f3\u5f97\u6709\u4e9b\u591a\u4e86 /(?<!hello) world/ \u53cd\u540e\u987e, \u5c31\u662f\u524d\u9762\u4e0d\u8981\u6709\u4ec0\u4e48","title":"\u73af\u89c6"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95/GDB-Cheat/","text":"GDB Cheat Sheet \u00b6 ############################################################################## # GDB CHEATSHEET (\u4e2d\u6587\u901f\u67e5\u8868) - by skywind (created on 2018/02/20) # Version: 8, Last Modified: 2018/02/28 17:13 # https://github.com/skywind3000/awesome-cheatsheets ############################################################################## ############################################################################## # \u542f\u52a8 GDB ############################################################################## gdb object # \u6b63\u5e38\u542f\u52a8\uff0c\u52a0\u8f7d\u53ef\u6267\u884c gdb object core # \u5bf9\u53ef\u6267\u884c + core \u6587\u4ef6\u8fdb\u884c\u8c03\u8bd5 gdb object pid # \u5bf9\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\u8fdb\u884c\u8c03\u8bd5 gdb # \u6b63\u5e38\u542f\u52a8\uff0c\u542f\u52a8\u540e\u9700\u8981 file \u547d\u4ee4\u624b\u52a8\u52a0\u8f7d gdb -tui # \u542f\u7528 gdb \u7684\u6587\u672c\u754c\u9762 ############################################################################## # \u5e2e\u52a9\u4fe1\u606f ############################################################################## help # \u5217\u51fa\u547d\u4ee4\u5206\u7c7b help running # \u67e5\u770b\u67d0\u4e2a\u7c7b\u522b\u7684\u5e2e\u52a9\u4fe1\u606f help run # \u67e5\u770b\u547d\u4ee4 run \u7684\u5e2e\u52a9 help info # \u5217\u51fa\u67e5\u770b\u7a0b\u5e8f\u8fd0\u884c\u72b6\u6001\u76f8\u5173\u7684\u547d\u4ee4 help info line # \u5217\u51fa\u5177\u4f53\u7684\u4e00\u4e2a\u8fd0\u884c\u72b6\u6001\u547d\u4ee4\u7684\u5e2e\u52a9 help show # \u5217\u51fa GDB \u72b6\u6001\u76f8\u5173\u7684\u547d\u4ee4 help show commands # \u5217\u51fa show \u547d\u4ee4\u7684\u5e2e\u52a9 ############################################################################## # \u65ad\u70b9 ############################################################################## break main # \u5bf9\u51fd\u6570 main \u8bbe\u7f6e\u4e00\u4e2a\u65ad\u70b9\uff0c\u53ef\u7b80\u5199\u4e3a b main break 101 # \u5bf9\u6e90\u4ee3\u7801\u7684\u884c\u53f7\u8bbe\u7f6e\u65ad\u70b9\uff0c\u53ef\u7b80\u5199\u4e3a b 101 break basic.c:101 # \u5bf9\u6e90\u4ee3\u7801\u548c\u884c\u53f7\u8bbe\u7f6e\u65ad\u70b9 break basic.c:foo # \u5bf9\u6e90\u4ee3\u7801\u548c\u51fd\u6570\u540d\u8bbe\u7f6e\u65ad\u70b9 break *0x00400448 # \u5bf9\u5185\u5b58\u5730\u5740 0x00400448 \u8bbe\u7f6e\u65ad\u70b9 info breakpoints # \u5217\u51fa\u5f53\u524d\u7684\u6240\u6709\u65ad\u70b9\u4fe1\u606f\uff0c\u53ef\u7b80\u5199\u4e3a info break delete 1 # \u6309\u7f16\u53f7\u5220\u9664\u4e00\u4e2a\u65ad\u70b9 delete # \u5220\u9664\u6240\u6709\u65ad\u70b9 clear # \u5220\u9664\u5728\u5f53\u524d\u884c\u7684\u65ad\u70b9 clear function # \u5220\u9664\u51fd\u6570\u65ad\u70b9 clear line # \u5220\u9664\u884c\u53f7\u65ad\u70b9 clear basic.c:101 # \u5220\u9664\u6587\u4ef6\u540d\u548c\u884c\u53f7\u7684\u65ad\u70b9 clear basic.c:main # \u5220\u9664\u6587\u4ef6\u540d\u548c\u51fd\u6570\u540d\u7684\u65ad\u70b9 clear *0x00400448 # \u5220\u9664\u5185\u5b58\u5730\u5740\u7684\u65ad\u70b9 disable 2 # \u7981\u7528\u67d0\u65ad\u70b9\uff0c\u4f46\u662f\u90e8\u5220\u9664 enable 2 # \u5141\u8bb8\u67d0\u4e2a\u4e4b\u524d\u88ab\u7981\u7528\u7684\u65ad\u70b9\uff0c\u8ba9\u5b83\u751f\u6548 tbreak function | line # \u4e34\u65f6\u65ad\u70b9 ignore { id } { count } # \u5ffd\u7565\u67d0\u65ad\u70b9 N-1 \u6b21 condition { id } { expr } # \u6761\u4ef6\u65ad\u70b9\uff0c\u53ea\u6709\u5728\u6761\u4ef6\u751f\u6548\u65f6\u624d\u53d1\u751f condition 2 i == 20 # 2\u53f7\u65ad\u70b9\u53ea\u6709\u5728 i == 20 \u6761\u4ef6\u4e3a\u771f\u65f6\u624d\u751f\u6548 watch { expr } # \u5bf9\u53d8\u91cf\u8bbe\u7f6e\u76d1\u89c6\u70b9 info watchpoints # \u663e\u793a\u6240\u6709\u89c2\u5bdf\u70b9 ############################################################################## # \u8fd0\u884c\u7a0b\u5e8f ############################################################################## run # \u8fd0\u884c\u7a0b\u5e8f run { args } # \u4ee5\u67d0\u53c2\u6570\u8fd0\u884c\u7a0b\u5e8f run < file # \u4ee5\u67d0\u6587\u4ef6\u4e3a\u6807\u51c6\u8f93\u5165\u8fd0\u884c\u7a0b\u5e8f run < < ( cmd ) # \u4ee5\u67d0\u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a\u6807\u51c6\u8f93\u5165\u8fd0\u884c\u7a0b\u5e8f run <<< $( cmd ) # \u4ee5\u67d0\u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a\u6807\u51c6\u8f93\u5165\u8fd0\u884c\u7a0b\u5e8f set args { args } ... # \u8bbe\u7f6e\u8fd0\u884c\u7684\u53c2\u6570 show args # \u663e\u793a\u5f53\u524d\u7684\u8fd0\u884c\u53c2\u6570 cont # \u7ee7\u7eed\u8fd0\u884c\uff0c\u53ef\u7b80\u5199\u4e3a c step # \u5355\u6b65\u8fdb\u5165\uff0c\u78b0\u5230\u51fd\u6570\u4f1a\u8fdb\u53bb step { count } # \u5355\u6b65\u591a\u5c11\u6b21 next # \u5355\u6b65\u8df3\u8fc7\uff0c\u78b0\u5230\u51fd\u6570\u4e0d\u4f1a\u8fdb\u5165 next { count } # \u5355\u6b65\u591a\u5c11\u6b21 CTRL+C # \u53d1\u9001 SIGINT \u4fe1\u53f7\uff0c\u4e2d\u6b62\u5f53\u524d\u8fd0\u884c\u7684\u7a0b\u5e8f attach { process-id } # \u94fe\u63a5\u4e0a\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u5f00\u59cb\u8c03\u8bd5 detach # \u65ad\u5f00\u8fdb\u7a0b\u94fe\u63a5 finish # \u7ed3\u675f\u5f53\u524d\u51fd\u6570\u7684\u8fd0\u884c until # \u6301\u7eed\u6267\u884c\u76f4\u5230\u4ee3\u7801\u884c\u53f7\u5927\u4e8e\u5f53\u524d\u884c\u53f7\uff08\u8df3\u51fa\u5faa\u73af\uff09 until { line } # \u6301\u7eed\u6267\u884c\u76f4\u5230\u6267\u884c\u5230\u67d0\u884c kill # \u6740\u6b7b\u5f53\u524d\u8fd0\u884c\u7684\u51fd\u6570 ############################################################################## # \u6808\u5e27 ############################################################################## bt # \u6253\u5370 backtrace frame # \u663e\u793a\u5f53\u524d\u8fd0\u884c\u7684\u6808\u5e27 up # \u5411\u4e0a\u79fb\u52a8\u6808\u5e27\uff08\u5411\u7740 main \u51fd\u6570\uff09 down # \u5411\u4e0b\u79fb\u52a8\u6808\u5e27\uff08\u8fdc\u79bb main \u51fd\u6570\uff09 info locals # \u6253\u5370\u5e27\u5185\u7684\u76f8\u5173\u53d8\u91cf info args # \u6253\u5370\u51fd\u6570\u7684\u53c2\u6570 ############################################################################## # \u4ee3\u7801\u6d4f\u89c8 ############################################################################## list 101 # \u663e\u793a\u7b2c 101 \u884c\u5468\u56f4 10\u884c\u4ee3\u7801 list 1 ,10 # \u663e\u793a 1 \u5230 10 \u884c\u4ee3\u7801 list main # \u663e\u793a\u51fd\u6570\u5468\u56f4\u4ee3\u7801 list basic.c:main # \u663e\u793a\u53e6\u5916\u4e00\u4e2a\u6e90\u4ee3\u7801\u6587\u4ef6\u7684\u51fd\u6570\u5468\u56f4\u4ee3\u7801 list - # \u91cd\u590d\u4e4b\u524d 10 \u884c\u4ee3\u7801 list *0x22e4 # \u663e\u793a\u7279\u5b9a\u5730\u5740\u7684\u4ee3\u7801 cd dir # \u5207\u6362\u5f53\u524d\u76ee\u5f55 pwd # \u663e\u793a\u5f53\u524d\u76ee\u5f55 search { regexpr } # \u5411\u524d\u8fdb\u884c\u6b63\u5219\u641c\u7d22 reverse-search { regexp } # \u5411\u540e\u8fdb\u884c\u6b63\u5219\u641c\u7d22 dir { dirname } # \u589e\u52a0\u6e90\u4ee3\u7801\u641c\u7d22\u8def\u5f84 dir # \u590d\u4f4d\u6e90\u4ee3\u7801\u641c\u7d22\u8def\u5f84\uff08\u6e05\u7a7a\uff09 show directories # \u663e\u793a\u6e90\u4ee3\u7801\u8def\u5f84 ############################################################################## # \u6d4f\u89c8\u6570\u636e ############################################################################## print { expression } # \u6253\u5370\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u589e\u52a0\u5230\u6253\u5370\u5386\u53f2 print /x { expression } # \u5341\u516d\u8fdb\u5236\u8f93\u51fa\uff0cprint \u53ef\u4ee5\u7b80\u5199\u4e3a p print array [ i ] @count # \u6253\u5370\u6570\u7ec4\u8303\u56f4 print $ # \u6253\u5370\u4e4b\u524d\u7684\u53d8\u91cf print * $- >next # \u6253\u5370 list print $1 # \u8f93\u51fa\u6253\u5370\u5386\u53f2\u91cc\u7b2c\u4e00\u6761 print ::gx # \u5c06\u53d8\u91cf\u53ef\u89c6\u8303\u56f4\uff08scope\uff09\u8bbe\u7f6e\u4e3a\u5168\u5c40 print 'basic.c' ::gx # \u6253\u5370\u67d0\u6e90\u4ee3\u7801\u91cc\u7684\u5168\u5c40\u53d8\u91cf\uff0c(gdb 4.6) print /x & main # \u6253\u5370\u51fd\u6570\u5730\u5740 x *0x11223344 # \u663e\u793a\u7ed9\u5b9a\u5730\u5740\u7684\u5185\u5b58\u6570\u636e x /nfu { address } # \u6253\u5370\u5185\u5b58\u6570\u636e\uff0cn\u662f\u591a\u5c11\u4e2a\uff0cf\u662f\u683c\u5f0f\uff0cu\u662f\u5355\u4f4d\u5927\u5c0f x /10xb *0x11223344 # \u6309\u5341\u516d\u8fdb\u5236\u6253\u5370\u5185\u5b58\u5730\u5740 0x11223344 \u5904\u7684\u5341\u4e2a\u5b57\u8282 x/x & gx # \u6309\u5341\u516d\u8fdb\u5236\u6253\u5370\u53d8\u91cf gx\uff0cx\u548c\u659c\u6746\u540e\u53c2\u6570\u53ef\u4ee5\u8fde\u5199 x/4wx & main # \u6309\u5341\u516d\u8fdb\u5236\u6253\u5370\u4f4d\u4e8e main \u51fd\u6570\u5f00\u5934\u7684\u56db\u4e2a long x/gf & gd1 # \u6253\u5370 double \u7c7b\u578b help x # \u67e5\u770b\u5173\u4e8e x \u547d\u4ee4\u7684\u5e2e\u52a9 info locals # \u6253\u5370\u672c\u5730\u5c40\u90e8\u53d8\u91cf info functions { regexp } # \u6253\u5370\u51fd\u6570\u540d\u79f0 info variables { regexp } # \u6253\u5370\u5168\u5c40\u53d8\u91cf\u540d\u79f0 ptype name # \u67e5\u770b\u7c7b\u578b\u5b9a\u4e49\uff0c\u6bd4\u5982 ptype FILE\uff0c\u67e5\u770b FILE \u7ed3\u6784\u4f53\u5b9a\u4e49 whatis { expression } # \u67e5\u770b\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b set var = { expression } # \u53d8\u91cf\u8d4b\u503c display { expression } # \u5728\u5355\u6b65\u6307\u4ee4\u540e\u67e5\u770b\u67d0\u8868\u8fbe\u5f0f\u7684\u503c undisplay # \u5220\u9664\u5355\u6b65\u540e\u5bf9\u67d0\u4e9b\u503c\u7684\u76d1\u63a7 info display # \u663e\u793a\u76d1\u89c6\u7684\u8868\u8fbe\u5f0f show values # \u67e5\u770b\u8bb0\u5f55\u5230\u6253\u5370\u5386\u53f2\u4e2d\u7684\u53d8\u91cf\u7684\u503c (gdb 4.0) info history # \u67e5\u770b\u6253\u5370\u5386\u53f2\u7684\u5e2e\u52a9 (gdb 3.5) ############################################################################## # \u76ee\u6807\u6587\u4ef6\u64cd\u4f5c ############################################################################## file { object } # \u52a0\u8f7d\u65b0\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4f9b\u8c03\u8bd5 file # \u653e\u5f03\u53ef\u6267\u884c\u548c\u7b26\u53f7\u8868\u4fe1\u606f symbol-file { object } # \u4ec5\u52a0\u8f7d\u7b26\u53f7\u8868 exec-file { object } # \u6307\u5b9a\u7528\u4e8e\u8c03\u8bd5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff08\u975e\u7b26\u53f7\u8868\uff09 core-file { core } # \u52a0\u8f7d core \u7528\u4e8e\u5206\u6790 ############################################################################## # \u4fe1\u53f7\u63a7\u5236 ############################################################################## info signals # \u6253\u5370\u4fe1\u53f7\u8bbe\u7f6e handle { signo } { actions } # \u8bbe\u7f6e\u4fe1\u53f7\u7684\u8c03\u8bd5\u884c\u4e3a handle INT print # \u4fe1\u53f7\u53d1\u751f\u65f6\u6253\u5370\u4fe1\u606f handle INT noprint # \u4fe1\u53f7\u53d1\u751f\u65f6\u4e0d\u6253\u5370\u4fe1\u606f handle INT stop # \u4fe1\u53f7\u53d1\u751f\u65f6\u4e2d\u6b62\u88ab\u8c03\u8bd5\u7a0b\u5e8f handle INT nostop # \u4fe1\u53f7\u53d1\u751f\u65f6\u4e0d\u4e2d\u6b62\u88ab\u8c03\u8bd5\u7a0b\u5e8f handle INT pass # \u8c03\u8bd5\u5668\u63a5\u83b7\u4fe1\u53f7\uff0c\u4e0d\u8ba9\u7a0b\u5e8f\u77e5\u9053 handle INT nopass # \u8c03\u8bd5\u8d77\u4e0d\u63a5\u83b7\u4fe1\u53f7 signal signo # \u7ee7\u7eed\u5e76\u5c06\u4fe1\u53f7\u8f6c\u79fb\u7ed9\u7a0b\u5e8f signal 0 # \u7ee7\u7eed\u4f46\u4e0d\u628a\u4fe1\u53f7\u7ed9\u7a0b\u5e8f ############################################################################## # \u7ebf\u7a0b\u8c03\u8bd5 ############################################################################## info threads # \u67e5\u770b\u5f53\u524d\u7ebf\u7a0b\u548c id thread { id } # \u5207\u6362\u5f53\u524d\u8c03\u8bd5\u7ebf\u7a0b\u4e3a\u6307\u5b9a id \u7684\u7ebf\u7a0b break { line } thread all # \u6240\u6709\u7ebf\u7a0b\u5728\u6307\u5b9a\u884c\u53f7\u5904\u8bbe\u7f6e\u65ad\u70b9 thread apply { id.. } cmd # \u6307\u5b9a\u591a\u4e2a\u7ebf\u7a0b\u5171\u540c\u6267\u884c gdb \u547d\u4ee4 thread apply all cmd # \u6240\u6709\u7ebf\u7a0b\u5171\u540c\u6267\u884c gdb \u547d\u4ee4 set schedule-locking ? # \u8c03\u8bd5\u4e00\u4e2a\u7ebf\u7a0b\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u662f\u5426\u6267\u884c\uff0coff|on|step set non-stop on/off # \u8c03\u8bd5\u4e00\u4e2a\u7ebf\u7a0b\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u662f\u5426\u8fd0\u884c set pagination on/off # \u8c03\u8bd5\u4e00\u4e2a\u7ebf\u7a0b\u65f6\uff0c\u5206\u9875\u662f\u5426\u505c\u6b62 set target-async on/off # \u540c\u6b65\u6216\u8005\u5f02\u6b65\u8c03\u8bd5\uff0c\u662f\u5426\u7b49\u5f85\u7ebf\u7a0b\u4e2d\u6b62\u7684\u4fe1\u606f ############################################################################## # \u8fdb\u7a0b\u8c03\u8bd5 ############################################################################## info inferiors # \u67e5\u770b\u5f53\u524d\u8fdb\u7a0b\u548c id inferior { id } # \u5207\u6362\u67d0\u4e2a\u8fdb\u7a0b kill inferior { id... } # \u6740\u6b7b\u67d0\u4e2a\u8fdb\u7a0b set detach-on-fork on/off # \u8bbe\u7f6e\u5f53\u8fdb\u7a0b\u8c03\u7528fork\u65f6gdb\u662f\u5426\u540c\u65f6\u8c03\u8bd5\u7236\u5b50\u8fdb\u7a0b set follow-fork-mode parent/child # \u8bbe\u7f6e\u5f53\u8fdb\u7a0b\u8c03\u7528fork\u65f6\u662f\u5426\u8fdb\u5165\u5b50\u8fdb\u7a0b ############################################################################## # \u6c47\u7f16\u8c03\u8bd5 ############################################################################## info registers # \u6253\u5370\u666e\u901a\u5bc4\u5b58\u5668 info all-registers # \u6253\u5370\u6240\u6709\u5bc4\u5b58\u5668 print/x $pc # \u6253\u5370\u5355\u4e2a\u5bc4\u5b58\u5668 stepi # \u6307\u4ee4\u7ea7\u522b\u5355\u6b65\u8fdb\u5165\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a si nexti # \u6307\u4ee4\u7ea7\u522b\u5355\u6b65\u8df3\u8fc7\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a ni display/i $pc # \u76d1\u63a7\u5bc4\u5b58\u5668\uff08\u6bcf\u6761\u5355\u6b65\u5b8c\u4ee5\u540e\u4f1a\u81ea\u52a8\u6253\u5370\u503c\uff09 x/x & gx # \u5341\u516d\u8fdb\u5236\u6253\u5370\u53d8\u91cf info line 22 # \u6253\u5370\u884c\u53f7\u4e3a 22 \u7684\u5185\u5b58\u5730\u5740\u4fe1\u606f info line *0x2c4e # \u6253\u5370\u7ed9\u5b9a\u5185\u5b58\u5730\u5740\u5bf9\u5e94\u7684\u6e90\u4ee3\u7801\u548c\u884c\u53f7\u4fe1\u606f disassemble { addr } # \u5bf9\u5730\u5740\u8fdb\u884c\u53cd\u6c47\u7f16\uff0c\u6bd4\u5982 disassemble 0x2c4e ############################################################################## # \u5386\u53f2\u4fe1\u606f ############################################################################## show commands # \u663e\u793a\u5386\u53f2\u547d\u4ee4 (gdb 4.0) info editing # \u663e\u793a\u5386\u53f2\u547d\u4ee4 (gdb 3.5) ESC-CTRL-J # \u5207\u6362\u5230 Vi \u547d\u4ee4\u884c\u7f16\u8f91\u6a21\u5f0f set history expansion on # \u5141\u8bb8\u7c7b c-shell \u7684\u5386\u53f2 break class::member # \u5728\u7c7b\u6210\u5458\u5904\u8bbe\u7f6e\u65ad\u70b9 list class:member # \u663e\u793a\u7c7b\u6210\u5458\u4ee3\u7801 ptype class # \u67e5\u770b\u7c7b\u5305\u542b\u7684\u6210\u5458 print *this # \u67e5\u770b this \u6307\u9488 rbreak { regexpr } # \u5339\u914d\u6b63\u5219\u7684\u51fd\u6570\u524d\u65ad\u70b9\uff0c\u5982 ex_* \u5c06\u65ad\u70b9 ex_ \u5f00\u5934\u7684\u51fd\u6570 ############################################################################## # \u5176\u4ed6\u547d\u4ee4 ############################################################################## define command ... end # \u5b9a\u4e49\u7528\u6237\u547d\u4ee4 < return > # \u76f4\u63a5\u6309\u56de\u8f66\u6267\u884c\u4e0a\u4e00\u6761\u6307\u4ee4 shell { command } [ args ] # \u6267\u884c shell \u547d\u4ee4 source { file } # \u4ece\u6587\u4ef6\u52a0\u8f7d gdb \u547d\u4ee4 quit # \u9000\u51fa gdb ############################################################################## # GDB \u524d\u7aef ############################################################################## gdb-tui \u4f7f\u7528 gdb -tui \u542f\u52a8 cgdb http://cgdb.github.io/ emacs http://gnu.org/software/emacs gdbgui https://github.com/cs01/gdbgui GDB \u56fe\u5f62\u5316\u524d\u7aef\u8bc4\u6d4b http://www.skywind.me/blog/archives/2036 ############################################################################## # References ############################################################################## https://sourceware.org/gdb/current/onlinedocs/gdb/ https://kapeli.com/cheat_sheets/GDB.docset/Contents/Resources/Documents/index http://www.yolinux.com/TUTORIALS/GDB-Commands.html https://gist.github.com/rkubik/b96c23bd8ed58333de37f2b8cd052c30 http://security.cs.pub.ro/hexcellents/wiki/kb/toolset/gdb # vim: set ts=4 sw=4 tw=0 noet ft=gdb:","title":"GDB Cheat Sheet"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E8%AF%91%E8%B0%83%E8%AF%95/GDB-Cheat/#gdb-cheat-sheet","text":"############################################################################## # GDB CHEATSHEET (\u4e2d\u6587\u901f\u67e5\u8868) - by skywind (created on 2018/02/20) # Version: 8, Last Modified: 2018/02/28 17:13 # https://github.com/skywind3000/awesome-cheatsheets ############################################################################## ############################################################################## # \u542f\u52a8 GDB ############################################################################## gdb object # \u6b63\u5e38\u542f\u52a8\uff0c\u52a0\u8f7d\u53ef\u6267\u884c gdb object core # \u5bf9\u53ef\u6267\u884c + core \u6587\u4ef6\u8fdb\u884c\u8c03\u8bd5 gdb object pid # \u5bf9\u6b63\u5728\u6267\u884c\u7684\u8fdb\u7a0b\u8fdb\u884c\u8c03\u8bd5 gdb # \u6b63\u5e38\u542f\u52a8\uff0c\u542f\u52a8\u540e\u9700\u8981 file \u547d\u4ee4\u624b\u52a8\u52a0\u8f7d gdb -tui # \u542f\u7528 gdb \u7684\u6587\u672c\u754c\u9762 ############################################################################## # \u5e2e\u52a9\u4fe1\u606f ############################################################################## help # \u5217\u51fa\u547d\u4ee4\u5206\u7c7b help running # \u67e5\u770b\u67d0\u4e2a\u7c7b\u522b\u7684\u5e2e\u52a9\u4fe1\u606f help run # \u67e5\u770b\u547d\u4ee4 run \u7684\u5e2e\u52a9 help info # \u5217\u51fa\u67e5\u770b\u7a0b\u5e8f\u8fd0\u884c\u72b6\u6001\u76f8\u5173\u7684\u547d\u4ee4 help info line # \u5217\u51fa\u5177\u4f53\u7684\u4e00\u4e2a\u8fd0\u884c\u72b6\u6001\u547d\u4ee4\u7684\u5e2e\u52a9 help show # \u5217\u51fa GDB \u72b6\u6001\u76f8\u5173\u7684\u547d\u4ee4 help show commands # \u5217\u51fa show \u547d\u4ee4\u7684\u5e2e\u52a9 ############################################################################## # \u65ad\u70b9 ############################################################################## break main # \u5bf9\u51fd\u6570 main \u8bbe\u7f6e\u4e00\u4e2a\u65ad\u70b9\uff0c\u53ef\u7b80\u5199\u4e3a b main break 101 # \u5bf9\u6e90\u4ee3\u7801\u7684\u884c\u53f7\u8bbe\u7f6e\u65ad\u70b9\uff0c\u53ef\u7b80\u5199\u4e3a b 101 break basic.c:101 # \u5bf9\u6e90\u4ee3\u7801\u548c\u884c\u53f7\u8bbe\u7f6e\u65ad\u70b9 break basic.c:foo # \u5bf9\u6e90\u4ee3\u7801\u548c\u51fd\u6570\u540d\u8bbe\u7f6e\u65ad\u70b9 break *0x00400448 # \u5bf9\u5185\u5b58\u5730\u5740 0x00400448 \u8bbe\u7f6e\u65ad\u70b9 info breakpoints # \u5217\u51fa\u5f53\u524d\u7684\u6240\u6709\u65ad\u70b9\u4fe1\u606f\uff0c\u53ef\u7b80\u5199\u4e3a info break delete 1 # \u6309\u7f16\u53f7\u5220\u9664\u4e00\u4e2a\u65ad\u70b9 delete # \u5220\u9664\u6240\u6709\u65ad\u70b9 clear # \u5220\u9664\u5728\u5f53\u524d\u884c\u7684\u65ad\u70b9 clear function # \u5220\u9664\u51fd\u6570\u65ad\u70b9 clear line # \u5220\u9664\u884c\u53f7\u65ad\u70b9 clear basic.c:101 # \u5220\u9664\u6587\u4ef6\u540d\u548c\u884c\u53f7\u7684\u65ad\u70b9 clear basic.c:main # \u5220\u9664\u6587\u4ef6\u540d\u548c\u51fd\u6570\u540d\u7684\u65ad\u70b9 clear *0x00400448 # \u5220\u9664\u5185\u5b58\u5730\u5740\u7684\u65ad\u70b9 disable 2 # \u7981\u7528\u67d0\u65ad\u70b9\uff0c\u4f46\u662f\u90e8\u5220\u9664 enable 2 # \u5141\u8bb8\u67d0\u4e2a\u4e4b\u524d\u88ab\u7981\u7528\u7684\u65ad\u70b9\uff0c\u8ba9\u5b83\u751f\u6548 tbreak function | line # \u4e34\u65f6\u65ad\u70b9 ignore { id } { count } # \u5ffd\u7565\u67d0\u65ad\u70b9 N-1 \u6b21 condition { id } { expr } # \u6761\u4ef6\u65ad\u70b9\uff0c\u53ea\u6709\u5728\u6761\u4ef6\u751f\u6548\u65f6\u624d\u53d1\u751f condition 2 i == 20 # 2\u53f7\u65ad\u70b9\u53ea\u6709\u5728 i == 20 \u6761\u4ef6\u4e3a\u771f\u65f6\u624d\u751f\u6548 watch { expr } # \u5bf9\u53d8\u91cf\u8bbe\u7f6e\u76d1\u89c6\u70b9 info watchpoints # \u663e\u793a\u6240\u6709\u89c2\u5bdf\u70b9 ############################################################################## # \u8fd0\u884c\u7a0b\u5e8f ############################################################################## run # \u8fd0\u884c\u7a0b\u5e8f run { args } # \u4ee5\u67d0\u53c2\u6570\u8fd0\u884c\u7a0b\u5e8f run < file # \u4ee5\u67d0\u6587\u4ef6\u4e3a\u6807\u51c6\u8f93\u5165\u8fd0\u884c\u7a0b\u5e8f run < < ( cmd ) # \u4ee5\u67d0\u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a\u6807\u51c6\u8f93\u5165\u8fd0\u884c\u7a0b\u5e8f run <<< $( cmd ) # \u4ee5\u67d0\u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a\u6807\u51c6\u8f93\u5165\u8fd0\u884c\u7a0b\u5e8f set args { args } ... # \u8bbe\u7f6e\u8fd0\u884c\u7684\u53c2\u6570 show args # \u663e\u793a\u5f53\u524d\u7684\u8fd0\u884c\u53c2\u6570 cont # \u7ee7\u7eed\u8fd0\u884c\uff0c\u53ef\u7b80\u5199\u4e3a c step # \u5355\u6b65\u8fdb\u5165\uff0c\u78b0\u5230\u51fd\u6570\u4f1a\u8fdb\u53bb step { count } # \u5355\u6b65\u591a\u5c11\u6b21 next # \u5355\u6b65\u8df3\u8fc7\uff0c\u78b0\u5230\u51fd\u6570\u4e0d\u4f1a\u8fdb\u5165 next { count } # \u5355\u6b65\u591a\u5c11\u6b21 CTRL+C # \u53d1\u9001 SIGINT \u4fe1\u53f7\uff0c\u4e2d\u6b62\u5f53\u524d\u8fd0\u884c\u7684\u7a0b\u5e8f attach { process-id } # \u94fe\u63a5\u4e0a\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u5f00\u59cb\u8c03\u8bd5 detach # \u65ad\u5f00\u8fdb\u7a0b\u94fe\u63a5 finish # \u7ed3\u675f\u5f53\u524d\u51fd\u6570\u7684\u8fd0\u884c until # \u6301\u7eed\u6267\u884c\u76f4\u5230\u4ee3\u7801\u884c\u53f7\u5927\u4e8e\u5f53\u524d\u884c\u53f7\uff08\u8df3\u51fa\u5faa\u73af\uff09 until { line } # \u6301\u7eed\u6267\u884c\u76f4\u5230\u6267\u884c\u5230\u67d0\u884c kill # \u6740\u6b7b\u5f53\u524d\u8fd0\u884c\u7684\u51fd\u6570 ############################################################################## # \u6808\u5e27 ############################################################################## bt # \u6253\u5370 backtrace frame # \u663e\u793a\u5f53\u524d\u8fd0\u884c\u7684\u6808\u5e27 up # \u5411\u4e0a\u79fb\u52a8\u6808\u5e27\uff08\u5411\u7740 main \u51fd\u6570\uff09 down # \u5411\u4e0b\u79fb\u52a8\u6808\u5e27\uff08\u8fdc\u79bb main \u51fd\u6570\uff09 info locals # \u6253\u5370\u5e27\u5185\u7684\u76f8\u5173\u53d8\u91cf info args # \u6253\u5370\u51fd\u6570\u7684\u53c2\u6570 ############################################################################## # \u4ee3\u7801\u6d4f\u89c8 ############################################################################## list 101 # \u663e\u793a\u7b2c 101 \u884c\u5468\u56f4 10\u884c\u4ee3\u7801 list 1 ,10 # \u663e\u793a 1 \u5230 10 \u884c\u4ee3\u7801 list main # \u663e\u793a\u51fd\u6570\u5468\u56f4\u4ee3\u7801 list basic.c:main # \u663e\u793a\u53e6\u5916\u4e00\u4e2a\u6e90\u4ee3\u7801\u6587\u4ef6\u7684\u51fd\u6570\u5468\u56f4\u4ee3\u7801 list - # \u91cd\u590d\u4e4b\u524d 10 \u884c\u4ee3\u7801 list *0x22e4 # \u663e\u793a\u7279\u5b9a\u5730\u5740\u7684\u4ee3\u7801 cd dir # \u5207\u6362\u5f53\u524d\u76ee\u5f55 pwd # \u663e\u793a\u5f53\u524d\u76ee\u5f55 search { regexpr } # \u5411\u524d\u8fdb\u884c\u6b63\u5219\u641c\u7d22 reverse-search { regexp } # \u5411\u540e\u8fdb\u884c\u6b63\u5219\u641c\u7d22 dir { dirname } # \u589e\u52a0\u6e90\u4ee3\u7801\u641c\u7d22\u8def\u5f84 dir # \u590d\u4f4d\u6e90\u4ee3\u7801\u641c\u7d22\u8def\u5f84\uff08\u6e05\u7a7a\uff09 show directories # \u663e\u793a\u6e90\u4ee3\u7801\u8def\u5f84 ############################################################################## # \u6d4f\u89c8\u6570\u636e ############################################################################## print { expression } # \u6253\u5370\u8868\u8fbe\u5f0f\uff0c\u5e76\u4e14\u589e\u52a0\u5230\u6253\u5370\u5386\u53f2 print /x { expression } # \u5341\u516d\u8fdb\u5236\u8f93\u51fa\uff0cprint \u53ef\u4ee5\u7b80\u5199\u4e3a p print array [ i ] @count # \u6253\u5370\u6570\u7ec4\u8303\u56f4 print $ # \u6253\u5370\u4e4b\u524d\u7684\u53d8\u91cf print * $- >next # \u6253\u5370 list print $1 # \u8f93\u51fa\u6253\u5370\u5386\u53f2\u91cc\u7b2c\u4e00\u6761 print ::gx # \u5c06\u53d8\u91cf\u53ef\u89c6\u8303\u56f4\uff08scope\uff09\u8bbe\u7f6e\u4e3a\u5168\u5c40 print 'basic.c' ::gx # \u6253\u5370\u67d0\u6e90\u4ee3\u7801\u91cc\u7684\u5168\u5c40\u53d8\u91cf\uff0c(gdb 4.6) print /x & main # \u6253\u5370\u51fd\u6570\u5730\u5740 x *0x11223344 # \u663e\u793a\u7ed9\u5b9a\u5730\u5740\u7684\u5185\u5b58\u6570\u636e x /nfu { address } # \u6253\u5370\u5185\u5b58\u6570\u636e\uff0cn\u662f\u591a\u5c11\u4e2a\uff0cf\u662f\u683c\u5f0f\uff0cu\u662f\u5355\u4f4d\u5927\u5c0f x /10xb *0x11223344 # \u6309\u5341\u516d\u8fdb\u5236\u6253\u5370\u5185\u5b58\u5730\u5740 0x11223344 \u5904\u7684\u5341\u4e2a\u5b57\u8282 x/x & gx # \u6309\u5341\u516d\u8fdb\u5236\u6253\u5370\u53d8\u91cf gx\uff0cx\u548c\u659c\u6746\u540e\u53c2\u6570\u53ef\u4ee5\u8fde\u5199 x/4wx & main # \u6309\u5341\u516d\u8fdb\u5236\u6253\u5370\u4f4d\u4e8e main \u51fd\u6570\u5f00\u5934\u7684\u56db\u4e2a long x/gf & gd1 # \u6253\u5370 double \u7c7b\u578b help x # \u67e5\u770b\u5173\u4e8e x \u547d\u4ee4\u7684\u5e2e\u52a9 info locals # \u6253\u5370\u672c\u5730\u5c40\u90e8\u53d8\u91cf info functions { regexp } # \u6253\u5370\u51fd\u6570\u540d\u79f0 info variables { regexp } # \u6253\u5370\u5168\u5c40\u53d8\u91cf\u540d\u79f0 ptype name # \u67e5\u770b\u7c7b\u578b\u5b9a\u4e49\uff0c\u6bd4\u5982 ptype FILE\uff0c\u67e5\u770b FILE \u7ed3\u6784\u4f53\u5b9a\u4e49 whatis { expression } # \u67e5\u770b\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b set var = { expression } # \u53d8\u91cf\u8d4b\u503c display { expression } # \u5728\u5355\u6b65\u6307\u4ee4\u540e\u67e5\u770b\u67d0\u8868\u8fbe\u5f0f\u7684\u503c undisplay # \u5220\u9664\u5355\u6b65\u540e\u5bf9\u67d0\u4e9b\u503c\u7684\u76d1\u63a7 info display # \u663e\u793a\u76d1\u89c6\u7684\u8868\u8fbe\u5f0f show values # \u67e5\u770b\u8bb0\u5f55\u5230\u6253\u5370\u5386\u53f2\u4e2d\u7684\u53d8\u91cf\u7684\u503c (gdb 4.0) info history # \u67e5\u770b\u6253\u5370\u5386\u53f2\u7684\u5e2e\u52a9 (gdb 3.5) ############################################################################## # \u76ee\u6807\u6587\u4ef6\u64cd\u4f5c ############################################################################## file { object } # \u52a0\u8f7d\u65b0\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4f9b\u8c03\u8bd5 file # \u653e\u5f03\u53ef\u6267\u884c\u548c\u7b26\u53f7\u8868\u4fe1\u606f symbol-file { object } # \u4ec5\u52a0\u8f7d\u7b26\u53f7\u8868 exec-file { object } # \u6307\u5b9a\u7528\u4e8e\u8c03\u8bd5\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff08\u975e\u7b26\u53f7\u8868\uff09 core-file { core } # \u52a0\u8f7d core \u7528\u4e8e\u5206\u6790 ############################################################################## # \u4fe1\u53f7\u63a7\u5236 ############################################################################## info signals # \u6253\u5370\u4fe1\u53f7\u8bbe\u7f6e handle { signo } { actions } # \u8bbe\u7f6e\u4fe1\u53f7\u7684\u8c03\u8bd5\u884c\u4e3a handle INT print # \u4fe1\u53f7\u53d1\u751f\u65f6\u6253\u5370\u4fe1\u606f handle INT noprint # \u4fe1\u53f7\u53d1\u751f\u65f6\u4e0d\u6253\u5370\u4fe1\u606f handle INT stop # \u4fe1\u53f7\u53d1\u751f\u65f6\u4e2d\u6b62\u88ab\u8c03\u8bd5\u7a0b\u5e8f handle INT nostop # \u4fe1\u53f7\u53d1\u751f\u65f6\u4e0d\u4e2d\u6b62\u88ab\u8c03\u8bd5\u7a0b\u5e8f handle INT pass # \u8c03\u8bd5\u5668\u63a5\u83b7\u4fe1\u53f7\uff0c\u4e0d\u8ba9\u7a0b\u5e8f\u77e5\u9053 handle INT nopass # \u8c03\u8bd5\u8d77\u4e0d\u63a5\u83b7\u4fe1\u53f7 signal signo # \u7ee7\u7eed\u5e76\u5c06\u4fe1\u53f7\u8f6c\u79fb\u7ed9\u7a0b\u5e8f signal 0 # \u7ee7\u7eed\u4f46\u4e0d\u628a\u4fe1\u53f7\u7ed9\u7a0b\u5e8f ############################################################################## # \u7ebf\u7a0b\u8c03\u8bd5 ############################################################################## info threads # \u67e5\u770b\u5f53\u524d\u7ebf\u7a0b\u548c id thread { id } # \u5207\u6362\u5f53\u524d\u8c03\u8bd5\u7ebf\u7a0b\u4e3a\u6307\u5b9a id \u7684\u7ebf\u7a0b break { line } thread all # \u6240\u6709\u7ebf\u7a0b\u5728\u6307\u5b9a\u884c\u53f7\u5904\u8bbe\u7f6e\u65ad\u70b9 thread apply { id.. } cmd # \u6307\u5b9a\u591a\u4e2a\u7ebf\u7a0b\u5171\u540c\u6267\u884c gdb \u547d\u4ee4 thread apply all cmd # \u6240\u6709\u7ebf\u7a0b\u5171\u540c\u6267\u884c gdb \u547d\u4ee4 set schedule-locking ? # \u8c03\u8bd5\u4e00\u4e2a\u7ebf\u7a0b\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u662f\u5426\u6267\u884c\uff0coff|on|step set non-stop on/off # \u8c03\u8bd5\u4e00\u4e2a\u7ebf\u7a0b\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u662f\u5426\u8fd0\u884c set pagination on/off # \u8c03\u8bd5\u4e00\u4e2a\u7ebf\u7a0b\u65f6\uff0c\u5206\u9875\u662f\u5426\u505c\u6b62 set target-async on/off # \u540c\u6b65\u6216\u8005\u5f02\u6b65\u8c03\u8bd5\uff0c\u662f\u5426\u7b49\u5f85\u7ebf\u7a0b\u4e2d\u6b62\u7684\u4fe1\u606f ############################################################################## # \u8fdb\u7a0b\u8c03\u8bd5 ############################################################################## info inferiors # \u67e5\u770b\u5f53\u524d\u8fdb\u7a0b\u548c id inferior { id } # \u5207\u6362\u67d0\u4e2a\u8fdb\u7a0b kill inferior { id... } # \u6740\u6b7b\u67d0\u4e2a\u8fdb\u7a0b set detach-on-fork on/off # \u8bbe\u7f6e\u5f53\u8fdb\u7a0b\u8c03\u7528fork\u65f6gdb\u662f\u5426\u540c\u65f6\u8c03\u8bd5\u7236\u5b50\u8fdb\u7a0b set follow-fork-mode parent/child # \u8bbe\u7f6e\u5f53\u8fdb\u7a0b\u8c03\u7528fork\u65f6\u662f\u5426\u8fdb\u5165\u5b50\u8fdb\u7a0b ############################################################################## # \u6c47\u7f16\u8c03\u8bd5 ############################################################################## info registers # \u6253\u5370\u666e\u901a\u5bc4\u5b58\u5668 info all-registers # \u6253\u5370\u6240\u6709\u5bc4\u5b58\u5668 print/x $pc # \u6253\u5370\u5355\u4e2a\u5bc4\u5b58\u5668 stepi # \u6307\u4ee4\u7ea7\u522b\u5355\u6b65\u8fdb\u5165\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a si nexti # \u6307\u4ee4\u7ea7\u522b\u5355\u6b65\u8df3\u8fc7\uff0c\u53ef\u4ee5\u7b80\u5199\u4e3a ni display/i $pc # \u76d1\u63a7\u5bc4\u5b58\u5668\uff08\u6bcf\u6761\u5355\u6b65\u5b8c\u4ee5\u540e\u4f1a\u81ea\u52a8\u6253\u5370\u503c\uff09 x/x & gx # \u5341\u516d\u8fdb\u5236\u6253\u5370\u53d8\u91cf info line 22 # \u6253\u5370\u884c\u53f7\u4e3a 22 \u7684\u5185\u5b58\u5730\u5740\u4fe1\u606f info line *0x2c4e # \u6253\u5370\u7ed9\u5b9a\u5185\u5b58\u5730\u5740\u5bf9\u5e94\u7684\u6e90\u4ee3\u7801\u548c\u884c\u53f7\u4fe1\u606f disassemble { addr } # \u5bf9\u5730\u5740\u8fdb\u884c\u53cd\u6c47\u7f16\uff0c\u6bd4\u5982 disassemble 0x2c4e ############################################################################## # \u5386\u53f2\u4fe1\u606f ############################################################################## show commands # \u663e\u793a\u5386\u53f2\u547d\u4ee4 (gdb 4.0) info editing # \u663e\u793a\u5386\u53f2\u547d\u4ee4 (gdb 3.5) ESC-CTRL-J # \u5207\u6362\u5230 Vi \u547d\u4ee4\u884c\u7f16\u8f91\u6a21\u5f0f set history expansion on # \u5141\u8bb8\u7c7b c-shell \u7684\u5386\u53f2 break class::member # \u5728\u7c7b\u6210\u5458\u5904\u8bbe\u7f6e\u65ad\u70b9 list class:member # \u663e\u793a\u7c7b\u6210\u5458\u4ee3\u7801 ptype class # \u67e5\u770b\u7c7b\u5305\u542b\u7684\u6210\u5458 print *this # \u67e5\u770b this \u6307\u9488 rbreak { regexpr } # \u5339\u914d\u6b63\u5219\u7684\u51fd\u6570\u524d\u65ad\u70b9\uff0c\u5982 ex_* \u5c06\u65ad\u70b9 ex_ \u5f00\u5934\u7684\u51fd\u6570 ############################################################################## # \u5176\u4ed6\u547d\u4ee4 ############################################################################## define command ... end # \u5b9a\u4e49\u7528\u6237\u547d\u4ee4 < return > # \u76f4\u63a5\u6309\u56de\u8f66\u6267\u884c\u4e0a\u4e00\u6761\u6307\u4ee4 shell { command } [ args ] # \u6267\u884c shell \u547d\u4ee4 source { file } # \u4ece\u6587\u4ef6\u52a0\u8f7d gdb \u547d\u4ee4 quit # \u9000\u51fa gdb ############################################################################## # GDB \u524d\u7aef ############################################################################## gdb-tui \u4f7f\u7528 gdb -tui \u542f\u52a8 cgdb http://cgdb.github.io/ emacs http://gnu.org/software/emacs gdbgui https://github.com/cs01/gdbgui GDB \u56fe\u5f62\u5316\u524d\u7aef\u8bc4\u6d4b http://www.skywind.me/blog/archives/2036 ############################################################################## # References ############################################################################## https://sourceware.org/gdb/current/onlinedocs/gdb/ https://kapeli.com/cheat_sheets/GDB.docset/Contents/Resources/Documents/index http://www.yolinux.com/TUTORIALS/GDB-Commands.html https://gist.github.com/rkubik/b96c23bd8ed58333de37f2b8cd052c30 http://security.cs.pub.ro/hexcellents/wiki/kb/toolset/gdb # vim: set ts=4 sw=4 tw=0 noet ft=gdb:","title":"GDB Cheat Sheet"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E8%BE%91%E4%B8%8E%E7%BC%96%E8%BE%91%E5%99%A8/Markdown%E6%8B%BE%E9%81%97/","text":"\u4e0d\u7ecf\u5e38\u4f7f\u7528\u7684 \u00b6 \u5220\u9664\u7ebf ~~\u5220\u9664\u7ebf~~ \u5220\u9664\u7ebf","title":"Markdown\u62fe\u9057"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E8%BE%91%E4%B8%8E%E7%BC%96%E8%BE%91%E5%99%A8/Markdown%E6%8B%BE%E9%81%97/#_1","text":"\u5220\u9664\u7ebf ~~\u5220\u9664\u7ebf~~ \u5220\u9664\u7ebf","title":"\u4e0d\u7ecf\u5e38\u4f7f\u7528\u7684"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E8%BE%91%E4%B8%8E%E7%BC%96%E8%BE%91%E5%99%A8/Typora/","text":"\u6253\u5f00typora open -a typora \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6 open -a typora \u6587\u4ef6\u540d \u6253\u5f00\u6307\u5b9a\u76ee\u5f55 open -a typora \u76ee\u5f55\u540d \u4f5c\u4e3a\u547d\u4ee4\u884c\u4f7f\u7528,\u5728 .zshrc \u6216 .bashrc \u52a0\u5165 alias typora = \"open -a typora\"","title":"Typora"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E8%BE%91%E4%B8%8E%E7%BC%96%E8%BE%91%E5%99%A8/VIM/","text":"VIM\u62fe\u9057 \u00b6 \u63d2\u5165\u666e\u901a\u6a21\u5f0f,\u53ea\u6267\u884c\u4e00\u6b21\u547d\u4ee4\u7136\u540e\u8fd4\u56de\u5230\u63d2\u5165\u6a21\u5f0f ^+o \u63d2\u5165\u6a21\u5f0f\u4e0b, +w\u5220\u9664\u524d\u4e00\u4e2a\u5355\u8bcd, +u \u5220\u9664\u5230\u884c\u9996,^+h\u5220\u9664\u524d\u4e00\u4e2a\u5b57\u7b26,shell\u4e0b\u4e5f\u9002\u7528 ^+r+[0..9] \u63d2\u5165\u6a21\u5f0f\u4e0b,\u63d2\u51650..9\u5bc4\u5b58\u5668\u5185\u5bb9 ^+v ,\u5217\u6a21\u5f0f","title":"VIM"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E8%BE%91%E4%B8%8E%E7%BC%96%E8%BE%91%E5%99%A8/VIM/#vim","text":"\u63d2\u5165\u666e\u901a\u6a21\u5f0f,\u53ea\u6267\u884c\u4e00\u6b21\u547d\u4ee4\u7136\u540e\u8fd4\u56de\u5230\u63d2\u5165\u6a21\u5f0f ^+o \u63d2\u5165\u6a21\u5f0f\u4e0b, +w\u5220\u9664\u524d\u4e00\u4e2a\u5355\u8bcd, +u \u5220\u9664\u5230\u884c\u9996,^+h\u5220\u9664\u524d\u4e00\u4e2a\u5b57\u7b26,shell\u4e0b\u4e5f\u9002\u7528 ^+r+[0..9] \u63d2\u5165\u6a21\u5f0f\u4e0b,\u63d2\u51650..9\u5bc4\u5b58\u5668\u5185\u5bb9 ^+v ,\u5217\u6a21\u5f0f","title":"VIM\u62fe\u9057"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E8%BE%91%E4%B8%8E%E7%BC%96%E8%BE%91%E5%99%A8/VSCode/","text":"Launching from the command line \u00b6 You can also run VS Code from the terminal by typing 'code' after adding it to the path: Launch VS Code. Open the Command Palette (\u21e7\u2318P) and type 'shell command' to find the Shell Command: Install 'code' command in PATH command. Restart the terminal for the new $PATH value to take effect. You'll be able to type 'code .' in any folder to start editing files in that folder. Note: If you still have the old code alias in your .bash_profile (or equivalent) from an early VS Code version, remove it and replace it by executing the Shell Command: Install 'code' command in PATH command.","title":"VSCode"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E8%BE%91%E4%B8%8E%E7%BC%96%E8%BE%91%E5%99%A8/VSCode/#launching-from-the-command-line","text":"You can also run VS Code from the terminal by typing 'code' after adding it to the path: Launch VS Code. Open the Command Palette (\u21e7\u2318P) and type 'shell command' to find the Shell Command: Install 'code' command in PATH command. Restart the terminal for the new $PATH value to take effect. You'll be able to type 'code .' in any folder to start editing files in that folder. Note: If you still have the old code alias in your .bash_profile (or equivalent) from an early VS Code version, remove it and replace it by executing the Shell Command: Install 'code' command in PATH command.","title":"Launching from the command line"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/Nginx%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/","text":"Forward Proxy \u524d\u5411\u4ee3\u7406 Reverse Proxy \u53cd\u5411(\u8f6c)\u4ee3\u7406 \u6b63\u53cd\u5411\u90fd\u4ee5\u5ba2\u6237\u7aef\u4e3a\u53c2\u7167\u7269\u7684, \u6b63(\u524d)\u5411\u6307\u7684\u662f\u4ee3\u7406\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42, \u53cd\u5411(\u8f6c)\u4ee3\u7406\u6307\u662f\u7684\u4ee3\u7406\u670d\u52a1\u7aef\u7684(\u8fd4\u56de)\u8bf7\u6c42. \u6216\u8005\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u6b63\u5411\u4ee3\u7406\u662f\u5ba2\u6237\u7aef\u7684\u4ee3\u7406 ,\u53cd\u5411\u4ee3\u7406\u662f\u670d\u52a1\u7aef\u7684\u4ee3\u7406. Nginx\u7684\u7248\u672c \u5f00\u6e90\u7248\u672c nginx.org \u5546\u4e1a\u7248\u672c nginx.com TEngine \u65e0\u6cd5\u8ddf\u5b98\u65b9\u7248\u672c\u540c\u6b65 OenResty","title":"Nginx\u4e3a\u4ec0\u4e48\u53eb\u53cd\u5411\u4ee3\u7406"},{"location":"%E9%9F%B3%E4%B9%90/FenderST%E5%90%89%E4%BB%96%E9%9F%B3%E8%89%B2%E7%BA%BD%E4%BD%9C%E7%94%A8/","text":"Fender Stratocaster\u7684\u97f3\u8272\u94ae\u6709\u4e09\u4e2a,\u53ea\u6709\u4e24\u4e2a\u97f3\u8272\u94ae\uff0c\u5230\u5e95\u8c01\u7ba1\u8c01\uff1f \u58a8\u897f\u54e5\u4ea7\u5409\u4ed6\u7b2c\u4e00\u4e2a\u97f3\u8272\u94ae\u63a7\u5236\u7434\u9888\u62fe\u97f3\u5668\uff0c\u7b2c\u4e8c\u4e2a\u94ae\u63a7\u5236\u4e2d\u95f4\u62fe\u97f3\u5668\uff0c\u800c\u7434\u6865\u62fe\u97f3\u5668\u662f\u76f4\u901a\u7684\uff0c\u4e0d\u53d7\u65cb\u94ae\u63a7\u5236\uff1b\u800c\u7f8e\u4ea7\u5409\u4ed6\u7b2c\u4e00\u4e2a\u94ae\u76f8\u540c\uff0c\u7b2c\u4e8c\u4e2a\u94ae\u540c\u65f6\u63a7\u5236\u540e\u9762\u4e24\u7ec4\u62fe\u97f3\u5668\u3002","title":"FenderST\u5409\u4ed6\u97f3\u8272\u7ebd\u4f5c\u7528"},{"location":"%E9%9F%B3%E4%B9%90/ukulele%E5%A6%82%E4%BD%95%E6%89%AB%E5%BC%A6/","text":"\u770b\u4e86 Jake Shimabukuro\u5173\u4e8eukulele struming\u7684\u89c6\u9891 ,\u603b\u7ed3\u4e00\u4e0bUkulele\u7684\u626b\u5f26. \u5927\u90e8\u5206ukulele\u7684\u6559\u7a0b\u4e2d\u5bf9\u4e8e\u626b\u5f26\u7684\u4ecb\u7ecd\u8fc7\u4e8e\u5355\u4e00,\u5bf9\u4e8e\u7ec6\u8282\u63cf\u8ff0\u4e0d\u6e05,\u4e50\u5668\u7684\u6559\u5b66\u6700\u597d\u8fd8\u662f\u9762\u5bf9\u9762,\u81f3\u5c11\u9700\u8981\u89c6\u9891\u8f85\u52a9\u4e00\u4e0b. \u626b\u5f26\u6709\u4ee5\u4e0b\u51e0\u79cd\u6a21\u5f0f \u62c7\u6307\u4e0b\u626b \u98df\u6307\u4e0a\u626b \u62c7\u6307\u4e0e\u98df\u6307(\u5185\u6d4b) \u4f7f\u7528\u624b\u6307\u5185\u6d4b(\u6307\u809a\u4e00\u6d4b),\u58f0\u97f3\u6bd4\u8f83\u67d4\u548c \u62c7\u6307\u4e0e\u98df\u6307(\u6307\u7532) \u4f7f\u7528\u6307\u7532,\u58f0\u97f3\u660e\u4eae,\u66f4\u4e3a\u5e38\u7528 \u62c7\u6307\u4e0e\u98df\u6307\u5185\u6d4b\u626b\u5f26\u9700\u8981\u52a0\u4ee5\u7ec3\u4e60. ukulele\u7684\u626b\u5f26\u76f8\u6bd4\u5409\u4ed6\u66f4\u4f9d\u8d56\u4e8e\u624b\u8155,\u56e0\u4e3aukulele\u7684\u4f53\u79ef\u66f4\u4e3a\u5c0f\u5de7.","title":"Ukulele\u5982\u4f55\u626b\u5f26"},{"location":"%E9%9F%B3%E4%B9%90/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B0%83%E6%80%A7/","text":"\u4ec0\u4e48\u662f\u8c03\u6027\uff1f\u4ec0\u4e48\u662f\u5927\u5c0f\u8c03\u5f0f?! \u00b6 \u4ece\u79d1\u5b66\u7406\u89e3\u5927\u5c0f\u8c03\u77e5\u8bc6\uff0c\u63a2\u8ba8\u6709\u6548\u5b66\u4e60\u80cc\u540e\u7684\u601d\u7ef4\u6a21\u5f0f \u4f5c\u8005\uff1a\u963f\u6d17 \u94fe\u63a5\uff1a https://zhuanlan.zhihu.com/p/104798436 \u672c\u65875000+\u5b57\uff0c\u592a\u957f\u61d2\u5f97\u770b\u7684\uff0f\u53ea\u60f3\u770b\u5927\u5c0f\u8c03\u4e50\u7406\u89e3\u91ca\u7684\u4eba\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u524d\u9762\u90e8\u5206\uff0c\u770b\u7b2c\u4e8c\u8282\u5185\u5bb9\u3002 \u4ec0\u4e48\u662f\u8c03\u6027\uff1f\u4ec0\u4e48\u662f\u5173\u7cfb\u5927\u5c0f\u8c03\uff1f\u4ec0\u4e48\u662f\u548c\u58f0\u5c0f\u8c03\u548c\u65cb\u5f8b\u5c0f\u8c03\uff1f \u5b66\u94a2\u7434\u3001\u4e50\u7406\u7684\u4eba\u5f80\u5f80\u8bb0\u4f4f\u4e86\u5927\u5c0f\u8c03\u97f3\u9636\u7684\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8c03\u5f0f\u6709\u54ea\u4e9b\u5347\u964d\u53f7\uff0c\u4e5f\u53ef\u4ee5\u5f39\u7684\u5f88\u719f\u7ec3\uff0c\u4f46\u662f\u5f80\u5f80\u8fd8\u662f\u65e0\u6cd5\u7406\u89e3\u5b83\u4eec\u7684\u610f\u4e49\u3002 \u5f53\u4f60\u5728\u7f51\u4e0a\u641c\u7d22\u7b54\u6848\u7684\u65f6\u5019\uff0c\u770b\u5230\u7684\u89e3\u91ca\u6700\u666e\u904d\u662f\u8fd9\u4e24\u79cd\uff1a 1. \u540c\u4e3b\u97f3\u5927\u5c0f\u8c03\u5bf9\u6bd4\u6cd5 \u5927\u8c031 2 3 4 5 6 7 \u81ea\u7136\u5c0f\u8c031 2 b3 4 5 b6 b7 \u548c\u58f0\u5c0f\u8c031 2 b3 4 5 b6 7 1 \u65cb\u5f8b\u5c0f\u8c03\u4e0a\u884c\u53ea\u6709b3\uff0c\u4e0b\u884cb3 b6 b7 2. \u5173\u7cfb\u5927\u5c0f\u8c03\u8bb0\u5fc6\u6cd5 \u5927\u8c031 2 3 4 5 6 7 \u81ea\u7136\u5c0f\u8c036 7 1 2 3 4 5 \u548c\u58f0\u5c0f\u8c036 7 1 2 3 4 #5 (#VII) \u65cb\u5f8b\u5c0f\u8c03\u4e0a\u884c#4 (#VI) #5 (#VII)\uff0c\u4e0b\u884c\u8fd8\u539f **\u800c\u8c03\u6027\u65b9\u9762\uff0c\u4e3b\u8981\u8fd9\u4e48\u8bb0\u5fc6\uff1a**\u53474152637\uff0f\u964d7362514 \uff0f\u5347\u53f7\u6700\u540e\u4e00\u4e2a\u8c03\u53f7\u5f80\u9ad8\u4e00\u4e2a\u534a\u97f3\u662f\u8c03\u6027\u540d\u79f0\u3001\u964d\u53f7\u5012\u6570\u7b2c\u4e8c\u4e2a\u8c03\u53f7\u662f\u8c03\u6027\u540d\u79f0\u3002 \u5982\u679c\u4f60\u4e0d\u6ee1\u8db3\u8fd9\u6837\u7684\u89e3\u91ca\uff0c\u89c9\u5f97\u8111\u6d77\u4e2d\u7684\u7406\u89e3\u8fd8\u6709\u90a3\u4e48\u4e00\u4e2a\u6b7b\u89d2\u59cb\u7ec8\u94bb\u4e0d\u901a\uff0c\u90a3\u8fd9\u7bc7\u6587\u7ae0\u80fd\u5f88\u597d\u7684\u5e2e\u52a9\u4f60\u4ece\u6839\u57fa\u4e0a\u7406\u89e3\u5927\u5c0f\u8c03\u7684\u4e50\u7406\u77e5\u8bc6\u548c\u610f\u4e49\uff0c\u6211\u4e5f\u7edd\u4e0d\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\u6765\u9648\u8ff0\u8fd9\u4e2a\u77e5\u8bc6\u3002 \u4ee5\u4e0a\u8fd9\u4e9b\u7ed3\u8bba\uff0c\u90fd\u5bf9\uff1b\u8bb0\u5fc6\u7684\u65b9\u6cd5\uff0c\u4e5f\u6ca1\u4ec0\u4e48\u5927\u95ee\u9898\u53ef\u4ee5\u6311\u51fa\u6765\u8bf4\u3002 \u91cd\u70b9\u662f\uff0c\u6211\u4eec\u8bb0\u4f4f\u4e86\u8fd9\u4e9b\uff0c\u4f46\u6211\u4eec\u771f\u7684\u7406\u89e3\u5b83\u4eec\u5417\uff1f\u591a\u5c11\u4eba\u5728\u8bb0\u4f4f\u4e86\u5b83\u4eec\u5e76\u4e14\u719f\u7ec3\u5f39\u51fa\u6765\u7684\u540c\u65f6\uff0c\u8fd8\u5728\u5fc3\u4e2d\u601d\u8003\u7740\u4ee5\u4e0b\u95ee\u9898\uff1a \u4e3a\u4ec0\u4e48\u4f1a\u6709\u5927\u8c03\u548c\u5c0f\u8c03\u5b58\u5728\uff1f\u4e3a\u4ec0\u4e48\u8981\u7ec3\u5927\u8c03\u548c\u5c0f\u8c03\u97f3\u9636\uff1f\u4e3a\u4ec0\u4e48\u670924\u4e2a\u5927\u5c0f\u8c03\uff1f \u8fd9\u4e9b\u95ee\u9898\u5728\u7f51\u7edc\u4e0a\u53ef\u4ee5\u88ab\u5f88\u8f7b\u6613\u5730\u641c\u5230\u5bf9\u9898\u7684\u7b54\u6848\u3002 \u4f46\u662f\u636e\u6211\u7684\u641c\u7d22\u7ed3\u679c\uff0c\u6709\u5f88\u591a\u7b54\u6848\u4e0d\u8fc7\u662f\u63d0\u4f9b\u4e86\u53e6\u4e00\u5806\u7ed3\u8bba\uff0c\u6765\u8bc1\u660e\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e8e\u662f\uff0c\u4f60\u8d8a\u641c\u7d22\uff0c\u8d8a\u89c9\u5f97\u81ea\u5df1\u9700\u8981\u8bb0\u7684\u4e1c\u897f\u8d8a\u6765\u8d8a\u591a\uff0c\u8bb0\u5fc6\u7684\u6742\u4e71\u5206\u652f\u526a\u4e0d\u65ad\u7406\u8fd8\u4e71\u3002 \u641c\u4e3a\u5565\u6709\u5927\u5c0f\u8c03\uff0c\u522b\u4eba\u544a\u8bc9\u4f60\u8981\u8bb0\u5168\u5168\u534a\u5168\u5168\u5168\u534a\uff1b\u641c\u4e3a\u5565\u8981\u7ec3\u97f3\u9636\uff0c\u90fd\u8bf4\u8fd9\u94a2\u7434\u57fa\u672c\u529f\u5fc5\u987b\u5f97\u7ec3\u554a\uff01\u641c\u4e3a\u5565\u670924\u4e2a\u5927\u5c0f\u8c03\uff0c\u522b\u4eba\u53cd\u624b\u4e22\u8fc7\u6765\u4e00\u4e2a\u4e94\u5ea6\u5708\uff0c\u53eb\u4f60\u80cc\u5230\u80fd\u81ea\u5df1\u753b\u4e0b\u6765\u3002 \u6709\u65f6\u5019\u6211\u4eec\u4ee5\u4e3a\u6211\u4eec\u5728\u7406\u89e3\u77e5\u8bc6\uff0c\u5230\u5934\u6765\u4e5f\u53ea\u662f\u4e0d\u65ad\u5730\u53bb\u8bb0\u66f4\u591a\u7684\u4e1c\u897f\uff0c\u7136\u800c\u8bb0\u4f4f\u77e5\u8bc6\u2260\u7406\u89e3\u77e5\u8bc6\u3002 \u672c\u6587\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5e2e\u52a9\u4f60\u8f83\u8f7b\u677e\u5730\u7406\u89e3\u5927\u5c0f\u8c03\u4e50\u7406\u610f\u4e49\u7684\u601d\u7ef4\u89d2\u5ea6\uff0c\u5e2e\u4f60\u771f\u6b63\u8e0f\u5165\u53e4\u5178\u97f3\u4e50\u8c03\u5f0f\u7406\u89e3\u7684\u5165\u95e8\uff1b\u4e5f\u5206\u4eab\u4e00\u4e0b\u6211\u5728\u5b66\u4e60\u548c\u6559\u5b66\u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u597d\u7684\u601d\u7ef4\u6a21\u5f0f\uff0c\u5e0c\u671b\u5bf9\u4f60\u5b66\u4e60\u5176\u4ed6\u77e5\u8bc6\u65f6\u4e5f\u80fd\u6709\u5e2e\u52a9\u3002 1\u3001\u601d\u7ef4\u6a21\u5f0f\u6982\u8ff0 \u00b6 \u76ee\u524d\u5f88\u591a\u7406\u8bba\u6559\u79d1\u4e66\uff0c\u4e0d\u6b62\u662f\u97f3\u4e50\u7c7b\u76ee\u7684\u4e50\u7406\u4e66\uff0c\u8fd8\u5305\u62ec\u4e86\u6570\u5b66\u548c\u7f16\u7a0b\u4e4b\u7c7b\u7684\u7406\u79d1\u6559\u6750\uff0c\u8bb2\u89e3\u77e5\u8bc6\u7684\u65b9\u5f0f\u90fd\u662f\u975e\u5e38\u76f4\u89c2\u3001\u6709\u6982\u62ec\u6027\u7684\uff0c\u7531\u56e0\u81f3\u679c\uff0c\u5305\u542b\u7684\u5b9a\u4e49\u3001\u5b9a\u7406\u3001\u8bc1\u660e\u3001\u5230\u7ed3\u8bba\uff0c\u884c\u4e91\u6d41\u6c34\uff0c\u4e95\u4e95\u6709\u6761\u3002 \u5176\u5b9e\uff0c\u8fd9\u662f\u628a\u4eba\u7c7b\u53d1\u660e\u521b\u9020\u4e00\u9879\u4e8b\u7269\u6216\u7406\u8bba\u7684\u6b65\u9aa4\u5b8c\u5168\u98a0\u5012\u8fc7\u6765\u4e86\u3002\u5b83\u4eec\u76f4\u63a5\u544a\u8bc9\u4f60\u505a\u6cd5\u548c\u516c\u5f0f\uff0c\u4f9b\u4f60\u53bb\u9a8c\u8bc1\u8fd9\u5957\u7406\u8bba\u662f\u53ef\u884c\u7684\u3002\u800c\u5173\u4e8e\u8fd9\u5957\u7406\u8bba\u662f\u600e\u4e48\u8bde\u751f\u7684\uff0c\u4e2d\u95f4\u7ecf\u5386\u4e86\u600e\u6837\u7684\u5386\u53f2\u8fdb\u7a0b\u548c\u601d\u8003\u8fc7\u7a0b\uff0c\u5f88\u5c11\u6709\u7406\u8bba\u4e66\u7c4d\u80fd\u8be6\u7ec6\u5730\u9610\u8ff0\u3002 \u5c31\u50cf\u6309\u7167\u672c\u6587\u5f00\u5934\u7684\u4e24\u79cd\u65b9\u6cd5\uff0c\u8bb0\u4f4f\u4e86\u5927\u5c0f\u8c03\u7684\u8868\u9762\u7ed3\u6784\uff0c\u53ef\u80fd\u7d27\u63a5\u7740\u5c31\u8ba9\u4f60\u505a\u4e50\u7406\u9898\uff0c\u5f00\u59cb\u5206\u6790\u8fd9\u4e2a\u8c03\u5f0f\u600e\u4e48\u5199\u3001\u90a3\u9996\u4e50\u66f2\u662f\u4ec0\u4e48\u8c03\uff0c\u5374\u6ca1\u6709\u65f6\u95f4\u6765\u601d\u8003\u4e00\u4e0b\u5927\u5c0f\u8c03\u662f\u600e\u4e48\u6765\u7684\u3002\u4ea6\u6216\u8005\u662f\u6211\u4eec\u9ad8\u4e2d\u505a\u6570\u5b66\u9898\u65f6\u80cc\u4f4f\u7684\u90a3\u4e9b\u590d\u6742\u516c\u5f0f\uff0c\u5176\u5b9e\u5b83\u4eec\u90fd\u5df2\u7ecf\u7ecf\u5386\u4e86\u65e0\u6570\u7684\u94bb\u7814\u548c\u78b0\u649e\uff0c\u624d\u88ab\u9ad8\u5ea6\u603b\u7ed3\u51fa\u6765\u7684\u77e5\u8bc6\u7ed3\u6676\u3002 \u7136\u800c\u201c\u6211\u4eec\u8981\u7684\u4e0d\u662f\u76f8\u5bf9\u8bba\uff0c\u800c\u662f\u8bde\u751f\u76f8\u5bf9\u8bba\u7684\u90a3\u4e2a\u5927\u8111\u201d\u3002 \u4f46\u662f\uff0c\u8bb0\u4f4f\u5df2\u6709\u7684\u77e5\u8bc6\uff0c\u53bb\u521b\u9020\u66f4\u591a\u7684\u77e5\u8bc6\uff0c\u7528\u5df2\u6709\u7684\u8f6e\u5b50\uff0c\u53bb\u9020\u4e00\u4e2a\u53c8\u4e00\u4e2a\u66f4\u5927\u7684\u8f6e\u5b50\uff0c\u8fd9\u662f\u65f6\u4ee3\u53d1\u5c55\u4e0d\u53ef\u907f\u514d\u7684\u8d8b\u52bf\uff0c\u4e3a\u4e86\u8ba9\u7406\u8bba\u548c\u77e5\u8bc6\u6c34\u5e73\u9ad8\u6548\u5730\u8fed\u4ee3\u53d1\u5c55\uff0c\u6211\u4eec\u5927\u591a\u6570\u65f6\u5019\u53ea\u6709\u8bb0\u4f4f\u77e5\u8bc6\u7684\u4efd\u3002 \u5982\u679c\u6211\u4eec\u5728\u81ea\u6211\u5b66\u4e60\u548c\u6559\u5b66\u4e2d\uff0c\u80fd\u900f\u8fc7\u73b0\u8c61\uff0c\u4ece\u96f6\u5f00\u59cb\u8ddf\u5b66\u751f\u4e00\u8d77\u63a2\u7d22\u77e5\u8bc6\u7684\u53d1\u5c55\u8fc7\u7a0b\uff0c\u4ece\u5386\u53f2\u548c\u903b\u8f91\u89d2\u5ea6\u8fd8\u539f\u77e5\u8bc6\u80cc\u540e\u53d1\u5c55\u7684\u8fc7\u7a0b\uff0c\u624b\u628a\u624b\u5730\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u63a8\u7406\u4e00\u904d\uff0c\u8ba9\u5b66\u751f\u4e5f\u80fd\u7406\u89e3\u8fd9\u9879\u4e8b\u7269\u548c\u7406\u8bba\u53d1\u5c55\u7684\u8fc7\u7a0b\uff0c\u8fd9\u6837\u4e0d\u4ec5\u6700\u540e\u5e2e\u52a9\u4ed6\u4eec\u7406\u89e3\u4e86\u77e5\u8bc6\uff0c\u4e5f\u8bad\u7ec3\u4e86\u601d\u7ef4\u80fd\u529b\u3002 2\u3001\u5148\u6709\u97f3\u4e50\uff0c\u540e\u6709\u4e50\u7406 \u00b6 \u8981\u7406\u89e3\u5927\u5c0f\u8c03\u7684\u6982\u5ff5\uff0c\u6709\u4e00\u4e2a\u539f\u5219\u8981\u5148\u660e\u767d\uff1a\u5148\u6709\u97f3\u4e50\uff0c\u540e\u6709\u4e50\u7406\u3002 \u8fd9\u4e2a\u903b\u8f91\u5173\u7cfb\u5c31\u548c\u201c\u5148\u6709\u8bed\u8a00\uff0c\u540e\u6709\u8bed\u6cd5\u201d\u4e00\u6837\u3002 \u4e50\u7406\u662f\u5bf9\u97f3\u4e50\u7684\u4e00\u79cd\u603b\u7ed3\uff0c\u5c31\u50cf\u82f1\u8bed\u7684\u8bed\u6cd5\u4e00\u6837\uff0c\u8bf4\u7684\u4eba\u591a\u4e86\uff0c\u4e8e\u662f\u6839\u636e\u5927\u91cf\u88ab\u4f7f\u7528\u7684\u5e38\u89c4\u8bed\u5e8f\u89c4\u5f8b\u603b\u7ed3\u51fa\u6765\u7684\u8bed\u6cd5\uff1b\u5404\u79cd\u97f3\u4e50\u591a\u4e86\uff0c\u6839\u636e\u5927\u91cf\u7684\u97f3\u4e50\u8868\u73b0\u5f62\u5f0f\u603b\u7ed3\u51fa\u6765\u7684\u4e00\u5957\u7406\u8bba\u3002 \u6240\u4ee5\uff0c\u5728\u5b66\u4e60\u82f1\u8bed\u4e2d\u4f1a\u51fa\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u4e5f\u5927\u91cf\u5730\u51fa\u73b0\u5728\u5b66\u4e60\u97f3\u4e50\u4e2d\uff1a\u5f88\u591a\u82f1\u8bed\u4e3a\u6bcd\u8bed\u7684\u4eba\u5e38\u5e38\u4f1a\u4f7f\u7528\u4e00\u4e9b\u5728\u6807\u51c6\u8bed\u6cd5\u4e66\u4e0a\u884c\u4e0d\u901a\u7684\u201c\u9519\u8bef\u201d\u8bed\u6cd5\uff1b\u73b0\u4ee3\u97f3\u4e50\u7684\u53d1\u5c55\u4e5f\u5f00\u59cb\u8131\u79bb\u4f20\u7edf\u4e50\u7406\u7684\u5c40\u9650\uff0c\u4f7f\u7528\u4e00\u4e9b\u5728\u4ee5\u524d\u770b\u6765\u662f\u4e0d\u5408\u7406\u7684\u548c\u58f0\u8fdb\u884c\u3001\u8c03\u5f0f\u7cfb\u7edf\u7b49\u3002\u4e0d\u8fc7\u8fd9\u70b9\u4e0d\u5728\u4eca\u5929\u7684\u4e3b\u8981\u8ba8\u8bba\u8303\u56f4\u3002 \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff0c\u5927\u5c0f\u8c03\u97f3\u9636\u4e43\u81f3\u6240\u6709\u4e50\u7406\uff0c\u4e0d\u662f\u201c\u88ab\u89c4\u5b9a\u7684\u201d\uff0c\u800c\u662f\u5728\u67d0\u4e2a\u65f6\u671f\u4eba\u4eec\u5bf9\u5df2\u6709\u7684\u97f3\u4e50\u5f62\u6001\u7684\u4e00\u79cd\u9ad8\u5ea6\u7684\u603b\u7ed3\uff0c\u5e76\u4e14\u53ef\u4ee5\u6839\u636e\u8fd9\u4e9b\u603b\u7ed3\u51fa\u6765\u7684\u77e5\u8bc6\u6846\u67b6\uff0c\u53bb\u521b\u9020\u66f4\u591a\u7684\u97f3\u4e50\u3002 \u63a5\u4e0b\u6765\u6211\u7528\u601d\u8003\u5927\u5c0f\u8c03\u8c03\u5f0f\u8bde\u751f\u8fc7\u7a0b\u7684\u601d\u7ef4\u6a21\u5f0f\uff0c\u6765\u7a7f\u63d2\u8bb2\u89e3\u5927\u5c0f\u8c03\u4e50\u7406\uff0c\u5e2e\u4f60\u4f60\u66f4\u597d\u7684\u7406\u89e3\u5b83\u4eec\uff0c\u628a\u8bb0\u5fc6\u4e2d\u6742\u4e71\u7684\u7406\u8bba\u788e\u7247\u6d41\u7545\u5730\u8d2f\u901a\u8d77\u6765\uff0c\u5f62\u6210\u81ea\u6d3d\u7684\u7cfb\u7edf\u3002 3\u3001\u4ece\u5927\u5c0f\u8c03\u5386\u53f2\u53d1\u5c55\u7684\u767d\u8bdd\u6545\u4e8b\u7406\u89e3\u4e50\u7406 \u00b6 \u672c\u8282\u4e3b\u8981\u4ee5\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3\u77e5\u8bc6\u4e3a\u76ee\u7684\u8fdb\u884c\u68b3\u7406\u548c\u9ad8\u5ea6\u603b\u7ed3\uff0c\u6709\u7f8e\u5316\u548c\u7701\u7565\u7684\u6210\u5206\u5728\uff0c\u8fc7\u7a0b\u548c\u7ec6\u8282\u5e76\u4e0d\u7edd\u5bf9\u4e25\u8c28\uff0c\u6709\u5174\u8da3\u4e86\u89e3\u97f3\u4e50\u5386\u53f2\u7684\u4eba\u53ef\u4ee5\u81ea\u884c\u8fdb\u884c\u66f4\u6df1\u5165\u7684\u7814\u7a76\uff0c\u4e5f\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u63a2\u8ba8\u3002 1. \u5728\u67d0\u4e00\u4e2a\u97f3\u4e50\u98ce\u683c\u5f62\u6001\u9c9c\u660e\u4e14\u53d1\u5c55\u9f0e\u76db\u7684\u65f6\u671f\uff08\u6587\u827a\u590d\u5174\u81f3\u5df4\u6d1b\u514b\u65f6\u671f\u524d\u540e\uff09\uff0c\u97f3\u4e50\u5bb6\u4eec\u628a\u5927\u4f17\u4e2d\u6bd4\u8f83\u666e\u904d\u7684\u97f3\u4e50\u4f5c\u54c1\u8fdb\u884c\u5206\u6790\uff0c\u53d1\u73b0\u5927\u90e8\u5206\u7684\u97f3\u4e50\u53ef\u4ee5\u88ab\u533a\u5206\u4e3a\u4e24\u79cd\u98ce\u683c\u9c9c\u660e\u7684\u97f3\u4e50\u7c7b\u522b\uff0c\u4ed6\u4eec\u901a\u5e38\u91c7\u7528\u4e86\u4e24\u79cd\u56fa\u5b9a\u6846\u67b6\u7684\u8c03\u5f0f\u97f3\u9636\u6765\u8fdb\u884c\u65cb\u5f8b\u548c\u548c\u58f0\u7684\u521b\u4f5c\uff0c\u8fd9\u4e24\u79cd\u97f3\u4e50\u8c03\u5f0f\u5c31\u662f\u5927\u8c03\u548c\u5c0f\u8c03\uff0c\u5e76\u660e\u786e\u4e86\u5927\u8c03\u548c\u5c0f\u8c03\u4e2d\u7684\u7ed3\u6784\u3002 \u4e50\u7406\u77e5\u8bc6\u70b9\uff1a \u5927\u8c03\u548c\u5c0f\u8c03\u7684\u5168\u534a\u97f3\u7ed3\u6784\uff1a\u5168\u5168\u534a\u5168\u5168\u5168\u534a\u3001\u5168\u534a\u5168\u5168\u534a\u5168\u5168\u3002 \u5927\u8c03\u7684\u97f3\u7a0b\u7ed3\u6784\uff1a\u7eaf\u4e00\u5ea6\u3001\u5927\u4e8c\u5ea6\u3001 \u5927\u4e09\u5ea6 \u3001\u7eaf\u56db\u5ea6\u3001\u7eaf\u4e94\u5ea6\u3001 \u5927\u516d\u5ea6 \u3001 \u5927\u4e03\u5ea6 \u5c0f\u8c03\u7684\u97f3\u7a0b\u7ed3\u6784\uff1a\u7eaf\u4e00\u5ea6\u3001\u5927\u4e8c\u5ea6\u3001 \u5c0f\u4e09\u5ea6 \u3001\u7eaf\u56db\u5ea6\u3001\u7eaf\u4e94\u5ea6\u3001 \u5c0f\u516d\u5ea6 \u3001 \u5c0f\u4e03\u5ea6 2. \u5f53\u4ed6\u4eec\u628a\u8fd9\u6837\u7684\u97f3\u9636\u5173\u7cfb\u5957\u5165\u968f\u610f\u4e00\u4e2a\u4e3b\u97f3\u5f00\u59cb\u7684\u97f3\u9636\u4e0a\uff0c\u5c31\u4f1a\u51fa\u73b0\u5e26\u5404\u79cd\u5347\u964d\u53f7\u7684\u8c03\u6027\u3002\u7279\u522b\u662f\u5728\u5341\u4e8c\u5e73\u5747\u5f8b\u51fa\u73b0\u4ee5\u540e\uff0c\u8c03\u6027\u5728\u952e\u76d8\u4e0a\u7684\u53d1\u6325\u8fbe\u5230\u4e86\u6781\u81f4\u3002 \u4e50\u7406\u77e5\u8bc6\u70b9\uff1a \u8c03\u6027\uff1a\u56e0\u4e3a\u8c03\u5f0f\u97f3\u9636\u56fa\u5b9a\u7684\u7ed3\u6784\u5173\u7cfb\uff0c\u624d\u51fa\u73b0\u4e86\u5404\u7c7b\u7684\u5347\u964d\u53f7\u3002\u6bd4\u5982\u6211\u4eec\u628a\u5927\u8c03\u5f0f\u7684\u7ed3\u6784\u653e\u5728\u4ee5C\u4e3a\u4e3b\u97f3\u5f00\u59cb\u7684\u97f3\u9636\u4e0a\uff0c\u5c31\u521a\u597d\u6ca1\u6709\u5347\u964d\u53f7\u3002\u653e\u5230\u4ee5A\u4e3a\u4e3b\u97f3\u7684\u97f3\u9636\u4e0a\uff0c\u5c31\u9700\u8981\u5347\u4e09\u4e2a\u97f3#F #C #G\uff0c\u624d\u80fd\u9002\u914d\u8fd9\u4e2a\u7ed3\u6784\u3002\u56e0\u6b64\u4f60\u4e0d\u9700\u8981\u518d\u53bb\u6b7b\u677f\u5730\u53bb\u8bb0\u5fc6\u201c4152637\uff0f7362514 \uff0f\u5347\u53f7\u6700\u540e\u4e00\u4e2a\u8c03\u53f7\u5f80\u524d\u4e00\u4e2a\u534a\u97f3\u662f\u8c03\u6027\u540d\u79f0\u3001\u964d\u53f7\u5012\u6570\u7b2c\u4e8c\u4e2a\u8c03\u53f7\u662f\u8c03\u6027\u540d\u79f0\u201d\u8fd9\u6837\u9ad8\u5ea6\u603b\u7ed3\u7684\u8868\u9762\u89c4\u5f8b\u3002 \u7efc\u4e0a\uff0c\u6b63\u786e\u7684\u903b\u8f91\u7406\u89e3\u4e3a\u8c03\u5f0f\u51b3\u5b9a\u4e86\u97f3\u9636\u7ed3\u6784\u4ece\u800c\u786e\u5b9a\u4e86\u8c03\u6027\u7684\u5347\u964d\u53f7\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u4ece\u5347\u964d\u53f7\u6765\u51b3\u5b9a\u8c03\u6027\u3002 \u5341\u4e8c\u5e73\u5747\u5f8b\uff1a\u53d7\u9650\u4e8e\u4ee5\u524d\u7684\u5f8b\u5236\u6bcf\u4e2a\u97f3\u4e4b\u95f4\u9891\u7387\u7684\u6bd4\u4f8b\u5173\u7cfb\uff0c\u4ee5\u524d\u662f\u65e0\u6cd5\u968f\u610f\u8f6c\u6362\u8c03\u6027\u7684\uff0c\u56e0\u4e3a\u6362\u5230\u5176\u4ed6\u8c03\u4e0a\uff0c\u97f3\u7b26\u4e4b\u95f4\u7684\u6bd4\u4f8b\u5c31\u4e0e\u4e4b\u524d\u4e0d\u4e00\u6837\u4e86\u3002\u5341\u4e8c\u5e73\u5747\u5f8b\u5219\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f7f\u952e\u76d8\u4e50\u5668\u80fd\u591f\u968f\u610f\u8f6c\u8c03\u3002 \uff13. \u7531\u4e8e\u4e50\u66f2\u521b\u4f5c\u7684\u9700\u8981\uff0c\u4f5c\u66f2\u5bb6\u4eec\u5728\u97f3\u4e50\u4e2d\u4f1a\u7ecf\u5e38\u8fd0\u7528\u5927\u5c0f\u8c03\u4e92\u76f8\u8f6c\u8c03\u7684\u624b\u6cd5\u3002\u5728\u6240\u6709\u7684\u8c03\u6027\u4e2d\uff0c\u603b\u6709\u90a3\u4e48\u51e0\u4e2a\u8c03\u76f8\u4e92\u4e4b\u95f4\u8f6c\u8d77\u6765\u6700\u597d\u542c\uff0c\u8fc7\u6e21\u4e5f\u6700\u8212\u670d\u3002\u6709\u4e86\u7cfb\u7edf\u6027\u7684\u4e50\u7406\u77e5\u8bc6\u68b3\u7406\u4ee5\u540e\uff0c\u4ed6\u4eec\u53d1\u73b0\uff0c\u4fbf\u4e8e\u5927\u5c0f\u8c03\u4e92\u8f6c\u7684\u90a3\u51e0\u4e2a\u8c03\uff0c\u901a\u5e38\u90fd\u662f\u5347\u964d\u53f7\u76f8\u540c\u7684\u4e24\u4e2a\u5927\u5c0f\u8c03\u3001\u548c\u540c\u4e3b\u97f3\u5f00\u59cb\u7684\u5927\u5c0f\u8c03\uff1b\u8fdb\u800c\u624d\u53d1\u73b0\uff0c\u6240\u6709\u5347\u964d\u53f7\u76f8\u540c\u7684\u5927\u5c0f\u8c03\uff0c\u4e3b\u97f3\u4e4b\u95f4\u59cb\u7ec8\u95f4\u9694\u7740\u4e00\u4e2a\u5c0f\u4e09\u5ea6\uff1b\u800c\u540c\u4e3b\u97f3\u5f00\u59cb\u7684\u5927\u5c0f\u8c03\uff0c\u5dee\u522b\u59cb\u7ec8\u57283\u30016\u30017\u7ea7\u3002 \u4e50\u7406\u77e5\u8bc6\u70b9\uff1a \u6211\u4eec\u90fd\u77e5\u9053\u5173\u7cfb\u5927\u5c0f\u8c03\u76f8\u5dee\u4e00\u4e2a\u5c0f\u4e09\u5ea6\uff0c\u4f46\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u6709\u201c\u5173\u7cfb\u201d\uff1f\u56e0\u4e3a\u4ed6\u4eec\u5171\u7528\u4e00\u5957\u5347\u964d\u53f7\u7cfb\u7edf\u3002 \u662f\u56e0\u4e3a\u5347\u964d\u53f7\u4e00\u6837\uff0c\u624d\u88ab\u89c4\u4e3a\u5173\u7cfb\u5927\u5c0f\u8c03\uff0c\u624d\u53d1\u73b0\u4e3b\u97f3\u4e4b\u95f4\u7684\u56fa\u5b9a\u8ddd\u79bb\uff1b\u800c\u4e0d\u662f\u56e0\u4e3a\u76f8\u5dee\u5c0f\u4e09\u5ea6\uff0c\u6240\u4ee5\u662f\u5173\u7cfb\u5927\u5c0f\u8c03\u3002 \u540c\u4e3b\u97f3\u5927\u5c0f\u8c03\u7684\u5dee\u522b\u57283\u30016\u30017\u7ea7\uff0c\u4f46\u8c03\u53f7\u4e0d\u540c\u3002\u5982\u679c\u8981\u786e\u5b9a\u8fd9\u4e2a\u5c0f\u8c03\u7684\u8c03\u53f7\u53ef\u4ee5\u5148\u5411\u4e0a\u627e\u5b83\u7684\u5173\u7cfb\u5927\u8c03\u3002 4. \u5927\u8c03\u5f0f\u7684\u4e2d\u7531\u4e8e\u6709\u5bfc\u97f3\u7684\u5b58\u5728\uff08\u4e0e\u4e3b\u97f3\u5f62\u6210\u534a\u97f3\u5173\u7cfb\uff0f\u5f62\u6210\u5c5e\u4e03\u548c\u5f26\u4e2d\u4e09\u5168\u97f3\u7684\u7ed3\u6784\uff09\uff0c\u53ef\u4ee5\u5f97\u51fa\u6700\u57fa\u672c\u7684\u4e00\u79cd\u548c\u58f0\u529f\u80fd\u8fdb\u884c\uff0c\u5373\u6b63\u683c\u7ec8\u6b62\uff08\uff367 \u2192 \uff29\uff09\uff0c\u4ece\u800c\u5f62\u6210\u5f3a\u70c8\u7684\u548c\u58f0\u8272\u5f69\u548c\u7ec8\u6b62\u611f\u3002\u7136\u800c\u7531\u4e8e\u5c0f\u8c03\u4e2d\u7b2c7\u7ea7\u4e0e\u7b2c1\u7ea7\u662f\u5168\u97f3\u5173\u7cfb\uff0c\u5728\u97f3\u54cd\u4e0a\u6ca1\u6709\u5f80\u4e3b\u97f3\u8fdb\u884c\u7684\u5f3a\u70c8\u503e\u5411\uff0c\u56e0\u6b64\u4e5f\u6ca1\u6709\u5927\u5c0f\u4e03\u548c\u5f26\u7ed3\u6784\u7684\u5c5e\u4e03\u548c\u58f0\u529f\u80fd\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u97f3\u4e50\u5bb6\u4eec\u628a\u5c0f\u8c03\u97f3\u9636\u4e2d\u7684\u7b2c7\u7ea7\u97f3\u4e34\u65f6\u5347\u4e86\u534a\u97f3\uff0c\u975e\u5e38\u7b80\u5355\u7684\u4e00\u4e2a\u64cd\u4f5c\uff0c\u4f7f\u5c0f\u8c03\u62e5\u6709\u4e86\uff367 \u2192 \uff29\u7684\u548c\u58f0\u529f\u80fd\u8fdb\u884c\uff0c\u56e0\u6b64\u4e5f\u5c06\u5b83\u547d\u540d\u4e3a\u548c\u58f0\u5c0f\u8c03\u3002\u540c\u65f6\u4e3a\u4e86\u533a\u5206\uff0c\u4e0a\u8ff0\u666e\u901a\u7684\u5c0f\u8c03\u90fd\u547d\u540d\u4e3a\u81ea\u7136\u5c0f\u8c03\uff0c\u5927\u8c03\u5219\u79f0\u4f5c\u81ea\u7136\u5927\u8c03\u3002 \u4e50\u7406\u77e5\u8bc6\u70b9\uff1a \u5bfc\u97f3\uff1a\u81ea\u7136\u5927\u8c03\u5f0f\u4e2d\u7684\u7b2c7\u7ea7\u97f3\uff0c\u4e0e\u4e3b\u97f3\u5f62\u6210\u534a\u97f3\u5173\u7cfb\uff0c\u540c\u65f6\u5145\u5f53\u5c5e\u4e03\u548c\u5f26\u4e2d\u7684\u4e09\u97f3\uff0c\u6784\u6210\u4e86\u5f3a\u70c8\u9700\u8981\u88ab\u89e3\u51b3\u7684\u548c\u58f0\u611f\u3002 \u81ea\u7136\u5c0f\u8c03\u4e2d\u7f3a\u4e4f\u5bfc\u97f3\uff0c\u548c\u58f0\u5c0f\u8c03\u7684\u51fa\u73b0\u662f\u4e3a\u4e86\u8865\u5145\u5bfc\u97f3\u548c\u7ec8\u6b62\u5f0f\u548c\u58f0\u8fdb\u884c\uff0c\u56e0\u6b64\u548c\u58f0\u5c0f\u8c03\u53477\u7ea7\u3002 \u548c\u58f0\u5c0f\u8c03\u7684\u53477\u7ea7\u4e3a\u4e34\u65f6\u5347\u964d\u53f7\uff0c\u4e0d\u5f71\u54cd\u5b83\u7684\u56fa\u5b9a\u5347\u964d\u662f\u548c\u5173\u7cfb\u5927\u8c03\u4e00\u6837\u7684\u3002 5. \u548c\u58f0\u5c0f\u8c03\u97f3\u9636\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5728\u7b2c6\u7ea7\u548c\u7b2c7\u7ea7\u5f62\u6210\u4e86\u4e00\u4e2a\u589e\u4e8c\u5ea6\u7684\u97f3\u54cd\u3002\u5982\u679c\u4f5c\u66f2\u4e25\u683c\u6309\u7167\u548c\u58f0\u5c0f\u8c03\u6267\u884c\uff0c\u6211\u4eec\u5c31\u4f1a\u5728\u542c\u611f\u4e0a\u89c9\u5f97\u8fd9\u9996\u4e50\u66f2\u6ee1\u6ee1\u7684\u201c\u5f02\u57df\u98ce\u60c5\u201d\u3002\u4e3a\u4e86\u8ba9\u65cb\u5f8b\u97f3\u54cd\u5e73\u7a33\u8fdb\u884c\uff0c\u56e0\u6b64\u4e0a\u884c\u7684\u65f6\u5019\u628a\u7b2c6\u7ea7\u4e5f\u4e34\u65f6\u5347\u4e86\uff0c\u4e3b\u8981\u4e3a\u65cb\u5f8b\u7684\u5e73\u7a33\u8fdb\u884c\u670d\u52a1\uff0c\u800c\u6b64\u523b\u548c\u58f0\u4e5f\u5177\u5907\u4e86\u89e3\u51b3\u548c\u7ec8\u6b62\u7684\u6761\u4ef6\u3002\u5728\u4e0b\u884c\u4e0d\u9700\u8981\u7ec8\u6b62\u5f0f\u7684\u65f6\u5019\uff0c\u628a6\u30017\u7ea7\u4e00\u8d77\u8fd8\u539f\u4e3a\u81ea\u7136\u5c0f\u8c03\uff0c\u518d\u6b21\u7ef4\u62a4\u4e86\u65cb\u5f8b\u7684\u5e73\u7a33\u8fdb\u884c\u3002 \u4e50\u7406\u77e5\u8bc6\u70b9\uff1a \u65cb\u5f8b\u5c0f\u8c03\uff1a\u5728\u548c\u58f0\u5c0f\u8c03\u7684\u57fa\u7840\u4e0a\u4e34\u65f6\u5347\u7b2c6\u7ea7\uff0c\u4f46\u4e0b\u884c\u65f6\u8fd8\u539f\u3002\u76ee\u7684\uff1a\u4f7f\u65cb\u5f8b\u4e0d\u51fa\u73b0\u7a81\u5140\u7684\u589e\u4e8c\u5ea6\u3002 \u8865\u5145\u8bf4\u660e\uff1a 1\u3001\u5176\u5b9e\u5728\u4e50\u7406\u548c\u548c\u58f0\u5b66\u8fd8\u6ca1\u88ab\u5f52\u7eb3\u6210\u7cfb\u7edf\u65f6\uff0c\u5f53\u65f6\u4f5c\u66f2\u5bb6\u4eec\u65e9\u5df2\u53d1\u73b0\u67d0\u79cd\u4f5c\u66f2\u624b\u6cd5\u5728\u542c\u611f\u4e0a\u6700\u8212\u9002\uff0c\u6240\u4ee5\u5f53\u65f6\u5df2\u6709\u7684\u5c0f\u8c03\u97f3\u4e50\u5927\u90e8\u5206\u666e\u904d\u5728\u7ec8\u6b62\u65f6\u90fd\u662f\u91c7\u7528\u4e86\u548c\u58f0\u5c0f\u8c03\u7684\u65b9\u6848\uff0c\u5e26\u4e86\u4e34\u65f6\u5347VII\u7ea7\u7684V7\u548c\u5f26\u7684\uff1b\u800c\u53e6\u4e00\u65b9\u9762\u4e0d\u60f3\u8ba9\u66f2\u5b50\u51fa\u73b0\u589e\u4e8c\u5ea6\u97f3\u54cd\uff0c\u4e5f\u540c\u65f6\u91c7\u7528\u4e86\u65cb\u5f8b\u5c0f\u8c03\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6240\u4ee5\u90a3\u65f6\u5019\u7684\u97f3\u4e50\u5176\u5b9e\u90fd\u662f\u4e09\u4e2a\u7cfb\u7edf\u6df7\u7528\uff0c\u5e76\u6ca1\u6709\u8bf4\u4e00\u9996\u4e50\u66f2\u5f88\u4e25\u683c\u5730\u53ea\u6267\u884c\u67d0\u4e2a\u7cfb\u7edf\u3002 \u800c\u8fd9\u4e9b\u5927\u5c0f\u8c03\u5f0f\u77e5\u8bc6\uff0c\u90fd\u662f\u540e\u6765\u6839\u636e\u4ed6\u4eec\u5728\u4f5c\u66f2\u91cc\u7684\u7528\u6cd5\uff0c\u624d\u603b\u7ed3\u51fa\u4e86\u8fd9\u4e09\u79cd\u5c0f\u8c03\u97f3\u9636\u5f62\u5f0f\u3002 \u6240\u4ee5\u4ece\u8fd9\u70b9\u6765\u770b\uff0c\u4e0a\u9762\u4f18\u5316\u8fc7\u7684\u63cf\u8ff0\u53ea\u662f\u4e3a\u4e86\u6b65\u6b65\u9012\u8fdb\u8ba9\u4f60\u4eec\u6d41\u7545\u7406\u89e3\u77e5\u8bc6\u3002\u5728\u65e9\u671f\u7684\u97f3\u4e50\u91cc\uff0c\u5176\u5b9e\u65e9\u5df2\u5177\u5907\u4e86\u8fd9\u4e9b\u8c03\u5f0f\u3002\u8fd9\u4e5f\u652f\u6301\u4e86\u201c\u4e50\u7406\u77e5\u8bc6\u662f\u5bf9\u5df2\u6709\u97f3\u4e50\u7684\u5f52\u7eb3\u603b\u7ed3\u201d\u8fd9\u4e2a\u89c2\u70b9\u3002 2\u3001\u8fd9\u4e9b\u5927\u5c0f\u8c03\u5f0f\u7684\u6a21\u677f\u4e5f\u4e0d\u80fd\u4ee3\u8868\u5f53\u65f6\u6240\u6709\u7684\u97f3\u4e50\uff0c\u5728\u4e0d\u540c\u7684\u5730\u57df\u3001\u6c11\u65cf\u3001\u5b97\u6559\u7684\u56e0\u7d20\u4e0b\uff0c\u4ecd\u7136\u8fd8\u6709\u5927\u91cf\u7684\u5176\u4ed6\u7279\u6b8a\u7684\u8c03\u5f0f\u3002\u59827\u4e2a\u6559\u4f1a\u8c03\u5f0f\uff08\u4e2d\u53e4\u8c03\u5f0f\uff09\u3001\u4e2d\u56fd\u6c11\u65cf\u8c03\u5f0f\u7b49\u3002 3\u3001\u4f46\u662f\u4e0a\u8ff0\u5185\u5bb9\u662f\u4f60\u53bb\u5b66\u4e60\u7406\u89e3\u5176\u4ed6\u66f4\u591a\u8c03\u5f0f\u97f3\u4e50\u5185\u5bb9\u3001\u751a\u81f3\u662f\u8d85\u51fa\u4e50\u7406\u6846\u67b6\u5916\u7684\u97f3\u4e50\u5f62\u5f0f\u7684\u57fa\u7840\u6846\u67b6\u3002\u7528\u5bf9\u7684\u601d\u8def\u6253\u597d\u57fa\u7840\uff0c\u80fd\u5e2e\u52a9\u4f60\u4ee5\u540e\u66f4\u597d\u7684\u62d3\u5c55\u81ea\u5df1\u3002 \\4. \u5b66\u4e60\u8c03\u5f0f\u8c03\u6027\u7406\u8bba\u7684\u6700\u7ec8\u7ed3\u679c\uff0c\u8fd8\u662f\u4e3a\u4e86\u8046\u542c\u3001\u7406\u89e3\u97f3\u4e50\u7684\u97f3\u54cd\u3002\u6240\u4ee5\u5e94\u8be5\u5728\u7406\u89e3\u4e86\u8fd9\u4e2a\u8bfe\u9898\u7684\u7406\u8bba\u77e5\u8bc6\u4ee5\u540e\uff0c\u7ed3\u5408\u542c\u5230\u7684\u97f3\u4e50\u97f3\u54cd\uff0c\u53bb\u4e3e\u4e00\u53cd\u4e09\u7684\u8bc1\u5b9e\u3001\u7406\u89e3\u4f60\u7684\u7406\u8bba\u77e5\u8bc6\u3002 4\u3001\u5176\u4ed6\u4f8b\u5b50\u4e0e\u603b\u7ed3 \u00b6 \u8bb0\u4f4f\u4e00\u4e2a\u77e5\u8bc6\uff0c\u4f60\u5c31\u53ea\u62e5\u6709\u4e00\u4e2a\u77e5\u8bc6\u3002\u4f46\u5982\u679c\u8bb0\u4f4f\u4e00\u5957\u601d\u7ef4\u65b9\u5f0f\uff0c\u53bb\u5bfb\u627e\u80cc\u540e\u90a3\u4e2a\u521b\u9020\u77e5\u8bc6\u7684\u8fc7\u7a0b\uff0c\u6709\u5229\u4e8e\u4f60\u89e3\u51b3\u4e00\u6574\u7c7b\u7684\u95ee\u9898\u3002 \u524d\u9635\u5b50\u77e5\u4e4e\u4e0a\u6709\u4e2a\u6570\u5b66\u754c\u7684\u95ee\u9898\u5f88\u706b\uff1a \u5982\u4f55\u770b\u5f85\u300a\u534e\u88d4\u6559\u6388\u53d1\u73b0\u4e8c\u6b21\u65b9\u7a0b\u300c\u6781\u7b80\u300d\u89e3\u6cd5\uff1a\u4e22\u6389\u516c\u5f0f\uff0c\u5168\u7403\u6559\u79d1\u4e66\u53ef\u80fd\u90fd\u8981\u6539\u4e86\u300b\uff1f \u4e4d\u4e00\u770b\uff0c9102\u90fd\u8fc7\u53bb\u4e86\uff0c\u8fd8\u80fd\u53d1\u73b0\u8fd9\u79cd\u65e9\u5df2\u89e3\u51b3\u7684\u53e4\u8001\u95ee\u9898\u7684\u66f4\u4f18\u516c\u5f0f\uff1f\u8fd9\u51e0\u767e\u5e74\u6570\u5b66\u5bb6\u4eec\u90fd\u5e72\u561b\u53bb\u4e86\uff1f \u4ed4\u7ec6\u5730\u9605\u8bfb\u4e86\u9ad8\u8d5e\u7b54\u6848\u548c\u539f\u4f5c\u8005\u7684\u4e13\u680f\u6587\u7ae0\u300a \u7f57\u535a\u6df1\uff1a\u4e00\u5143\u4e8c\u6b21\u65b9\u7a0b\u7684\u4e00\u79cd\u4e0d\u540c\u89e3\u6cd5 \u300b\uff0c\u624d\u53d1\u73b0\uff0c\u4f5c\u8005\u6b63\u662f\u4e3a\u4e86\u63d0\u5021\u672c\u6587\u6240\u8bf4\u7684\u601d\u7ef4\uff0c\u4e3a\u4e86\u8ba9\u66f4\u591a\u5b66\u751f\u53bb\u7406\u89e3\u6c42\u6839\u516c\u5f0f\u80cc\u540e\u8bde\u751f\u548c\u63a8\u5bfc\u7684\u601d\u7ef4\u8fc7\u7a0b\uff0c\u56e0\u6b64\u628a\u63a8\u5bfc\u51fa\u6c42\u6839\u516c\u5f0f\u7684\u8fc7\u7a0b\u7406\u4e86\u4e00\u904d\uff0c\u540c\u65f6\u91c7\u7528\u4e86\u4e00\u4e2a\u80fd\u591f\u66f4\u597d\u7684\u5e2e\u52a9\u5b66\u751f\u7406\u89e3\u80cc\u540e\u63a8\u5bfc\u8fc7\u7a0b\u7684\u516c\u5f0f\u3002\u8fd9\u6837\u5b66\u751f\u5c31\u4e0d\u9700\u523b\u610f\u8bb0\u4f4f\u516c\u5f0f\u5c31\u80fd\u6c42\u89e3\u3002 \u4ed6\u5f3a\u8c03\u7684\u8fd9\u662f\u66f4\u7b80\u5355\u7684\u6559\u5b66\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6539\u5584\u5b66\u4e60\u7684\u4f53\u9a8c\uff0c\u8ba9\u5b66\u751f\u7684\u5b66\u4e60\u66f2\u7ebf\u66f4\u5e73\u7f13\uff0c\u4e0d\u9700\u8981\u53bb\u6b7b\u8bb0\u786c\u80cc\u6c42\u6839\u516c\u5f0f\u3002 \u7f57\u8001\u5e08\u8bf4\u81ea\u5df1\u662f\u4e00\u4e2a\u8bb0\u6027\u5f88\u5dee\u7684\u4eba\u2026\u2026 \u4ed6\u559c\u6b22\u6570\u5b66\u5c31\u662f\u56e0\u4e3a\u6570\u5b66\u4e0d\u9700\u8981\u8bb0\u5fc6\uff0c\u53ea\u8981\u4f1a\u63a8\u5bfc\u8bc1\u660e\u5c31\u884c\uff0c\u4e0d\u9700\u8981\u6b7b\u8bb0\u786c\u80cc\uff0c\u56e0\u6b64\u4ed6\u53ea\u64c5\u957f\u6570\u5b66\u3002 \u4ed6\u53d1\u73b0\u5f88\u591a\u4e2d\u5b66\u751f\u603b\u662f\u559c\u6b22\u6b7b\u8bb0\u786c\u80cc\u516c\u5f0f\uff0c\u6ca1\u6709\u771f\u6b63\u7406\u89e3\u8fd9\u4e2a\u516c\u5f0f\u80cc\u540e\u7684\u63a8\u5bfc\u8fc7\u7a0b\u548c\u5b9e\u9645\u610f\u4e49\u3002\u7f57\u6559\u6388\u8ba4\u4e3a\uff0c\u4ed6\u73b0\u5728\u6b63\u5728\u63a8\u5e7f\u7684\u6c42\u6839\u65b9\u6cd5\u975e\u5e38\u7684\u7b80\u5355\uff0c \u5b8c\u5168\u4e0d\u9700\u8981\u8bb0\u5fc6\u4e0a\u9762\u8fd9\u4e2a\u516c\u5f0f\uff0c\u5c31\u80fd\u5feb\u901f\u7684\u6c42\u89e3\u3002 \u6570\u5b66\u4e0d\u9700\u8981\u8bb0\u5fc6\uff1f\u8c01\u4fe1\uff1f \u9ad8\u4e2d\u8c01\u4e0d\u662f\u80cc\u90a3\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u516c\u5f0f\u80cc\u5f97\u534a\u6b7b\uff1f \u53ef\u662f\u62e5\u6709\u6574\u4e2a\u80cc\u540e\u7684\u903b\u8f91\u601d\u8fa8\u8fc7\u7a0b\u7684\u4eba\uff0c\u5c31\u662f\u8fd9\u4e48\u89c9\u5f97\u3002\u800c\u8fd9\u53ef\u80fd\u4e5f\u662f\u90a3\u4e9b\u8d85\u795e\u5b66\u9738\u4eec\u7684\u79d8\u7c4d\u4e4b\u4e00\u3002 \u6709\u591a\u5c11\u4eba\u9ad8\u4e2d\u8003\u6570\u5b66\u7684\u65f6\u5019\u5199\u9519\u4e86x={-b\u00b1[\u221a(b^2 - 4ac)] }/2a\u8fd9\u4e2a\u516c\u5f0f\uff1f\u6b63\u662f\u56e0\u4e3a\u4ece\u6765\u6ca1\u63a5\u89e6\u8fc7\u80cc\u540e\u7684\u601d\u60f3\uff0c\u624d\u53ea\u5f97\u8d39\u5c3d\u5fc3\u601d\u80cc\u4f4f\u516c\u5f0f\u3002 \u6211\u4e0d\u6562\u8bf4\u81ea\u5df1\u662f\u8fd9\u5957\u601d\u7ef4\u7684\u4e25\u683c\u8df5\u884c\u8005\uff0c\u4f46\u4e5f\u603b\u5c1d\u8bd5\u5728\u6559\u5b66\u4e2d\u8fd0\u7528\u8fd9\u79cd\u601d\u7ef4\uff0c\u53d1\u52a8\u5e7c\u9f84\u7684\u5b69\u5b50\u4e00\u8d77\u6765\u601d\u8003\u3002 \u6bd4\u5982\u8bf4\u5230\u5347\u964d\u53f7\u7684\u89c4\u5219\uff0c\u6709\u4e9b\u5b69\u5b50\u603b\u662f\u4e0d\u80fd\u8bb0\u4f4f\uff0c\u540c\u4e00\u4e2a\u5c0f\u8282\u5185\u6240\u6709\u4e0e\u524d\u9762\u7684accidental\u76f8\u540c\u7684\u97f3\u8981\u4e00\u8d77\u5347\u964d\u3002\u4ed6\u4eec\u770b\u5230\u5c0f\u8282\u672b\u5c3e\u6ca1\u6709\u6807\u8bb0\u5347\u964d\u7684\u97f3\uff0c\u603b\u662f\u8981\u56de\u5230\u767d\u952e\u4e0a\u5f39\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u5c31\u6309\u7167\u6211\u7684\u903b\u8f91\u7f16\u4e86\u4e00\u4e2a\u5c0f\u6545\u4e8b\uff1a \u6211\u95ee\uff1a\u8fd9\u5f20\u5355\u72ec\u8c31\u5b50\u662f\u4ece\u54ea\u91cc\u6253\u51fa\u6765\u7684\u5462\uff1f \u5b69\uff1a\u6253\u5370\u673a\uff01 \u6211\uff1a\u4f60\u77e5\u9053\u51e0\u767e\u5e74\u524d\u4eba\u4eec\u662f\u8fd8\u6ca1\u53d1\u660e\u51fa\u6253\u5370\u673a\u7684\u5417\uff1f \u5b69\uff1a\uff08\u4f3c\u61c2\u975e\u61c2\u5730\u6447\u5934\u6216\u70b9\u5934\uff09 \u6211\uff1a\u6ca1\u6709\u6253\u5370\u673a\u7684\u65f6\u5019\uff0c\u94a2\u7434\u8c31\u90fd\u662f\u4f5c\u66f2\u5bb6\u7528\u624b\u4e00\u7b14\u7b14\u753b\u51fa\u6765\uff0c\uff08\u638f\u51fa\u4e00\u9875\u5de8\u590d\u6742\u7684\u8c31\uff09\uff0c\u4f60\u89c9\u5f97\u5982\u679c\u4ed6\u4eec\u8981\u753b\u8fd9\u6837\u7684\u8c31\uff0c\u662f\u4e0d\u662f\u5f88\u7d2f\u554a\uff1f \u5b69\uff1a\u5bf9\u554a\uff0c\u80af\u5b9a\u5f88\u7d2f\uff01 \u6211\uff1a\u90a3\u5982\u679c\u4f60\u8ba9\u4ed6\u4eec\u628a\u4e00\u4e2a\u5c0f\u8282\u91cc\u7684\u6bcf\u4e00\u4e2a\u5347\u964d\u53f7\u90fd\u753b\u51fa\u6765\uff0c\u662f\u4e0d\u662f\u66f4\u7d2f\uff1f \u5b69\uff1a\uff08\u70b9\u5934\uff09 \u6211\uff1a\u5982\u679c\u4e00\u4e2a\u5c0f\u8282\u91cc\u6709\u516b\u4e2a\u97f3\u8981\u5347\uff0c\u5982\u679c\u8981\u5199\u516b\u4e2a\u5347\u964d\u53f7\uff0c\u6211\u4eec\u6765\u5199\u5199\u770b\u662f\u4ec0\u4e48\u6837\u5b50\u597d\u4e0d\u597d\uff1f\uff08\u6545\u610f\u753b\u7684\u5de8\u4e11\u5de8\u5bc6\u96c6\uff09\u2026\u2026\u4f60\u770b\u662f\u4e0d\u662f\u5f88\u96be\u770b\uff0c\u751a\u81f3\u770b\u4e0d\u61c2\u6211\u5728\u753b\u4ec0\u4e48\uff1f \u5b69\uff1a\uff08\u8868\u793a\u540c\u610f\uff09 \u6211\uff1a\u6240\u4ee5\u554a\uff0c\u4ed6\u4eec\u5c31\u53d1\u660e\u4e86\u8fd9\u4e2a\u89c4\u5219\uff0c\u5927\u5bb6\u90fd\u9075\u5b88\u8fd9\u4e2a\u89c4\u5219\uff0c\u4f5c\u66f2\u5bb6\u65e2\u8f7b\u677e\uff0c\u5f39\u5f97\u4eba\u4e5f\u770b\u7684\u8f7b\u677e\uff0c\u4f60\u4ee5\u540e\u80fd\u8bb0\u4f4f\u8fd9\u4e2a\u89c4\u5219\u4e86\u5417\uff1f \u5b69\uff1a\u80fd\uff01 \u95ee\u9898\u8fce\u5203\u800c\u89e3\u3002\u5373\u4f7f\u4ed6\u540e\u6765\u4e0d\u5c0f\u5fc3\u5f39\u9519\uff0c\u4e5f\u90fd\u80fd\u9a6c\u4e0a\u81ea\u5df1\u6539\u8fc7\u6765\u3002 \u518d\u6bd4\u5982\uff0c\u5728\u7acb\u5f0f\u7434\u4e0a\u8bb2\u8e0f\u677f\u77e5\u8bc6\u7684\u65f6\u5019\uff0c\u4f1a\u771f\u7684\u62c6\u5f00\u94a2\u7434\uff08\u6761\u4ef6\u5141\u8bb8\u7684\u8bdd\uff09\uff0c\u8ba9\u4ed6\u4eec\u770b\u770b\u53d1\u58f0\u7684\u8fc7\u7a0b\u3001\u539f\u7406\uff0c\u8e29\u6216\u6ca1\u8e29\u8e0f\u677f\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u9020\u6210\u58f0\u97f3\u7684\u4e0d\u540c\u3002\u5982\u679c\u662f\u5927\u4e00\u70b9\u7684\u5b69\u5b50\uff0c\u8fd8\u53ef\u4ee5\u4ece\u62e8\u5f26\u53e4\u94a2\u7434\u548c\u7fbd\u7ba1\u952e\u7434\u5f00\u59cb\uff0c\u8bb2\u8bb2\u94a2\u7434\u7684\u6765\u5386\u548c\u53d1\u5c55\u3002 \u6211\u6562\u8bf4\u6709\u8bb8\u591a\u5728\u5b66\u94a2\u7434\u7684\u6210\u5e74\u4eba\uff0c\u90fd\u4e0d\u6e05\u695a\u94a2\u7434\u53d1\u58f0\u7684\u539f\u7406\uff0c\u56e0\u4e3a\u5728\u4ed6\u4eec\u7684\u903b\u8f91\u4f53\u7cfb\u91cc\uff0c\u6309\u4e86\u952e\uff0c\u5c31\u7b49\u4e8e\u51fa\u58f0\u3002\u5982\u679c\u80fd\u591f\u66f4\u597d\u7684\u4e86\u89e3\u94a2\u7434\u5185\u90e8\u7684\u6784\u9020\u548c\u53d1\u58f0\u539f\u7406\uff0c\u5176\u5b9e\u5bf9\u4ed6\u4eec\u97f3\u4e50\u6027\u7684\u5904\u7406\u3001\u8e0f\u677f\u7684\u4f7f\u7528\u65b9\u9762\uff0c\u90fd\u4f1a\u6709\u660e\u663e\u7684\u8d28\u7684\u98de\u8dc3\u3002\u8fd9\u5c31\u662f\u601d\u7ef4\u4e2d\u5e95\u5c42\u6846\u67b6\u7684\u5de8\u5927\u4f5c\u7528\u3002 \u5b66\u4e60\u7684\u8d28\u91cf\u66f4\u5927\u7a0b\u5ea6\u4e0a\u5173\u4e4e\u4e8e\u5b66\u4e60\u7684\u601d\u7ef4\u6a21\u5f0f\uff0c\u800c\u4e0d\u662f\u5b66\u4e60\u7684\u65f6\u957f\u3002\u65f6\u4ee3\u65e9\u5df2\u4e0d\u540c\u610f\u6211\u4eec\u7ee7\u7eed\u76f8\u4fe1\u7b28\u9e1f\u5148\u98de\u7684\u7bb4\u8a00\uff0c\u6240\u4ee5\u7ec3\u7434\u7ec3\u5f97\u518d\u591a\uff0c\u65b9\u6cd5\u548c\u7406\u5ff5\u9519\u4e86\uff0c\u90fd\u662f\u6d6a\u8d39\u65f6\u95f4\uff1b\u5b66\u4e60\u5b66\u5f97\u518d\u591a\uff0c\u70c2\u7b14\u5934\u548c\u6b7b\u8bb0\u786c\u80cc\uff0c\u4e5f\u96be\u4ee5\u6210\u624d\u3002","title":"\u4ec0\u4e48\u662f\u8c03\u6027\uff1f\u4ec0\u4e48\u662f\u5927\u5c0f\u8c03\u5f0f?!"},{"location":"%E9%9F%B3%E4%B9%90/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B0%83%E6%80%A7/#_1","text":"\u4ece\u79d1\u5b66\u7406\u89e3\u5927\u5c0f\u8c03\u77e5\u8bc6\uff0c\u63a2\u8ba8\u6709\u6548\u5b66\u4e60\u80cc\u540e\u7684\u601d\u7ef4\u6a21\u5f0f \u4f5c\u8005\uff1a\u963f\u6d17 \u94fe\u63a5\uff1a https://zhuanlan.zhihu.com/p/104798436 \u672c\u65875000+\u5b57\uff0c\u592a\u957f\u61d2\u5f97\u770b\u7684\uff0f\u53ea\u60f3\u770b\u5927\u5c0f\u8c03\u4e50\u7406\u89e3\u91ca\u7684\u4eba\uff0c\u53ef\u4ee5\u76f4\u63a5\u8df3\u8fc7\u524d\u9762\u90e8\u5206\uff0c\u770b\u7b2c\u4e8c\u8282\u5185\u5bb9\u3002 \u4ec0\u4e48\u662f\u8c03\u6027\uff1f\u4ec0\u4e48\u662f\u5173\u7cfb\u5927\u5c0f\u8c03\uff1f\u4ec0\u4e48\u662f\u548c\u58f0\u5c0f\u8c03\u548c\u65cb\u5f8b\u5c0f\u8c03\uff1f \u5b66\u94a2\u7434\u3001\u4e50\u7406\u7684\u4eba\u5f80\u5f80\u8bb0\u4f4f\u4e86\u5927\u5c0f\u8c03\u97f3\u9636\u7684\u7ed3\u6784\uff0c\u6bcf\u4e2a\u8c03\u5f0f\u6709\u54ea\u4e9b\u5347\u964d\u53f7\uff0c\u4e5f\u53ef\u4ee5\u5f39\u7684\u5f88\u719f\u7ec3\uff0c\u4f46\u662f\u5f80\u5f80\u8fd8\u662f\u65e0\u6cd5\u7406\u89e3\u5b83\u4eec\u7684\u610f\u4e49\u3002 \u5f53\u4f60\u5728\u7f51\u4e0a\u641c\u7d22\u7b54\u6848\u7684\u65f6\u5019\uff0c\u770b\u5230\u7684\u89e3\u91ca\u6700\u666e\u904d\u662f\u8fd9\u4e24\u79cd\uff1a 1. \u540c\u4e3b\u97f3\u5927\u5c0f\u8c03\u5bf9\u6bd4\u6cd5 \u5927\u8c031 2 3 4 5 6 7 \u81ea\u7136\u5c0f\u8c031 2 b3 4 5 b6 b7 \u548c\u58f0\u5c0f\u8c031 2 b3 4 5 b6 7 1 \u65cb\u5f8b\u5c0f\u8c03\u4e0a\u884c\u53ea\u6709b3\uff0c\u4e0b\u884cb3 b6 b7 2. \u5173\u7cfb\u5927\u5c0f\u8c03\u8bb0\u5fc6\u6cd5 \u5927\u8c031 2 3 4 5 6 7 \u81ea\u7136\u5c0f\u8c036 7 1 2 3 4 5 \u548c\u58f0\u5c0f\u8c036 7 1 2 3 4 #5 (#VII) \u65cb\u5f8b\u5c0f\u8c03\u4e0a\u884c#4 (#VI) #5 (#VII)\uff0c\u4e0b\u884c\u8fd8\u539f **\u800c\u8c03\u6027\u65b9\u9762\uff0c\u4e3b\u8981\u8fd9\u4e48\u8bb0\u5fc6\uff1a**\u53474152637\uff0f\u964d7362514 \uff0f\u5347\u53f7\u6700\u540e\u4e00\u4e2a\u8c03\u53f7\u5f80\u9ad8\u4e00\u4e2a\u534a\u97f3\u662f\u8c03\u6027\u540d\u79f0\u3001\u964d\u53f7\u5012\u6570\u7b2c\u4e8c\u4e2a\u8c03\u53f7\u662f\u8c03\u6027\u540d\u79f0\u3002 \u5982\u679c\u4f60\u4e0d\u6ee1\u8db3\u8fd9\u6837\u7684\u89e3\u91ca\uff0c\u89c9\u5f97\u8111\u6d77\u4e2d\u7684\u7406\u89e3\u8fd8\u6709\u90a3\u4e48\u4e00\u4e2a\u6b7b\u89d2\u59cb\u7ec8\u94bb\u4e0d\u901a\uff0c\u90a3\u8fd9\u7bc7\u6587\u7ae0\u80fd\u5f88\u597d\u7684\u5e2e\u52a9\u4f60\u4ece\u6839\u57fa\u4e0a\u7406\u89e3\u5927\u5c0f\u8c03\u7684\u4e50\u7406\u77e5\u8bc6\u548c\u610f\u4e49\uff0c\u6211\u4e5f\u7edd\u4e0d\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\u6765\u9648\u8ff0\u8fd9\u4e2a\u77e5\u8bc6\u3002 \u4ee5\u4e0a\u8fd9\u4e9b\u7ed3\u8bba\uff0c\u90fd\u5bf9\uff1b\u8bb0\u5fc6\u7684\u65b9\u6cd5\uff0c\u4e5f\u6ca1\u4ec0\u4e48\u5927\u95ee\u9898\u53ef\u4ee5\u6311\u51fa\u6765\u8bf4\u3002 \u91cd\u70b9\u662f\uff0c\u6211\u4eec\u8bb0\u4f4f\u4e86\u8fd9\u4e9b\uff0c\u4f46\u6211\u4eec\u771f\u7684\u7406\u89e3\u5b83\u4eec\u5417\uff1f\u591a\u5c11\u4eba\u5728\u8bb0\u4f4f\u4e86\u5b83\u4eec\u5e76\u4e14\u719f\u7ec3\u5f39\u51fa\u6765\u7684\u540c\u65f6\uff0c\u8fd8\u5728\u5fc3\u4e2d\u601d\u8003\u7740\u4ee5\u4e0b\u95ee\u9898\uff1a \u4e3a\u4ec0\u4e48\u4f1a\u6709\u5927\u8c03\u548c\u5c0f\u8c03\u5b58\u5728\uff1f\u4e3a\u4ec0\u4e48\u8981\u7ec3\u5927\u8c03\u548c\u5c0f\u8c03\u97f3\u9636\uff1f\u4e3a\u4ec0\u4e48\u670924\u4e2a\u5927\u5c0f\u8c03\uff1f \u8fd9\u4e9b\u95ee\u9898\u5728\u7f51\u7edc\u4e0a\u53ef\u4ee5\u88ab\u5f88\u8f7b\u6613\u5730\u641c\u5230\u5bf9\u9898\u7684\u7b54\u6848\u3002 \u4f46\u662f\u636e\u6211\u7684\u641c\u7d22\u7ed3\u679c\uff0c\u6709\u5f88\u591a\u7b54\u6848\u4e0d\u8fc7\u662f\u63d0\u4f9b\u4e86\u53e6\u4e00\u5806\u7ed3\u8bba\uff0c\u6765\u8bc1\u660e\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002\u4e8e\u662f\uff0c\u4f60\u8d8a\u641c\u7d22\uff0c\u8d8a\u89c9\u5f97\u81ea\u5df1\u9700\u8981\u8bb0\u7684\u4e1c\u897f\u8d8a\u6765\u8d8a\u591a\uff0c\u8bb0\u5fc6\u7684\u6742\u4e71\u5206\u652f\u526a\u4e0d\u65ad\u7406\u8fd8\u4e71\u3002 \u641c\u4e3a\u5565\u6709\u5927\u5c0f\u8c03\uff0c\u522b\u4eba\u544a\u8bc9\u4f60\u8981\u8bb0\u5168\u5168\u534a\u5168\u5168\u5168\u534a\uff1b\u641c\u4e3a\u5565\u8981\u7ec3\u97f3\u9636\uff0c\u90fd\u8bf4\u8fd9\u94a2\u7434\u57fa\u672c\u529f\u5fc5\u987b\u5f97\u7ec3\u554a\uff01\u641c\u4e3a\u5565\u670924\u4e2a\u5927\u5c0f\u8c03\uff0c\u522b\u4eba\u53cd\u624b\u4e22\u8fc7\u6765\u4e00\u4e2a\u4e94\u5ea6\u5708\uff0c\u53eb\u4f60\u80cc\u5230\u80fd\u81ea\u5df1\u753b\u4e0b\u6765\u3002 \u6709\u65f6\u5019\u6211\u4eec\u4ee5\u4e3a\u6211\u4eec\u5728\u7406\u89e3\u77e5\u8bc6\uff0c\u5230\u5934\u6765\u4e5f\u53ea\u662f\u4e0d\u65ad\u5730\u53bb\u8bb0\u66f4\u591a\u7684\u4e1c\u897f\uff0c\u7136\u800c\u8bb0\u4f4f\u77e5\u8bc6\u2260\u7406\u89e3\u77e5\u8bc6\u3002 \u672c\u6587\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5e2e\u52a9\u4f60\u8f83\u8f7b\u677e\u5730\u7406\u89e3\u5927\u5c0f\u8c03\u4e50\u7406\u610f\u4e49\u7684\u601d\u7ef4\u89d2\u5ea6\uff0c\u5e2e\u4f60\u771f\u6b63\u8e0f\u5165\u53e4\u5178\u97f3\u4e50\u8c03\u5f0f\u7406\u89e3\u7684\u5165\u95e8\uff1b\u4e5f\u5206\u4eab\u4e00\u4e0b\u6211\u5728\u5b66\u4e60\u548c\u6559\u5b66\u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u597d\u7684\u601d\u7ef4\u6a21\u5f0f\uff0c\u5e0c\u671b\u5bf9\u4f60\u5b66\u4e60\u5176\u4ed6\u77e5\u8bc6\u65f6\u4e5f\u80fd\u6709\u5e2e\u52a9\u3002","title":"\u4ec0\u4e48\u662f\u8c03\u6027\uff1f\u4ec0\u4e48\u662f\u5927\u5c0f\u8c03\u5f0f?!"},{"location":"%E9%9F%B3%E4%B9%90/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B0%83%E6%80%A7/#1","text":"\u76ee\u524d\u5f88\u591a\u7406\u8bba\u6559\u79d1\u4e66\uff0c\u4e0d\u6b62\u662f\u97f3\u4e50\u7c7b\u76ee\u7684\u4e50\u7406\u4e66\uff0c\u8fd8\u5305\u62ec\u4e86\u6570\u5b66\u548c\u7f16\u7a0b\u4e4b\u7c7b\u7684\u7406\u79d1\u6559\u6750\uff0c\u8bb2\u89e3\u77e5\u8bc6\u7684\u65b9\u5f0f\u90fd\u662f\u975e\u5e38\u76f4\u89c2\u3001\u6709\u6982\u62ec\u6027\u7684\uff0c\u7531\u56e0\u81f3\u679c\uff0c\u5305\u542b\u7684\u5b9a\u4e49\u3001\u5b9a\u7406\u3001\u8bc1\u660e\u3001\u5230\u7ed3\u8bba\uff0c\u884c\u4e91\u6d41\u6c34\uff0c\u4e95\u4e95\u6709\u6761\u3002 \u5176\u5b9e\uff0c\u8fd9\u662f\u628a\u4eba\u7c7b\u53d1\u660e\u521b\u9020\u4e00\u9879\u4e8b\u7269\u6216\u7406\u8bba\u7684\u6b65\u9aa4\u5b8c\u5168\u98a0\u5012\u8fc7\u6765\u4e86\u3002\u5b83\u4eec\u76f4\u63a5\u544a\u8bc9\u4f60\u505a\u6cd5\u548c\u516c\u5f0f\uff0c\u4f9b\u4f60\u53bb\u9a8c\u8bc1\u8fd9\u5957\u7406\u8bba\u662f\u53ef\u884c\u7684\u3002\u800c\u5173\u4e8e\u8fd9\u5957\u7406\u8bba\u662f\u600e\u4e48\u8bde\u751f\u7684\uff0c\u4e2d\u95f4\u7ecf\u5386\u4e86\u600e\u6837\u7684\u5386\u53f2\u8fdb\u7a0b\u548c\u601d\u8003\u8fc7\u7a0b\uff0c\u5f88\u5c11\u6709\u7406\u8bba\u4e66\u7c4d\u80fd\u8be6\u7ec6\u5730\u9610\u8ff0\u3002 \u5c31\u50cf\u6309\u7167\u672c\u6587\u5f00\u5934\u7684\u4e24\u79cd\u65b9\u6cd5\uff0c\u8bb0\u4f4f\u4e86\u5927\u5c0f\u8c03\u7684\u8868\u9762\u7ed3\u6784\uff0c\u53ef\u80fd\u7d27\u63a5\u7740\u5c31\u8ba9\u4f60\u505a\u4e50\u7406\u9898\uff0c\u5f00\u59cb\u5206\u6790\u8fd9\u4e2a\u8c03\u5f0f\u600e\u4e48\u5199\u3001\u90a3\u9996\u4e50\u66f2\u662f\u4ec0\u4e48\u8c03\uff0c\u5374\u6ca1\u6709\u65f6\u95f4\u6765\u601d\u8003\u4e00\u4e0b\u5927\u5c0f\u8c03\u662f\u600e\u4e48\u6765\u7684\u3002\u4ea6\u6216\u8005\u662f\u6211\u4eec\u9ad8\u4e2d\u505a\u6570\u5b66\u9898\u65f6\u80cc\u4f4f\u7684\u90a3\u4e9b\u590d\u6742\u516c\u5f0f\uff0c\u5176\u5b9e\u5b83\u4eec\u90fd\u5df2\u7ecf\u7ecf\u5386\u4e86\u65e0\u6570\u7684\u94bb\u7814\u548c\u78b0\u649e\uff0c\u624d\u88ab\u9ad8\u5ea6\u603b\u7ed3\u51fa\u6765\u7684\u77e5\u8bc6\u7ed3\u6676\u3002 \u7136\u800c\u201c\u6211\u4eec\u8981\u7684\u4e0d\u662f\u76f8\u5bf9\u8bba\uff0c\u800c\u662f\u8bde\u751f\u76f8\u5bf9\u8bba\u7684\u90a3\u4e2a\u5927\u8111\u201d\u3002 \u4f46\u662f\uff0c\u8bb0\u4f4f\u5df2\u6709\u7684\u77e5\u8bc6\uff0c\u53bb\u521b\u9020\u66f4\u591a\u7684\u77e5\u8bc6\uff0c\u7528\u5df2\u6709\u7684\u8f6e\u5b50\uff0c\u53bb\u9020\u4e00\u4e2a\u53c8\u4e00\u4e2a\u66f4\u5927\u7684\u8f6e\u5b50\uff0c\u8fd9\u662f\u65f6\u4ee3\u53d1\u5c55\u4e0d\u53ef\u907f\u514d\u7684\u8d8b\u52bf\uff0c\u4e3a\u4e86\u8ba9\u7406\u8bba\u548c\u77e5\u8bc6\u6c34\u5e73\u9ad8\u6548\u5730\u8fed\u4ee3\u53d1\u5c55\uff0c\u6211\u4eec\u5927\u591a\u6570\u65f6\u5019\u53ea\u6709\u8bb0\u4f4f\u77e5\u8bc6\u7684\u4efd\u3002 \u5982\u679c\u6211\u4eec\u5728\u81ea\u6211\u5b66\u4e60\u548c\u6559\u5b66\u4e2d\uff0c\u80fd\u900f\u8fc7\u73b0\u8c61\uff0c\u4ece\u96f6\u5f00\u59cb\u8ddf\u5b66\u751f\u4e00\u8d77\u63a2\u7d22\u77e5\u8bc6\u7684\u53d1\u5c55\u8fc7\u7a0b\uff0c\u4ece\u5386\u53f2\u548c\u903b\u8f91\u89d2\u5ea6\u8fd8\u539f\u77e5\u8bc6\u80cc\u540e\u53d1\u5c55\u7684\u8fc7\u7a0b\uff0c\u624b\u628a\u624b\u5730\u5c06\u8fd9\u4e2a\u8fc7\u7a0b\u63a8\u7406\u4e00\u904d\uff0c\u8ba9\u5b66\u751f\u4e5f\u80fd\u7406\u89e3\u8fd9\u9879\u4e8b\u7269\u548c\u7406\u8bba\u53d1\u5c55\u7684\u8fc7\u7a0b\uff0c\u8fd9\u6837\u4e0d\u4ec5\u6700\u540e\u5e2e\u52a9\u4ed6\u4eec\u7406\u89e3\u4e86\u77e5\u8bc6\uff0c\u4e5f\u8bad\u7ec3\u4e86\u601d\u7ef4\u80fd\u529b\u3002","title":"1\u3001\u601d\u7ef4\u6a21\u5f0f\u6982\u8ff0"},{"location":"%E9%9F%B3%E4%B9%90/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B0%83%E6%80%A7/#2","text":"\u8981\u7406\u89e3\u5927\u5c0f\u8c03\u7684\u6982\u5ff5\uff0c\u6709\u4e00\u4e2a\u539f\u5219\u8981\u5148\u660e\u767d\uff1a\u5148\u6709\u97f3\u4e50\uff0c\u540e\u6709\u4e50\u7406\u3002 \u8fd9\u4e2a\u903b\u8f91\u5173\u7cfb\u5c31\u548c\u201c\u5148\u6709\u8bed\u8a00\uff0c\u540e\u6709\u8bed\u6cd5\u201d\u4e00\u6837\u3002 \u4e50\u7406\u662f\u5bf9\u97f3\u4e50\u7684\u4e00\u79cd\u603b\u7ed3\uff0c\u5c31\u50cf\u82f1\u8bed\u7684\u8bed\u6cd5\u4e00\u6837\uff0c\u8bf4\u7684\u4eba\u591a\u4e86\uff0c\u4e8e\u662f\u6839\u636e\u5927\u91cf\u88ab\u4f7f\u7528\u7684\u5e38\u89c4\u8bed\u5e8f\u89c4\u5f8b\u603b\u7ed3\u51fa\u6765\u7684\u8bed\u6cd5\uff1b\u5404\u79cd\u97f3\u4e50\u591a\u4e86\uff0c\u6839\u636e\u5927\u91cf\u7684\u97f3\u4e50\u8868\u73b0\u5f62\u5f0f\u603b\u7ed3\u51fa\u6765\u7684\u4e00\u5957\u7406\u8bba\u3002 \u6240\u4ee5\uff0c\u5728\u5b66\u4e60\u82f1\u8bed\u4e2d\u4f1a\u51fa\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u4e5f\u5927\u91cf\u5730\u51fa\u73b0\u5728\u5b66\u4e60\u97f3\u4e50\u4e2d\uff1a\u5f88\u591a\u82f1\u8bed\u4e3a\u6bcd\u8bed\u7684\u4eba\u5e38\u5e38\u4f1a\u4f7f\u7528\u4e00\u4e9b\u5728\u6807\u51c6\u8bed\u6cd5\u4e66\u4e0a\u884c\u4e0d\u901a\u7684\u201c\u9519\u8bef\u201d\u8bed\u6cd5\uff1b\u73b0\u4ee3\u97f3\u4e50\u7684\u53d1\u5c55\u4e5f\u5f00\u59cb\u8131\u79bb\u4f20\u7edf\u4e50\u7406\u7684\u5c40\u9650\uff0c\u4f7f\u7528\u4e00\u4e9b\u5728\u4ee5\u524d\u770b\u6765\u662f\u4e0d\u5408\u7406\u7684\u548c\u58f0\u8fdb\u884c\u3001\u8c03\u5f0f\u7cfb\u7edf\u7b49\u3002\u4e0d\u8fc7\u8fd9\u70b9\u4e0d\u5728\u4eca\u5929\u7684\u4e3b\u8981\u8ba8\u8bba\u8303\u56f4\u3002 \u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff0c\u5927\u5c0f\u8c03\u97f3\u9636\u4e43\u81f3\u6240\u6709\u4e50\u7406\uff0c\u4e0d\u662f\u201c\u88ab\u89c4\u5b9a\u7684\u201d\uff0c\u800c\u662f\u5728\u67d0\u4e2a\u65f6\u671f\u4eba\u4eec\u5bf9\u5df2\u6709\u7684\u97f3\u4e50\u5f62\u6001\u7684\u4e00\u79cd\u9ad8\u5ea6\u7684\u603b\u7ed3\uff0c\u5e76\u4e14\u53ef\u4ee5\u6839\u636e\u8fd9\u4e9b\u603b\u7ed3\u51fa\u6765\u7684\u77e5\u8bc6\u6846\u67b6\uff0c\u53bb\u521b\u9020\u66f4\u591a\u7684\u97f3\u4e50\u3002 \u63a5\u4e0b\u6765\u6211\u7528\u601d\u8003\u5927\u5c0f\u8c03\u8c03\u5f0f\u8bde\u751f\u8fc7\u7a0b\u7684\u601d\u7ef4\u6a21\u5f0f\uff0c\u6765\u7a7f\u63d2\u8bb2\u89e3\u5927\u5c0f\u8c03\u4e50\u7406\uff0c\u5e2e\u4f60\u4f60\u66f4\u597d\u7684\u7406\u89e3\u5b83\u4eec\uff0c\u628a\u8bb0\u5fc6\u4e2d\u6742\u4e71\u7684\u7406\u8bba\u788e\u7247\u6d41\u7545\u5730\u8d2f\u901a\u8d77\u6765\uff0c\u5f62\u6210\u81ea\u6d3d\u7684\u7cfb\u7edf\u3002","title":"2\u3001\u5148\u6709\u97f3\u4e50\uff0c\u540e\u6709\u4e50\u7406"},{"location":"%E9%9F%B3%E4%B9%90/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B0%83%E6%80%A7/#3","text":"\u672c\u8282\u4e3b\u8981\u4ee5\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3\u77e5\u8bc6\u4e3a\u76ee\u7684\u8fdb\u884c\u68b3\u7406\u548c\u9ad8\u5ea6\u603b\u7ed3\uff0c\u6709\u7f8e\u5316\u548c\u7701\u7565\u7684\u6210\u5206\u5728\uff0c\u8fc7\u7a0b\u548c\u7ec6\u8282\u5e76\u4e0d\u7edd\u5bf9\u4e25\u8c28\uff0c\u6709\u5174\u8da3\u4e86\u89e3\u97f3\u4e50\u5386\u53f2\u7684\u4eba\u53ef\u4ee5\u81ea\u884c\u8fdb\u884c\u66f4\u6df1\u5165\u7684\u7814\u7a76\uff0c\u4e5f\u6b22\u8fce\u5728\u8bc4\u8bba\u533a\u63a2\u8ba8\u3002 1. \u5728\u67d0\u4e00\u4e2a\u97f3\u4e50\u98ce\u683c\u5f62\u6001\u9c9c\u660e\u4e14\u53d1\u5c55\u9f0e\u76db\u7684\u65f6\u671f\uff08\u6587\u827a\u590d\u5174\u81f3\u5df4\u6d1b\u514b\u65f6\u671f\u524d\u540e\uff09\uff0c\u97f3\u4e50\u5bb6\u4eec\u628a\u5927\u4f17\u4e2d\u6bd4\u8f83\u666e\u904d\u7684\u97f3\u4e50\u4f5c\u54c1\u8fdb\u884c\u5206\u6790\uff0c\u53d1\u73b0\u5927\u90e8\u5206\u7684\u97f3\u4e50\u53ef\u4ee5\u88ab\u533a\u5206\u4e3a\u4e24\u79cd\u98ce\u683c\u9c9c\u660e\u7684\u97f3\u4e50\u7c7b\u522b\uff0c\u4ed6\u4eec\u901a\u5e38\u91c7\u7528\u4e86\u4e24\u79cd\u56fa\u5b9a\u6846\u67b6\u7684\u8c03\u5f0f\u97f3\u9636\u6765\u8fdb\u884c\u65cb\u5f8b\u548c\u548c\u58f0\u7684\u521b\u4f5c\uff0c\u8fd9\u4e24\u79cd\u97f3\u4e50\u8c03\u5f0f\u5c31\u662f\u5927\u8c03\u548c\u5c0f\u8c03\uff0c\u5e76\u660e\u786e\u4e86\u5927\u8c03\u548c\u5c0f\u8c03\u4e2d\u7684\u7ed3\u6784\u3002 \u4e50\u7406\u77e5\u8bc6\u70b9\uff1a \u5927\u8c03\u548c\u5c0f\u8c03\u7684\u5168\u534a\u97f3\u7ed3\u6784\uff1a\u5168\u5168\u534a\u5168\u5168\u5168\u534a\u3001\u5168\u534a\u5168\u5168\u534a\u5168\u5168\u3002 \u5927\u8c03\u7684\u97f3\u7a0b\u7ed3\u6784\uff1a\u7eaf\u4e00\u5ea6\u3001\u5927\u4e8c\u5ea6\u3001 \u5927\u4e09\u5ea6 \u3001\u7eaf\u56db\u5ea6\u3001\u7eaf\u4e94\u5ea6\u3001 \u5927\u516d\u5ea6 \u3001 \u5927\u4e03\u5ea6 \u5c0f\u8c03\u7684\u97f3\u7a0b\u7ed3\u6784\uff1a\u7eaf\u4e00\u5ea6\u3001\u5927\u4e8c\u5ea6\u3001 \u5c0f\u4e09\u5ea6 \u3001\u7eaf\u56db\u5ea6\u3001\u7eaf\u4e94\u5ea6\u3001 \u5c0f\u516d\u5ea6 \u3001 \u5c0f\u4e03\u5ea6 2. \u5f53\u4ed6\u4eec\u628a\u8fd9\u6837\u7684\u97f3\u9636\u5173\u7cfb\u5957\u5165\u968f\u610f\u4e00\u4e2a\u4e3b\u97f3\u5f00\u59cb\u7684\u97f3\u9636\u4e0a\uff0c\u5c31\u4f1a\u51fa\u73b0\u5e26\u5404\u79cd\u5347\u964d\u53f7\u7684\u8c03\u6027\u3002\u7279\u522b\u662f\u5728\u5341\u4e8c\u5e73\u5747\u5f8b\u51fa\u73b0\u4ee5\u540e\uff0c\u8c03\u6027\u5728\u952e\u76d8\u4e0a\u7684\u53d1\u6325\u8fbe\u5230\u4e86\u6781\u81f4\u3002 \u4e50\u7406\u77e5\u8bc6\u70b9\uff1a \u8c03\u6027\uff1a\u56e0\u4e3a\u8c03\u5f0f\u97f3\u9636\u56fa\u5b9a\u7684\u7ed3\u6784\u5173\u7cfb\uff0c\u624d\u51fa\u73b0\u4e86\u5404\u7c7b\u7684\u5347\u964d\u53f7\u3002\u6bd4\u5982\u6211\u4eec\u628a\u5927\u8c03\u5f0f\u7684\u7ed3\u6784\u653e\u5728\u4ee5C\u4e3a\u4e3b\u97f3\u5f00\u59cb\u7684\u97f3\u9636\u4e0a\uff0c\u5c31\u521a\u597d\u6ca1\u6709\u5347\u964d\u53f7\u3002\u653e\u5230\u4ee5A\u4e3a\u4e3b\u97f3\u7684\u97f3\u9636\u4e0a\uff0c\u5c31\u9700\u8981\u5347\u4e09\u4e2a\u97f3#F #C #G\uff0c\u624d\u80fd\u9002\u914d\u8fd9\u4e2a\u7ed3\u6784\u3002\u56e0\u6b64\u4f60\u4e0d\u9700\u8981\u518d\u53bb\u6b7b\u677f\u5730\u53bb\u8bb0\u5fc6\u201c4152637\uff0f7362514 \uff0f\u5347\u53f7\u6700\u540e\u4e00\u4e2a\u8c03\u53f7\u5f80\u524d\u4e00\u4e2a\u534a\u97f3\u662f\u8c03\u6027\u540d\u79f0\u3001\u964d\u53f7\u5012\u6570\u7b2c\u4e8c\u4e2a\u8c03\u53f7\u662f\u8c03\u6027\u540d\u79f0\u201d\u8fd9\u6837\u9ad8\u5ea6\u603b\u7ed3\u7684\u8868\u9762\u89c4\u5f8b\u3002 \u7efc\u4e0a\uff0c\u6b63\u786e\u7684\u903b\u8f91\u7406\u89e3\u4e3a\u8c03\u5f0f\u51b3\u5b9a\u4e86\u97f3\u9636\u7ed3\u6784\u4ece\u800c\u786e\u5b9a\u4e86\u8c03\u6027\u7684\u5347\u964d\u53f7\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u5730\u4ece\u5347\u964d\u53f7\u6765\u51b3\u5b9a\u8c03\u6027\u3002 \u5341\u4e8c\u5e73\u5747\u5f8b\uff1a\u53d7\u9650\u4e8e\u4ee5\u524d\u7684\u5f8b\u5236\u6bcf\u4e2a\u97f3\u4e4b\u95f4\u9891\u7387\u7684\u6bd4\u4f8b\u5173\u7cfb\uff0c\u4ee5\u524d\u662f\u65e0\u6cd5\u968f\u610f\u8f6c\u6362\u8c03\u6027\u7684\uff0c\u56e0\u4e3a\u6362\u5230\u5176\u4ed6\u8c03\u4e0a\uff0c\u97f3\u7b26\u4e4b\u95f4\u7684\u6bd4\u4f8b\u5c31\u4e0e\u4e4b\u524d\u4e0d\u4e00\u6837\u4e86\u3002\u5341\u4e8c\u5e73\u5747\u5f8b\u5219\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f7f\u952e\u76d8\u4e50\u5668\u80fd\u591f\u968f\u610f\u8f6c\u8c03\u3002 \uff13. \u7531\u4e8e\u4e50\u66f2\u521b\u4f5c\u7684\u9700\u8981\uff0c\u4f5c\u66f2\u5bb6\u4eec\u5728\u97f3\u4e50\u4e2d\u4f1a\u7ecf\u5e38\u8fd0\u7528\u5927\u5c0f\u8c03\u4e92\u76f8\u8f6c\u8c03\u7684\u624b\u6cd5\u3002\u5728\u6240\u6709\u7684\u8c03\u6027\u4e2d\uff0c\u603b\u6709\u90a3\u4e48\u51e0\u4e2a\u8c03\u76f8\u4e92\u4e4b\u95f4\u8f6c\u8d77\u6765\u6700\u597d\u542c\uff0c\u8fc7\u6e21\u4e5f\u6700\u8212\u670d\u3002\u6709\u4e86\u7cfb\u7edf\u6027\u7684\u4e50\u7406\u77e5\u8bc6\u68b3\u7406\u4ee5\u540e\uff0c\u4ed6\u4eec\u53d1\u73b0\uff0c\u4fbf\u4e8e\u5927\u5c0f\u8c03\u4e92\u8f6c\u7684\u90a3\u51e0\u4e2a\u8c03\uff0c\u901a\u5e38\u90fd\u662f\u5347\u964d\u53f7\u76f8\u540c\u7684\u4e24\u4e2a\u5927\u5c0f\u8c03\u3001\u548c\u540c\u4e3b\u97f3\u5f00\u59cb\u7684\u5927\u5c0f\u8c03\uff1b\u8fdb\u800c\u624d\u53d1\u73b0\uff0c\u6240\u6709\u5347\u964d\u53f7\u76f8\u540c\u7684\u5927\u5c0f\u8c03\uff0c\u4e3b\u97f3\u4e4b\u95f4\u59cb\u7ec8\u95f4\u9694\u7740\u4e00\u4e2a\u5c0f\u4e09\u5ea6\uff1b\u800c\u540c\u4e3b\u97f3\u5f00\u59cb\u7684\u5927\u5c0f\u8c03\uff0c\u5dee\u522b\u59cb\u7ec8\u57283\u30016\u30017\u7ea7\u3002 \u4e50\u7406\u77e5\u8bc6\u70b9\uff1a \u6211\u4eec\u90fd\u77e5\u9053\u5173\u7cfb\u5927\u5c0f\u8c03\u76f8\u5dee\u4e00\u4e2a\u5c0f\u4e09\u5ea6\uff0c\u4f46\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u6709\u201c\u5173\u7cfb\u201d\uff1f\u56e0\u4e3a\u4ed6\u4eec\u5171\u7528\u4e00\u5957\u5347\u964d\u53f7\u7cfb\u7edf\u3002 \u662f\u56e0\u4e3a\u5347\u964d\u53f7\u4e00\u6837\uff0c\u624d\u88ab\u89c4\u4e3a\u5173\u7cfb\u5927\u5c0f\u8c03\uff0c\u624d\u53d1\u73b0\u4e3b\u97f3\u4e4b\u95f4\u7684\u56fa\u5b9a\u8ddd\u79bb\uff1b\u800c\u4e0d\u662f\u56e0\u4e3a\u76f8\u5dee\u5c0f\u4e09\u5ea6\uff0c\u6240\u4ee5\u662f\u5173\u7cfb\u5927\u5c0f\u8c03\u3002 \u540c\u4e3b\u97f3\u5927\u5c0f\u8c03\u7684\u5dee\u522b\u57283\u30016\u30017\u7ea7\uff0c\u4f46\u8c03\u53f7\u4e0d\u540c\u3002\u5982\u679c\u8981\u786e\u5b9a\u8fd9\u4e2a\u5c0f\u8c03\u7684\u8c03\u53f7\u53ef\u4ee5\u5148\u5411\u4e0a\u627e\u5b83\u7684\u5173\u7cfb\u5927\u8c03\u3002 4. \u5927\u8c03\u5f0f\u7684\u4e2d\u7531\u4e8e\u6709\u5bfc\u97f3\u7684\u5b58\u5728\uff08\u4e0e\u4e3b\u97f3\u5f62\u6210\u534a\u97f3\u5173\u7cfb\uff0f\u5f62\u6210\u5c5e\u4e03\u548c\u5f26\u4e2d\u4e09\u5168\u97f3\u7684\u7ed3\u6784\uff09\uff0c\u53ef\u4ee5\u5f97\u51fa\u6700\u57fa\u672c\u7684\u4e00\u79cd\u548c\u58f0\u529f\u80fd\u8fdb\u884c\uff0c\u5373\u6b63\u683c\u7ec8\u6b62\uff08\uff367 \u2192 \uff29\uff09\uff0c\u4ece\u800c\u5f62\u6210\u5f3a\u70c8\u7684\u548c\u58f0\u8272\u5f69\u548c\u7ec8\u6b62\u611f\u3002\u7136\u800c\u7531\u4e8e\u5c0f\u8c03\u4e2d\u7b2c7\u7ea7\u4e0e\u7b2c1\u7ea7\u662f\u5168\u97f3\u5173\u7cfb\uff0c\u5728\u97f3\u54cd\u4e0a\u6ca1\u6709\u5f80\u4e3b\u97f3\u8fdb\u884c\u7684\u5f3a\u70c8\u503e\u5411\uff0c\u56e0\u6b64\u4e5f\u6ca1\u6709\u5927\u5c0f\u4e03\u548c\u5f26\u7ed3\u6784\u7684\u5c5e\u4e03\u548c\u58f0\u529f\u80fd\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u97f3\u4e50\u5bb6\u4eec\u628a\u5c0f\u8c03\u97f3\u9636\u4e2d\u7684\u7b2c7\u7ea7\u97f3\u4e34\u65f6\u5347\u4e86\u534a\u97f3\uff0c\u975e\u5e38\u7b80\u5355\u7684\u4e00\u4e2a\u64cd\u4f5c\uff0c\u4f7f\u5c0f\u8c03\u62e5\u6709\u4e86\uff367 \u2192 \uff29\u7684\u548c\u58f0\u529f\u80fd\u8fdb\u884c\uff0c\u56e0\u6b64\u4e5f\u5c06\u5b83\u547d\u540d\u4e3a\u548c\u58f0\u5c0f\u8c03\u3002\u540c\u65f6\u4e3a\u4e86\u533a\u5206\uff0c\u4e0a\u8ff0\u666e\u901a\u7684\u5c0f\u8c03\u90fd\u547d\u540d\u4e3a\u81ea\u7136\u5c0f\u8c03\uff0c\u5927\u8c03\u5219\u79f0\u4f5c\u81ea\u7136\u5927\u8c03\u3002 \u4e50\u7406\u77e5\u8bc6\u70b9\uff1a \u5bfc\u97f3\uff1a\u81ea\u7136\u5927\u8c03\u5f0f\u4e2d\u7684\u7b2c7\u7ea7\u97f3\uff0c\u4e0e\u4e3b\u97f3\u5f62\u6210\u534a\u97f3\u5173\u7cfb\uff0c\u540c\u65f6\u5145\u5f53\u5c5e\u4e03\u548c\u5f26\u4e2d\u7684\u4e09\u97f3\uff0c\u6784\u6210\u4e86\u5f3a\u70c8\u9700\u8981\u88ab\u89e3\u51b3\u7684\u548c\u58f0\u611f\u3002 \u81ea\u7136\u5c0f\u8c03\u4e2d\u7f3a\u4e4f\u5bfc\u97f3\uff0c\u548c\u58f0\u5c0f\u8c03\u7684\u51fa\u73b0\u662f\u4e3a\u4e86\u8865\u5145\u5bfc\u97f3\u548c\u7ec8\u6b62\u5f0f\u548c\u58f0\u8fdb\u884c\uff0c\u56e0\u6b64\u548c\u58f0\u5c0f\u8c03\u53477\u7ea7\u3002 \u548c\u58f0\u5c0f\u8c03\u7684\u53477\u7ea7\u4e3a\u4e34\u65f6\u5347\u964d\u53f7\uff0c\u4e0d\u5f71\u54cd\u5b83\u7684\u56fa\u5b9a\u5347\u964d\u662f\u548c\u5173\u7cfb\u5927\u8c03\u4e00\u6837\u7684\u3002 5. \u548c\u58f0\u5c0f\u8c03\u97f3\u9636\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u5728\u7b2c6\u7ea7\u548c\u7b2c7\u7ea7\u5f62\u6210\u4e86\u4e00\u4e2a\u589e\u4e8c\u5ea6\u7684\u97f3\u54cd\u3002\u5982\u679c\u4f5c\u66f2\u4e25\u683c\u6309\u7167\u548c\u58f0\u5c0f\u8c03\u6267\u884c\uff0c\u6211\u4eec\u5c31\u4f1a\u5728\u542c\u611f\u4e0a\u89c9\u5f97\u8fd9\u9996\u4e50\u66f2\u6ee1\u6ee1\u7684\u201c\u5f02\u57df\u98ce\u60c5\u201d\u3002\u4e3a\u4e86\u8ba9\u65cb\u5f8b\u97f3\u54cd\u5e73\u7a33\u8fdb\u884c\uff0c\u56e0\u6b64\u4e0a\u884c\u7684\u65f6\u5019\u628a\u7b2c6\u7ea7\u4e5f\u4e34\u65f6\u5347\u4e86\uff0c\u4e3b\u8981\u4e3a\u65cb\u5f8b\u7684\u5e73\u7a33\u8fdb\u884c\u670d\u52a1\uff0c\u800c\u6b64\u523b\u548c\u58f0\u4e5f\u5177\u5907\u4e86\u89e3\u51b3\u548c\u7ec8\u6b62\u7684\u6761\u4ef6\u3002\u5728\u4e0b\u884c\u4e0d\u9700\u8981\u7ec8\u6b62\u5f0f\u7684\u65f6\u5019\uff0c\u628a6\u30017\u7ea7\u4e00\u8d77\u8fd8\u539f\u4e3a\u81ea\u7136\u5c0f\u8c03\uff0c\u518d\u6b21\u7ef4\u62a4\u4e86\u65cb\u5f8b\u7684\u5e73\u7a33\u8fdb\u884c\u3002 \u4e50\u7406\u77e5\u8bc6\u70b9\uff1a \u65cb\u5f8b\u5c0f\u8c03\uff1a\u5728\u548c\u58f0\u5c0f\u8c03\u7684\u57fa\u7840\u4e0a\u4e34\u65f6\u5347\u7b2c6\u7ea7\uff0c\u4f46\u4e0b\u884c\u65f6\u8fd8\u539f\u3002\u76ee\u7684\uff1a\u4f7f\u65cb\u5f8b\u4e0d\u51fa\u73b0\u7a81\u5140\u7684\u589e\u4e8c\u5ea6\u3002 \u8865\u5145\u8bf4\u660e\uff1a 1\u3001\u5176\u5b9e\u5728\u4e50\u7406\u548c\u548c\u58f0\u5b66\u8fd8\u6ca1\u88ab\u5f52\u7eb3\u6210\u7cfb\u7edf\u65f6\uff0c\u5f53\u65f6\u4f5c\u66f2\u5bb6\u4eec\u65e9\u5df2\u53d1\u73b0\u67d0\u79cd\u4f5c\u66f2\u624b\u6cd5\u5728\u542c\u611f\u4e0a\u6700\u8212\u9002\uff0c\u6240\u4ee5\u5f53\u65f6\u5df2\u6709\u7684\u5c0f\u8c03\u97f3\u4e50\u5927\u90e8\u5206\u666e\u904d\u5728\u7ec8\u6b62\u65f6\u90fd\u662f\u91c7\u7528\u4e86\u548c\u58f0\u5c0f\u8c03\u7684\u65b9\u6848\uff0c\u5e26\u4e86\u4e34\u65f6\u5347VII\u7ea7\u7684V7\u548c\u5f26\u7684\uff1b\u800c\u53e6\u4e00\u65b9\u9762\u4e0d\u60f3\u8ba9\u66f2\u5b50\u51fa\u73b0\u589e\u4e8c\u5ea6\u97f3\u54cd\uff0c\u4e5f\u540c\u65f6\u91c7\u7528\u4e86\u65cb\u5f8b\u5c0f\u8c03\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6240\u4ee5\u90a3\u65f6\u5019\u7684\u97f3\u4e50\u5176\u5b9e\u90fd\u662f\u4e09\u4e2a\u7cfb\u7edf\u6df7\u7528\uff0c\u5e76\u6ca1\u6709\u8bf4\u4e00\u9996\u4e50\u66f2\u5f88\u4e25\u683c\u5730\u53ea\u6267\u884c\u67d0\u4e2a\u7cfb\u7edf\u3002 \u800c\u8fd9\u4e9b\u5927\u5c0f\u8c03\u5f0f\u77e5\u8bc6\uff0c\u90fd\u662f\u540e\u6765\u6839\u636e\u4ed6\u4eec\u5728\u4f5c\u66f2\u91cc\u7684\u7528\u6cd5\uff0c\u624d\u603b\u7ed3\u51fa\u4e86\u8fd9\u4e09\u79cd\u5c0f\u8c03\u97f3\u9636\u5f62\u5f0f\u3002 \u6240\u4ee5\u4ece\u8fd9\u70b9\u6765\u770b\uff0c\u4e0a\u9762\u4f18\u5316\u8fc7\u7684\u63cf\u8ff0\u53ea\u662f\u4e3a\u4e86\u6b65\u6b65\u9012\u8fdb\u8ba9\u4f60\u4eec\u6d41\u7545\u7406\u89e3\u77e5\u8bc6\u3002\u5728\u65e9\u671f\u7684\u97f3\u4e50\u91cc\uff0c\u5176\u5b9e\u65e9\u5df2\u5177\u5907\u4e86\u8fd9\u4e9b\u8c03\u5f0f\u3002\u8fd9\u4e5f\u652f\u6301\u4e86\u201c\u4e50\u7406\u77e5\u8bc6\u662f\u5bf9\u5df2\u6709\u97f3\u4e50\u7684\u5f52\u7eb3\u603b\u7ed3\u201d\u8fd9\u4e2a\u89c2\u70b9\u3002 2\u3001\u8fd9\u4e9b\u5927\u5c0f\u8c03\u5f0f\u7684\u6a21\u677f\u4e5f\u4e0d\u80fd\u4ee3\u8868\u5f53\u65f6\u6240\u6709\u7684\u97f3\u4e50\uff0c\u5728\u4e0d\u540c\u7684\u5730\u57df\u3001\u6c11\u65cf\u3001\u5b97\u6559\u7684\u56e0\u7d20\u4e0b\uff0c\u4ecd\u7136\u8fd8\u6709\u5927\u91cf\u7684\u5176\u4ed6\u7279\u6b8a\u7684\u8c03\u5f0f\u3002\u59827\u4e2a\u6559\u4f1a\u8c03\u5f0f\uff08\u4e2d\u53e4\u8c03\u5f0f\uff09\u3001\u4e2d\u56fd\u6c11\u65cf\u8c03\u5f0f\u7b49\u3002 3\u3001\u4f46\u662f\u4e0a\u8ff0\u5185\u5bb9\u662f\u4f60\u53bb\u5b66\u4e60\u7406\u89e3\u5176\u4ed6\u66f4\u591a\u8c03\u5f0f\u97f3\u4e50\u5185\u5bb9\u3001\u751a\u81f3\u662f\u8d85\u51fa\u4e50\u7406\u6846\u67b6\u5916\u7684\u97f3\u4e50\u5f62\u5f0f\u7684\u57fa\u7840\u6846\u67b6\u3002\u7528\u5bf9\u7684\u601d\u8def\u6253\u597d\u57fa\u7840\uff0c\u80fd\u5e2e\u52a9\u4f60\u4ee5\u540e\u66f4\u597d\u7684\u62d3\u5c55\u81ea\u5df1\u3002 \\4. \u5b66\u4e60\u8c03\u5f0f\u8c03\u6027\u7406\u8bba\u7684\u6700\u7ec8\u7ed3\u679c\uff0c\u8fd8\u662f\u4e3a\u4e86\u8046\u542c\u3001\u7406\u89e3\u97f3\u4e50\u7684\u97f3\u54cd\u3002\u6240\u4ee5\u5e94\u8be5\u5728\u7406\u89e3\u4e86\u8fd9\u4e2a\u8bfe\u9898\u7684\u7406\u8bba\u77e5\u8bc6\u4ee5\u540e\uff0c\u7ed3\u5408\u542c\u5230\u7684\u97f3\u4e50\u97f3\u54cd\uff0c\u53bb\u4e3e\u4e00\u53cd\u4e09\u7684\u8bc1\u5b9e\u3001\u7406\u89e3\u4f60\u7684\u7406\u8bba\u77e5\u8bc6\u3002","title":"3\u3001\u4ece\u5927\u5c0f\u8c03\u5386\u53f2\u53d1\u5c55\u7684\u767d\u8bdd\u6545\u4e8b\u7406\u89e3\u4e50\u7406"},{"location":"%E9%9F%B3%E4%B9%90/%E4%BB%80%E4%B9%88%E6%98%AF%E8%B0%83%E6%80%A7/#4","text":"\u8bb0\u4f4f\u4e00\u4e2a\u77e5\u8bc6\uff0c\u4f60\u5c31\u53ea\u62e5\u6709\u4e00\u4e2a\u77e5\u8bc6\u3002\u4f46\u5982\u679c\u8bb0\u4f4f\u4e00\u5957\u601d\u7ef4\u65b9\u5f0f\uff0c\u53bb\u5bfb\u627e\u80cc\u540e\u90a3\u4e2a\u521b\u9020\u77e5\u8bc6\u7684\u8fc7\u7a0b\uff0c\u6709\u5229\u4e8e\u4f60\u89e3\u51b3\u4e00\u6574\u7c7b\u7684\u95ee\u9898\u3002 \u524d\u9635\u5b50\u77e5\u4e4e\u4e0a\u6709\u4e2a\u6570\u5b66\u754c\u7684\u95ee\u9898\u5f88\u706b\uff1a \u5982\u4f55\u770b\u5f85\u300a\u534e\u88d4\u6559\u6388\u53d1\u73b0\u4e8c\u6b21\u65b9\u7a0b\u300c\u6781\u7b80\u300d\u89e3\u6cd5\uff1a\u4e22\u6389\u516c\u5f0f\uff0c\u5168\u7403\u6559\u79d1\u4e66\u53ef\u80fd\u90fd\u8981\u6539\u4e86\u300b\uff1f \u4e4d\u4e00\u770b\uff0c9102\u90fd\u8fc7\u53bb\u4e86\uff0c\u8fd8\u80fd\u53d1\u73b0\u8fd9\u79cd\u65e9\u5df2\u89e3\u51b3\u7684\u53e4\u8001\u95ee\u9898\u7684\u66f4\u4f18\u516c\u5f0f\uff1f\u8fd9\u51e0\u767e\u5e74\u6570\u5b66\u5bb6\u4eec\u90fd\u5e72\u561b\u53bb\u4e86\uff1f \u4ed4\u7ec6\u5730\u9605\u8bfb\u4e86\u9ad8\u8d5e\u7b54\u6848\u548c\u539f\u4f5c\u8005\u7684\u4e13\u680f\u6587\u7ae0\u300a \u7f57\u535a\u6df1\uff1a\u4e00\u5143\u4e8c\u6b21\u65b9\u7a0b\u7684\u4e00\u79cd\u4e0d\u540c\u89e3\u6cd5 \u300b\uff0c\u624d\u53d1\u73b0\uff0c\u4f5c\u8005\u6b63\u662f\u4e3a\u4e86\u63d0\u5021\u672c\u6587\u6240\u8bf4\u7684\u601d\u7ef4\uff0c\u4e3a\u4e86\u8ba9\u66f4\u591a\u5b66\u751f\u53bb\u7406\u89e3\u6c42\u6839\u516c\u5f0f\u80cc\u540e\u8bde\u751f\u548c\u63a8\u5bfc\u7684\u601d\u7ef4\u8fc7\u7a0b\uff0c\u56e0\u6b64\u628a\u63a8\u5bfc\u51fa\u6c42\u6839\u516c\u5f0f\u7684\u8fc7\u7a0b\u7406\u4e86\u4e00\u904d\uff0c\u540c\u65f6\u91c7\u7528\u4e86\u4e00\u4e2a\u80fd\u591f\u66f4\u597d\u7684\u5e2e\u52a9\u5b66\u751f\u7406\u89e3\u80cc\u540e\u63a8\u5bfc\u8fc7\u7a0b\u7684\u516c\u5f0f\u3002\u8fd9\u6837\u5b66\u751f\u5c31\u4e0d\u9700\u523b\u610f\u8bb0\u4f4f\u516c\u5f0f\u5c31\u80fd\u6c42\u89e3\u3002 \u4ed6\u5f3a\u8c03\u7684\u8fd9\u662f\u66f4\u7b80\u5355\u7684\u6559\u5b66\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6539\u5584\u5b66\u4e60\u7684\u4f53\u9a8c\uff0c\u8ba9\u5b66\u751f\u7684\u5b66\u4e60\u66f2\u7ebf\u66f4\u5e73\u7f13\uff0c\u4e0d\u9700\u8981\u53bb\u6b7b\u8bb0\u786c\u80cc\u6c42\u6839\u516c\u5f0f\u3002 \u7f57\u8001\u5e08\u8bf4\u81ea\u5df1\u662f\u4e00\u4e2a\u8bb0\u6027\u5f88\u5dee\u7684\u4eba\u2026\u2026 \u4ed6\u559c\u6b22\u6570\u5b66\u5c31\u662f\u56e0\u4e3a\u6570\u5b66\u4e0d\u9700\u8981\u8bb0\u5fc6\uff0c\u53ea\u8981\u4f1a\u63a8\u5bfc\u8bc1\u660e\u5c31\u884c\uff0c\u4e0d\u9700\u8981\u6b7b\u8bb0\u786c\u80cc\uff0c\u56e0\u6b64\u4ed6\u53ea\u64c5\u957f\u6570\u5b66\u3002 \u4ed6\u53d1\u73b0\u5f88\u591a\u4e2d\u5b66\u751f\u603b\u662f\u559c\u6b22\u6b7b\u8bb0\u786c\u80cc\u516c\u5f0f\uff0c\u6ca1\u6709\u771f\u6b63\u7406\u89e3\u8fd9\u4e2a\u516c\u5f0f\u80cc\u540e\u7684\u63a8\u5bfc\u8fc7\u7a0b\u548c\u5b9e\u9645\u610f\u4e49\u3002\u7f57\u6559\u6388\u8ba4\u4e3a\uff0c\u4ed6\u73b0\u5728\u6b63\u5728\u63a8\u5e7f\u7684\u6c42\u6839\u65b9\u6cd5\u975e\u5e38\u7684\u7b80\u5355\uff0c \u5b8c\u5168\u4e0d\u9700\u8981\u8bb0\u5fc6\u4e0a\u9762\u8fd9\u4e2a\u516c\u5f0f\uff0c\u5c31\u80fd\u5feb\u901f\u7684\u6c42\u89e3\u3002 \u6570\u5b66\u4e0d\u9700\u8981\u8bb0\u5fc6\uff1f\u8c01\u4fe1\uff1f \u9ad8\u4e2d\u8c01\u4e0d\u662f\u80cc\u90a3\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u516c\u5f0f\u80cc\u5f97\u534a\u6b7b\uff1f \u53ef\u662f\u62e5\u6709\u6574\u4e2a\u80cc\u540e\u7684\u903b\u8f91\u601d\u8fa8\u8fc7\u7a0b\u7684\u4eba\uff0c\u5c31\u662f\u8fd9\u4e48\u89c9\u5f97\u3002\u800c\u8fd9\u53ef\u80fd\u4e5f\u662f\u90a3\u4e9b\u8d85\u795e\u5b66\u9738\u4eec\u7684\u79d8\u7c4d\u4e4b\u4e00\u3002 \u6709\u591a\u5c11\u4eba\u9ad8\u4e2d\u8003\u6570\u5b66\u7684\u65f6\u5019\u5199\u9519\u4e86x={-b\u00b1[\u221a(b^2 - 4ac)] }/2a\u8fd9\u4e2a\u516c\u5f0f\uff1f\u6b63\u662f\u56e0\u4e3a\u4ece\u6765\u6ca1\u63a5\u89e6\u8fc7\u80cc\u540e\u7684\u601d\u60f3\uff0c\u624d\u53ea\u5f97\u8d39\u5c3d\u5fc3\u601d\u80cc\u4f4f\u516c\u5f0f\u3002 \u6211\u4e0d\u6562\u8bf4\u81ea\u5df1\u662f\u8fd9\u5957\u601d\u7ef4\u7684\u4e25\u683c\u8df5\u884c\u8005\uff0c\u4f46\u4e5f\u603b\u5c1d\u8bd5\u5728\u6559\u5b66\u4e2d\u8fd0\u7528\u8fd9\u79cd\u601d\u7ef4\uff0c\u53d1\u52a8\u5e7c\u9f84\u7684\u5b69\u5b50\u4e00\u8d77\u6765\u601d\u8003\u3002 \u6bd4\u5982\u8bf4\u5230\u5347\u964d\u53f7\u7684\u89c4\u5219\uff0c\u6709\u4e9b\u5b69\u5b50\u603b\u662f\u4e0d\u80fd\u8bb0\u4f4f\uff0c\u540c\u4e00\u4e2a\u5c0f\u8282\u5185\u6240\u6709\u4e0e\u524d\u9762\u7684accidental\u76f8\u540c\u7684\u97f3\u8981\u4e00\u8d77\u5347\u964d\u3002\u4ed6\u4eec\u770b\u5230\u5c0f\u8282\u672b\u5c3e\u6ca1\u6709\u6807\u8bb0\u5347\u964d\u7684\u97f3\uff0c\u603b\u662f\u8981\u56de\u5230\u767d\u952e\u4e0a\u5f39\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u5c31\u6309\u7167\u6211\u7684\u903b\u8f91\u7f16\u4e86\u4e00\u4e2a\u5c0f\u6545\u4e8b\uff1a \u6211\u95ee\uff1a\u8fd9\u5f20\u5355\u72ec\u8c31\u5b50\u662f\u4ece\u54ea\u91cc\u6253\u51fa\u6765\u7684\u5462\uff1f \u5b69\uff1a\u6253\u5370\u673a\uff01 \u6211\uff1a\u4f60\u77e5\u9053\u51e0\u767e\u5e74\u524d\u4eba\u4eec\u662f\u8fd8\u6ca1\u53d1\u660e\u51fa\u6253\u5370\u673a\u7684\u5417\uff1f \u5b69\uff1a\uff08\u4f3c\u61c2\u975e\u61c2\u5730\u6447\u5934\u6216\u70b9\u5934\uff09 \u6211\uff1a\u6ca1\u6709\u6253\u5370\u673a\u7684\u65f6\u5019\uff0c\u94a2\u7434\u8c31\u90fd\u662f\u4f5c\u66f2\u5bb6\u7528\u624b\u4e00\u7b14\u7b14\u753b\u51fa\u6765\uff0c\uff08\u638f\u51fa\u4e00\u9875\u5de8\u590d\u6742\u7684\u8c31\uff09\uff0c\u4f60\u89c9\u5f97\u5982\u679c\u4ed6\u4eec\u8981\u753b\u8fd9\u6837\u7684\u8c31\uff0c\u662f\u4e0d\u662f\u5f88\u7d2f\u554a\uff1f \u5b69\uff1a\u5bf9\u554a\uff0c\u80af\u5b9a\u5f88\u7d2f\uff01 \u6211\uff1a\u90a3\u5982\u679c\u4f60\u8ba9\u4ed6\u4eec\u628a\u4e00\u4e2a\u5c0f\u8282\u91cc\u7684\u6bcf\u4e00\u4e2a\u5347\u964d\u53f7\u90fd\u753b\u51fa\u6765\uff0c\u662f\u4e0d\u662f\u66f4\u7d2f\uff1f \u5b69\uff1a\uff08\u70b9\u5934\uff09 \u6211\uff1a\u5982\u679c\u4e00\u4e2a\u5c0f\u8282\u91cc\u6709\u516b\u4e2a\u97f3\u8981\u5347\uff0c\u5982\u679c\u8981\u5199\u516b\u4e2a\u5347\u964d\u53f7\uff0c\u6211\u4eec\u6765\u5199\u5199\u770b\u662f\u4ec0\u4e48\u6837\u5b50\u597d\u4e0d\u597d\uff1f\uff08\u6545\u610f\u753b\u7684\u5de8\u4e11\u5de8\u5bc6\u96c6\uff09\u2026\u2026\u4f60\u770b\u662f\u4e0d\u662f\u5f88\u96be\u770b\uff0c\u751a\u81f3\u770b\u4e0d\u61c2\u6211\u5728\u753b\u4ec0\u4e48\uff1f \u5b69\uff1a\uff08\u8868\u793a\u540c\u610f\uff09 \u6211\uff1a\u6240\u4ee5\u554a\uff0c\u4ed6\u4eec\u5c31\u53d1\u660e\u4e86\u8fd9\u4e2a\u89c4\u5219\uff0c\u5927\u5bb6\u90fd\u9075\u5b88\u8fd9\u4e2a\u89c4\u5219\uff0c\u4f5c\u66f2\u5bb6\u65e2\u8f7b\u677e\uff0c\u5f39\u5f97\u4eba\u4e5f\u770b\u7684\u8f7b\u677e\uff0c\u4f60\u4ee5\u540e\u80fd\u8bb0\u4f4f\u8fd9\u4e2a\u89c4\u5219\u4e86\u5417\uff1f \u5b69\uff1a\u80fd\uff01 \u95ee\u9898\u8fce\u5203\u800c\u89e3\u3002\u5373\u4f7f\u4ed6\u540e\u6765\u4e0d\u5c0f\u5fc3\u5f39\u9519\uff0c\u4e5f\u90fd\u80fd\u9a6c\u4e0a\u81ea\u5df1\u6539\u8fc7\u6765\u3002 \u518d\u6bd4\u5982\uff0c\u5728\u7acb\u5f0f\u7434\u4e0a\u8bb2\u8e0f\u677f\u77e5\u8bc6\u7684\u65f6\u5019\uff0c\u4f1a\u771f\u7684\u62c6\u5f00\u94a2\u7434\uff08\u6761\u4ef6\u5141\u8bb8\u7684\u8bdd\uff09\uff0c\u8ba9\u4ed6\u4eec\u770b\u770b\u53d1\u58f0\u7684\u8fc7\u7a0b\u3001\u539f\u7406\uff0c\u8e29\u6216\u6ca1\u8e29\u8e0f\u677f\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u9020\u6210\u58f0\u97f3\u7684\u4e0d\u540c\u3002\u5982\u679c\u662f\u5927\u4e00\u70b9\u7684\u5b69\u5b50\uff0c\u8fd8\u53ef\u4ee5\u4ece\u62e8\u5f26\u53e4\u94a2\u7434\u548c\u7fbd\u7ba1\u952e\u7434\u5f00\u59cb\uff0c\u8bb2\u8bb2\u94a2\u7434\u7684\u6765\u5386\u548c\u53d1\u5c55\u3002 \u6211\u6562\u8bf4\u6709\u8bb8\u591a\u5728\u5b66\u94a2\u7434\u7684\u6210\u5e74\u4eba\uff0c\u90fd\u4e0d\u6e05\u695a\u94a2\u7434\u53d1\u58f0\u7684\u539f\u7406\uff0c\u56e0\u4e3a\u5728\u4ed6\u4eec\u7684\u903b\u8f91\u4f53\u7cfb\u91cc\uff0c\u6309\u4e86\u952e\uff0c\u5c31\u7b49\u4e8e\u51fa\u58f0\u3002\u5982\u679c\u80fd\u591f\u66f4\u597d\u7684\u4e86\u89e3\u94a2\u7434\u5185\u90e8\u7684\u6784\u9020\u548c\u53d1\u58f0\u539f\u7406\uff0c\u5176\u5b9e\u5bf9\u4ed6\u4eec\u97f3\u4e50\u6027\u7684\u5904\u7406\u3001\u8e0f\u677f\u7684\u4f7f\u7528\u65b9\u9762\uff0c\u90fd\u4f1a\u6709\u660e\u663e\u7684\u8d28\u7684\u98de\u8dc3\u3002\u8fd9\u5c31\u662f\u601d\u7ef4\u4e2d\u5e95\u5c42\u6846\u67b6\u7684\u5de8\u5927\u4f5c\u7528\u3002 \u5b66\u4e60\u7684\u8d28\u91cf\u66f4\u5927\u7a0b\u5ea6\u4e0a\u5173\u4e4e\u4e8e\u5b66\u4e60\u7684\u601d\u7ef4\u6a21\u5f0f\uff0c\u800c\u4e0d\u662f\u5b66\u4e60\u7684\u65f6\u957f\u3002\u65f6\u4ee3\u65e9\u5df2\u4e0d\u540c\u610f\u6211\u4eec\u7ee7\u7eed\u76f8\u4fe1\u7b28\u9e1f\u5148\u98de\u7684\u7bb4\u8a00\uff0c\u6240\u4ee5\u7ec3\u7434\u7ec3\u5f97\u518d\u591a\uff0c\u65b9\u6cd5\u548c\u7406\u5ff5\u9519\u4e86\uff0c\u90fd\u662f\u6d6a\u8d39\u65f6\u95f4\uff1b\u5b66\u4e60\u5b66\u5f97\u518d\u591a\uff0c\u70c2\u7b14\u5934\u548c\u6b7b\u8bb0\u786c\u80cc\uff0c\u4e5f\u96be\u4ee5\u6210\u624d\u3002","title":"4\u3001\u5176\u4ed6\u4f8b\u5b50\u4e0e\u603b\u7ed3"}]}